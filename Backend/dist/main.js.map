{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/addclient/addclient.component.ts","./src/app/addclient/addclient.component.html","./src/app/alert-dialog/alert-dialog.component.ts","./src/app/alert-dialog/alert-dialog.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth-gaurd.service.ts","./src/app/authentication.service.ts","./src/app/client-info/client-info.component.ts","./src/app/client-info/client-info.component.html","./src/app/clients.service.ts","./src/app/clients/clients.component.ts","./src/app/clients/clients.component.html","./src/app/full-image/full-image.component.ts","./src/app/full-image/full-image.component.html","./src/app/indexdb.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/offline/offline.component.ts","./src/app/offline/offline.component.html","./src/app/online-offline-service.service.ts","./src/app/planning/planning.component.ts","./src/app/planning/planning.component.html","./src/app/routes/routes.component.ts","./src/app/routes/routes.component.html","./src/app/settings/settings.component.ts","./src/app/settings/settings.component.html","./src/app/settings/settings.service.ts","./src/app/sidebar-menu/sidebar-menu.component.ts","./src/app/sidebar-menu/sidebar-menu.component.html","./src/app/token-interceptor.service.ts","./src/app/update-client/update-client.component.ts","./src/app/update-client/update-client.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\nimport { ClientsService } from '../clients.service';\r\nimport { Observable, Subject } from \"rxjs\";\r\nimport { interval } from 'rxjs';\r\nimport * as geojson from 'geojson';\r\nimport { Router } from '@angular/router';\r\nimport { GeoJsonTypes } from 'geojson';\r\nimport { UUID } from 'angular2-uuid';\r\nimport { OnlineOfflineServiceService} from '../online-offline-service.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { SettingsService } from '../settings/settings.service';\r\nimport { IndexdbService } from '../indexdb.service';\r\nimport { AlertDialogComponent } from '../alert-dialog/alert-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { identifierModuleUrl } from '@angular/compiler';\r\n\r\n\r\n\r\n\r\nconst incr = 1;\r\n\r\n@Component({\r\n  selector: 'app-addclient',\r\n  templateUrl: './addclient.component.html',\r\n  styleUrls: ['./addclient.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n\r\n})\r\n\r\nexport class AddclientComponent implements AfterViewInit {\r\n  mySector = \"test\";\r\n  progress = 0;\r\n  selected = null;\r\n  user = JSON.parse(localStorage.getItem(\"user\"));\r\n  //from hajar\r\n  ListCodes = [];\r\n  code = { nbr: null, value: null }\r\n  qrResultString: string;\r\n  isShown: boolean = false;\r\n  nfcShown: boolean = false;\r\n  hide: boolean = false;// hidden by default\r\n  test: boolean = false;\r\n  map;\r\n\r\n  loggedUser;\r\n  lat = 33.2607691\r\n  lon = -7.6222771\r\n\r\n  icone = L.icon({\r\n    iconUrl: \"assets/green.png\",\r\n    iconSize: [12, 12],\r\n  });\r\n\r\n  circle: any;\r\n\r\n  percentage = 0\r\n  Status = true\r\n  show = false\r\n  list = []\r\n\r\n  geojsonFeature = {\r\n    type: 'Feature' as GeoJsonTypes, // or type: <GeoJsonTypes> 'Feature',\r\n    properties: {\r\n      name: 'Mohamed',\r\n      amenity: 'Baseball Stadium'\r\n    },\r\n    geometry: {\r\n      type: 'Point' as GeoJsonTypes, // or type: <GeoJsonTypes> 'Point',\r\n      coordinates: [-7.6222771, 33.2608691]\r\n    }\r\n  };\r\n\r\n\r\n  // fadma's variables\r\n  showVerifCodeInput = false\r\n  showNFCWebcam: boolean = false;\r\n  showPDVWebcam: boolean = false;\r\n  public webcamNFCImage = null;\r\n  public webcamPDVImage = null;\r\n  private trigger: Subject<void> = new Subject<void>();\r\n  popupService: any;\r\n\r\n  showcheck() {\r\n    this.Status = true\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n\r\n  codeNFC:null;\r\n  UUid:null;\r\n\r\n  TypeDPV:null;\r\n  detailType:null;\r\n  NomPrenom:null;\r\n  PhoneNumber:null;\r\n  scan:boolean=false;\r\n  nfcObject={Numero_Serie:null,Technologies:null,Type_card:null,UUID:null,NFCPhoto:null}\r\n  clientInfos={UUid:null,codes:[],codeNFC:null, NFCPhoto:null, TypeDPV:null,sector:null,nfc:this.nfcObject,\r\n  NomPrenom:null,detailType:null,userId:null,userRole:null, PhoneNumber:null, PVPhoto:null,Status:\"red\", created_at:null,updated_at:null\r\n }\r\n  latclt\r\n  lonclt\r\n\r\n  // map\r\n\r\n  icon = L.icon({\r\n    iconUrl: \"assets/green.png\",\r\n    iconSize: [12, 12],\r\n  });\r\n\r\n  location_icon = L.icon({\r\n    iconUrl: \"assets/location.png\",\r\n    iconSize: [30, 30]\r\n  });\r\n  markersCluster = new L.MarkerClusterGroup();\r\n\r\n\r\n  \r\n  constructor(private readonly onlineOfflineService: OnlineOfflineServiceService,\r\n    private clientService: ClientsService,\r\n    private _router: Router,\r\n    private aroute: ActivatedRoute,\r\n    private index: IndexdbService,\r\n    private dialog: MatDialog,\r\n    private _setting: SettingsService) { \r\n\r\n      // if(!this.onlineOfflineService.isOnline){\r\n      //   var message = \"You went offline !\";\r\n      //   var btn = \"Continue\"\r\n      //   this.openAlertDialog(message,btn)\r\n      // }else{\r\n      //   var message = \"You'r back online :)!\";\r\n      //   var btn = \"OK\"\r\n      //   this.openAlertDialog(message,btn)\r\n      // }\r\n\r\n    }\r\n\r\n  // ngOnInit(): void {\r\n  //   setInterval(() => this.manageProgress(), 150 )\r\n  //   this.initMap()\r\n  // }\r\n\r\n\r\n  // ngAfterViewInit(): void {\r\n  //   setInterval(() => this.manageProgress(), 150 )\r\n  //   this.initMap()\r\n\r\n  // }\r\n\r\n  // private initMap(): void {\r\n\r\n  //   this.map = L.map('map2', {\r\n  //     center: [this.lat, this.lon],\r\n  //     zoom: 15,\r\n  //     zoomControl: false\r\n  //   });\r\n\r\n  //   const zoomOptions = {\r\n  //     zoomInText: '+',\r\n  //     zoomOutText: '-',\r\n  //   };\r\n\r\n  //   // const zoom = L.control.zoom(zoomOptions);\r\n\r\n\r\n  //   const tiles = L.tileLayer('https://map.novatis.tech/hot/{z}/{x}/{y}.png', {\r\n  //     maxZoom: 30,\r\n  //     minZoom: 0\r\n  //   });\r\n\r\n\r\n\r\n  //   // const lc = L.control.locate(locationControl)\r\n\r\n  //   // lc.addTo(this.map);\r\n  //   // zoom.addTo(this.map);\r\n  //   tiles.addTo(this.map);\r\n  //   this.map.addLayer(this.markersCluster);\r\n  //   this.map.addControl(L.control.zoom({ position: 'bottomleft' }))\r\n\r\n  // }\r\n\r\n\r\n  //  AlertOffOn(){\r\n  //    if (!this.onlineOfflineService.isOnline){\r\n  //     let popup = this.popupService.showPopupOverlay(\"Saved successfully\");\r\n  //     setTimeout(() => {\r\n  //       popup.hide();\r\n  //     }, 2500);\r\n  //    }else{\r\n  //     let popup = this.popupService.showPopupOverlay(\"Saved successfully\");\r\n  //     setTimeout(() => {\r\n  //       popup.hide();\r\n  //     }, 2500);\r\n  //    }\r\n  //  }\r\n\r\n  manageProgress() {\r\n    if (this.progress === 100) {\r\n      this.progress = 0;\r\n    } else {\r\n      this.progress = this.progress + incr;\r\n    }\r\n  }\r\n\r\n  clearResult(): void {\r\n    this.qrResultString = null;\r\n  }\r\n\r\n  toggleShow(nbr: number, resultString: string) {\r\n    console.log(nbr);\r\n    console.log(resultString);\r\n    console.log(this.ListCodes);\r\n\r\n    this.isShown = !this.isShown;\r\n\r\n    if (nbr === 1) {\r\n      this.code = { nbr: nbr, value: resultString }\r\n      this.upsert(this.ListCodes, this.code)\r\n      this.qrResultString = null;\r\n\r\n    }\r\n    if (nbr === 2) {\r\n      this.code = { nbr: nbr, value: resultString }\r\n      this.upsert(this.ListCodes, this.code)\r\n      this.qrResultString = null;\r\n\r\n    }\r\n    if (nbr === 3) {\r\n      this.code = { nbr: nbr, value: resultString }\r\n      this.upsert(this.ListCodes, this.code)\r\n      this.qrResultString = null;\r\n\r\n    }\r\n    if (nbr === 4) {\r\n      this.code = { nbr: nbr, value: resultString }\r\n      this.upsert(this.ListCodes, this.code)\r\n      this.qrResultString = null;\r\n\r\n    }\r\n\r\n    //this.code={nbr:nbr,value: resultString}\r\n    //this.upsert(this.ListCodes,this.code)\r\n  }\r\n\r\n\r\n\r\n  upsert(array, item) { // (1)\r\n    const i = array.findIndex(_item => _item.nbr === item.nbr);\r\n    if (i > -1) array[i] = item; // (2)\r\n    else array.push(item);\r\n  }\r\n  \r\n  inter;\r\n\r\n  onCodeResult(resultString: string) {\r\n    this.qrResultString = resultString;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // setInterval(() => this.manageProgress(), 150)\r\n    this.loggedUser = JSON.parse(localStorage.getItem(\"user\"));\r\n    this.initMap();\r\n    this._setting.getTimeSMS().subscribe(res => this.timeLeft = res.details.time)\r\n    this.aroute.paramMap.subscribe(params => {\r\n      this.mySector = params.get('sector')\r\n      console.log(\"mysector\" + this.mySector)\r\n      this.clientInfos.sector = this.mySector\r\n    })\r\n    // this.getLocation()\r\n    // this.getLo();\r\n\r\n  }\r\n  acc = 1222000;\r\n\r\n  private initMap(): void {\r\n\r\n    this.Status = true\r\n    this.testTimer()\r\n\r\n    this.map = L.map('map2', {\r\n      center: [this.lat, this.lon],\r\n      zoom: 14,\r\n      zoomControl: true\r\n    });\r\n\r\n    const tiles = L.tileLayer('https://map.novatis.tech/hot/{z}/{x}/{y}.png', {\r\n      maxZoom: 30,\r\n      minZoom: 0\r\n    });\r\n\r\n    tiles.addTo(this.map);\r\n\r\n    var location_icon = L.icon({\r\n      iconUrl: \"assets/location.png\",\r\n      iconSize: [30, 30]\r\n    });\r\n    var marker = L.marker([this.lat, this.lon], { icon: location_icon })\r\n\r\n\r\n\r\n    this.inter = interval(1000).subscribe(x => {\r\n\r\n      if (navigator.geolocation) {\r\n        if (this.percentage == 100) {\r\n          this.inter.unsubscribe();\r\n          this.clientInfos[\"lat\"]=this.latclt\r\n          this.clientInfos[\"lon\"]=this.lonclt\r\n          // console.log(this.clientInfos)\r\n        }\r\n\r\n        var options = {\r\n          enableHighAccuracy: false,\r\n          timeout: 5000,\r\n          maximumAge: 2000\r\n        };\r\n        // console.log(this.percentage)\r\n        var geoId = navigator.geolocation.watchPosition((position: GeolocationPosition) => {\r\n\r\n          if (position) {\r\n            // console.log(\"Latitude: \" + position.coords.latitude +\r\n              // \" // Longitude: \" + position.coords.longitude);\r\n              var newlat=position.coords.latitude\r\n              var newLon=position.coords.longitude;\r\n\r\n              // if (position.coords.accuracy > 10) {\r\n              //   console.log(\"The GPS accuracy isn't good enough\");\r\n              // }\r\n              if(newlat!=this.lat || newLon!=this.lat){\r\n                //console.log(\"nmi rah tbdl\")\r\n                // this.percentage=0\r\n                this.lat = newlat\r\n                this.lon = newLon\r\n                this.list.push(position)\r\n                // console.log(this.list)\r\n                // console.log(\"Accuracy:\"+position.coords.accuracy)\r\n\r\n                if (position.coords.accuracy<this.acc){\r\n                  console.log(\"********** Accuracy:\"+position.coords.accuracy)\r\n                  this.acc= position.coords.accuracy\r\n                  this.lat=position.coords.latitude\r\n                  this.lon=position.coords.longitude\r\n                  this.latclt= position.coords.latitude\r\n                  this.lonclt=position.coords.longitude\r\n                }\r\n                // console.log(this.lat)\r\n                // console.log(this.lon)\r\n                this.map.removeLayer(marker);\r\n                this.show=false\r\n                this.Status=true\r\n                marker = new (L.marker as any)([this.lat,this.lon],{icon:location_icon}).addTo(this.map);\r\n              }\r\n              console.log(this.lat)\r\n              console.log(this.lon)\r\n              this.map.removeLayer(marker);\r\n              this.show = false\r\n              this.Status = true\r\n              marker = new (L.marker as any)([this.lat, this.lon], { icon: location_icon }).addTo(this.map);\r\n            \r\n          }\r\n        },\r\n          (error: GeolocationPositionError) => console.log(error), options);\r\n        // console.log('Clear watch called');\r\n        // window.navigator.geolocation.clearWatch(geoId);\r\n      } else {\r\n        alert(\"Geolocation is not supported by this browser.\");\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  getLo() {\r\n    // var marker = L.geoJSON(this.geojsonFeature, {\r\n    //   pointToLayer: (point, latlon) => {\r\n    //     return L.marker(latlon, { icon: this.icone })\r\n    //   }\r\n    // });\r\n    // marker.addTo(this.map)\r\n    this.circle = L.circle([this.lat, this.lon], 20).addTo(this.map);\r\n    L.Circle.include({\r\n      contains: function (latLng) {\r\n        return this.getLatLng().distanceTo(latLng) < this.getRadius();\r\n      }\r\n    });\r\n\r\n    this.map.fitBounds(this.circle.getBounds());\r\n\r\n  }\r\n\r\n\r\n\r\n  testTimer() {\r\n    this.percentage = 0\r\n    interval(300).subscribe(x => {\r\n      if (this.percentage < 100) {\r\n        this.percentage += 4\r\n      }\r\n    });\r\n  }\r\n\r\n  addNewComponent() {\r\n    this.show = true\r\n    this.Status = false\r\n  }\r\n\r\n  CheckCodes() {\r\n    this.nfcShown = !this.nfcShown;\r\n    this.test = true;\r\n    console.log(this.ListCodes)\r\n    this.clientInfos.codes = this.ListCodes\r\n  }\r\n\r\n\r\n  UUID_nfc;\r\n  Read() {\r\n    console.log(\"read\")\r\n    //this.clientInfos.codeNFC=12345\r\n    this.clientService.getNFC().subscribe(\r\n      res => {\r\n              this.clientInfos.nfc.Numero_Serie=res.Numero_Serie;\r\n              this.UUID_nfc=res.UUID;\r\n              this.clientInfos.nfc.Technologies=res.Technologies\r\n              this.clientInfos.nfc.Type_card=res.Type_card\r\n              this.clientInfos.nfc.UUID=res.UUID;\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  getCoordinates() {\r\n\r\n  }\r\n\r\n  ///******************* SMS vars (hafsa) *********************//////////\r\n  disbale_sms = false;\r\n  verification_code = null;\r\n  timeLeft: number = 5;\r\n  interval_validation;\r\n  status;\r\n  display;\r\n  codeSMS\r\n  ///send sms (Nano)\r\n  SendSMS(phone) {\r\n    this.clientService.getSMS(phone).subscribe(\r\n      res => {\r\n        console.log(res)\r\n        this.verification_code = res.code\r\n      });\r\n  }\r\n  ;\r\n  Verify(code: string) {\r\n    this.disbale_sms = true;\r\n    this.clientInfos.PhoneNumber = this.PhoneNumber\r\n    this.timer(this.timeLeft);\r\n    this.SendSMS(this.PhoneNumber);\r\n  }\r\n\r\n  VerifySMS() {\r\n    if (this.verification_code === this.codeSMS) {\r\n      this.status = \"the code is correct\"\r\n    } else {\r\n      this.status = \"the code is incorrect\"\r\n    }\r\n  }\r\n\r\n  timer(minute) {\r\n    // let minute = 1;\r\n    let seconds: number = minute * 60;\r\n    let textSec: any = \"0\";\r\n    let statSec: number = 60;\r\n\r\n    const prefix = minute < 10 ? \"0\" : \"\";\r\n\r\n    const timer = setInterval(() => {\r\n      seconds--;\r\n      if (statSec != 0) statSec--;\r\n      else statSec = 59;\r\n\r\n      if (statSec < 10) {\r\n        textSec = \"0\" + statSec;\r\n      } else textSec = statSec;\r\n\r\n      this.display = `${prefix}${Math.floor(seconds / 60)}:${textSec}`;\r\n\r\n      if (seconds == 0) {\r\n        console.log(\"finished\");\r\n        clearInterval(timer);\r\n        this.verification_code = null;\r\n        this.disbale_sms = false;\r\n      }\r\n    }, 1000);\r\n  }\r\n  /////////////////////////*******************///////////////////////////////////////\r\n  version = 6\r\n\r\n  Send() {\r\n    // this.clientInfos.UUid=UUID.UUID();\r\n    this.clientInfos.PhoneNumber=this.PhoneNumber\r\n    this.clientInfos.NomPrenom=this.NomPrenom\r\n    this.clientInfos.TypeDPV=this.TypeDPV;\r\n    this.clientInfos.detailType = this.detailType;\r\n    this.clientInfos.userId = this.user._id;\r\n    this.clientInfos.userRole = this.user.role;\r\n    /*if(this.clientInfos.codeNFC===null){\r\n      this.clientInfos[\"Status\"]=\"red\"\r\n    }\r\n    else{\r\n      this.clientInfos[\"Status\"]=\"green\"\r\n    }*/\r\n    this.clientInfos.created_at = Date.now();\r\n    this.clientInfos.updated_at = Date.now()\r\n    this.clientInfos.Status=\"red_white\"\r\n    console.log(this.clientInfos)\r\n    if (!this.onlineOfflineService.isOnline) {\r\n      this.clientService.addTodo(this.clientInfos);\r\n      this._router.navigate(['map'])\r\n    }else{\r\n   /* this.clientService.SendClient(this.clientInfos).subscribe(res =>{\r\n      console.log(\"response from the API \"+res)*/\r\n   /*this.clientInfos={UUid:null,nfc:null,codes:[],codeNFC:null, NFCPhoto:null, TypeDPV:null,sector:null,\r\n      NomPrenom:null, PhoneNumber:null, detailType:null,userId:null, userRole:null, PVPhoto:null,Status:\"red\",created_at:null,updated_at:null}\r\n    */\r\n    this.clientService.SendClient(this.clientInfos).subscribe(res => { console.log(\"res\")});\r\n      console.log(\"resss-----\")\r\n      //console.log(res)\r\n      console.log(\"res----\")\r\n      this.index.ClearData();\r\n      var db; var transaction\r\n      var request = window.indexedDB.open(\"off\", this.version)\r\n      request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n        console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n      };\r\n      request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n        db = event.target.result;\r\n        console.log(\"$$$$$$$$$$$ success Add client$$$$$$$$$$$$$$$$$$ *******************************\")\r\n        var allclient = []\r\n        this.clientService.getAllClient().subscribe(res => {\r\n          console.log(\" \\n get all element\")\r\n          res.forEach(element =>{\r\n            console.log(\"----------------------------------------------------------------\")\r\n            console.log(res)\r\n            var geo = { _id: element._id, Valeur: JSON.stringify(element.geometry) }\r\n            allclient.push(geo)\r\n            transaction = db.transaction(['data'], 'readwrite');\r\n            var objectStore = transaction.objectStore(\"data\");\r\n            var request = objectStore.add(geo)\r\n            request.onsuccess =  (event) => {\r\n              console.log(\"****************** done Adding to Database \\n Add Client \\n *******************\")\r\n              this._router.navigate(['map'])\r\n              //.then(() => {\r\n                //window.location.reload();\r\n             // });\r\n            };\r\n          });\r\n        });\r\n      }\r\n \r\n\r\n   /* this.clientInfos = {\r\n      UUid:null,codes: [], codeNFC: null, NFCPhoto: null, TypeDPV: null, sector: null,\r\n      NomPrenom: null, PhoneNumber: null, detailType: null, userId: null, userRole: null, PVPhoto: null, Status: \"red\", created_at:null,updated_at:null\r\n    }*/\r\n\r\n  }\r\n\r\n  }\r\n\r\n  ///////////////////////\r\n  // fadma's code\r\n\r\n  toggleNFCWebcam() {\r\n    this.showNFCWebcam = !this.showNFCWebcam;\r\n  }\r\n\r\n\r\n  displayNFCam() {\r\n    this.showNFCWebcam = !this.showNFCWebcam;\r\n  }\r\n\r\n  triggerSnapshot(): void {\r\n    this.trigger.next();\r\n  }\r\n\r\n  // handleImage(webcamImage): void {\r\n  //   console.info('Saved webcam image', webcamImage);\r\n  //   this.webcamImage = webcamImage;\r\n  //   if(this.camera1) {this.clientInfos.NFCPhoto= webcamImage}\r\n  //   if(this.camera2) {this.clientInfos.PVPhoto = webcamImage}\r\n\r\n  //   console.log(this.webcamNFCImage.imageAsDataUrl);\r\n  // }\r\n\r\n  get triggerObservable(): Observable<void> {\r\n    return this.trigger.asObservable();\r\n  }\r\n\r\n  handleNFCImage(webcamNFCImage): void {\r\n    console.info('received webcam image', webcamNFCImage);\r\n    this.webcamNFCImage = webcamNFCImage;\r\n    this.clientInfos.nfc.NFCPhoto = webcamNFCImage.imageAsDataUrl;\r\n    console.log(this.clientInfos)\r\n\r\n  }\r\n\r\n  togglePDVWebcam() {\r\n    this.showPDVWebcam = !this.showPDVWebcam;\r\n  }\r\n\r\n\r\n  displayPDVcam() {\r\n    this.showPDVWebcam = !this.showPDVWebcam;\r\n  }\r\n\r\n  handlePDVImage(webcamPDVImage) {\r\n    console.info('received webcam image', webcamPDVImage);\r\n    this.webcamPDVImage = webcamPDVImage;\r\n    this.clientInfos.PVPhoto = webcamPDVImage.imageAsDataUrl;\r\n  }\r\n\r\n  openAlertDialog(msg,btn){\r\n    const dialogRef = this.dialog.open(AlertDialogComponent,{\r\n      data:{\r\n        message: msg,\r\n        buttonText: {\r\n          ok: btn,\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"content-body\">\r\n\r\n    \r\n    \r\n    <ng-container *ngIf=\"percentage == 100; else elseTemplate\">\r\n        <p>Position Fixed</p>\r\n    </ng-container>\r\n    <ng-template #elseTemplate>\r\n        <p>Fixing Position...</p>\r\n    </ng-template>\r\n\r\n     <div >   \r\n        <pre>pos collectés: {{list.length}}</pre>\r\n        <pre>Accuracy: {{acc}}</pre>\r\n    </div>\r\n\r\n    \r\n\r\n    <div ng-app ng-controller=\"ApplicationController\" class=\"progress-cantainer\">\r\n        <mat-progress-bar mode=\"determinate\" [value]=\"percentage\"></mat-progress-bar>\r\n        <span style=\"position: absolute; top: 0em;\" [ngStyle]=\"{'left': percentage + '%'}\">{{percentage}}%</span>\r\n    </div>\r\n\r\n   \r\n    <div class=\"map-container\">\r\n        <div id=\"map2\"></div>\r\n    </div>\r\n\r\n    <div>\r\n        <button mat-button class=\"btn-yellow\" (click)=\"showcheck()\" [disabled]=\"(percentage!=100) ||  !Status\">Next</button>\r\n    </div>\r\n<!-- \r\n    <button mat-button class=\"btn-yellow\">\r\n        Recalculate the position\r\n    </button> -->\r\n\r\n    \r\n    <div class=\"container\" id=\"checkcodes\" *ngIf=\"hide\">\r\n        <div class=\"checkcodes-fields\">\r\n            <div class=\"scan-field\">\r\n                <label class=\"input-label\">Code Centrale Danoune : </label>\r\n                <div>\r\n                    <button mat-button class=\"btn-green\" [disabled]=\"test\" (click)=\"toggleShow(1,qrResultString);\">Scan</button>\r\n                    <div *ngFor=\"let code of ListCodes\" class=\"qr-container\">\r\n                        <span *ngIf=\"code.nbr == 1\">{{ code.value}}</span>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n            <div class=\"scan-field\">\r\n                <label class=\"input-label\">Code Coca Cola : </label>\r\n                <div>\r\n                    <button mat-button class=\"btn-green\" [disabled]=\"test\" (click)=\"toggleShow(2,qrResultString)\">Scan</button>\r\n                    <div *ngFor=\"let code of ListCodes\" class=\"qr-container\">\r\n                        <span *ngIf=\"code.nbr == 2\">{{code.value}}</span>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n            <div class=\"scan-field\">\r\n                <label class=\"input-label\">Code FGD : </label>\r\n                <div>\r\n                    <button mat-button class=\"btn-green\" [disabled]=\"test\" (click)=\"toggleShow(3,qrResultString)\">Scan</button>\r\n                    <div *ngFor=\"let code of ListCodes\" class=\"qr-container\">\r\n                        <span *ngIf=\"code.nbr == 3\">{{ code.value}}</span>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        <div id=\"divshow\" *ngIf=\"isShown && !scan\" class=\"Scan-container\">\r\n            <p>Scanning...</p> \r\n            <zxing-scanner Class=\"small-video\" (scanSuccess)=\"onCodeResult($event)\"></zxing-scanner>\r\n            <section class=\"results\" *ngIf=\"qrResultString\">\r\n                <div>\r\n                    <small>Result {{code.nbr}} : </small>\r\n                    <strong>{{ qrResultString }}</strong>\r\n                </div>\r\n                <button mat-button class=\"btn-green\" (click)=\"toggleShow(code.nbr,qrResultString)\">Done</button>\r\n            </section>\r\n        </div>\r\n        <button mat-button class=\"btn-yellow\" [disabled]=\"test\" (click)=\"CheckCodes()\">Check codes</button>\r\n        \r\n        \r\n    </div>\r\n\r\n    <div class=\"container\" id=\"nfc\" *ngIf=\"nfcShown\">\r\n\r\n        <div class=\"inputs-container\">\r\n            <div class=\"nfc\" *ngIf=\"loggedUser.role == 'Auditor'\">\r\n                <div class=\"scan-field\">\r\n                    <label class=\"input-label\">NFC card puce : </label>\r\n                    <button mat-button class=\"btn-green\" (click)=\"Read()\">Read</button>\r\n                    <div *ngIf=\"clientInfos.nfc.UUID!= null\" class=\"nfc-div\">\r\n                        <span>UUID:</span><p>{{clientInfos.nfc.UUID}}</p>\r\n                        <span>Numero_Serie:</span><p>{{clientInfos.nfc.Numero_Serie}}</p>\r\n                        <span>Type_card:</span><p>{{clientInfos.nfc.Type_card}}</p>\r\n                        <span>Technologies:</span><p>{{clientInfos.nfc.Technologies}}</p>\r\n                        {{UUID_nfc}}\r\n                    </div>\r\n                </div>\r\n                <div class=\"scan-field\">\r\n                    <label class=\"input-label\">Qr Code : </label>\r\n                    <div>\r\n                        <button mat-button class=\"btn-green\" (click)=\"toggleShow(4,qrResultString);scan=!scan\">Scan</button>\r\n                        <div *ngFor=\"let code of ListCodes\" class=\"qr-container\">\r\n                            <span *ngIf=\"code.nbr == 4\">{{ code.value}}</span>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div *ngIf=\"isShown && scan \" class=\"Scan-container\">\r\n                    <zxing-scanner Class=\"small-video\" (scanSuccess)=\"onCodeResult($event)\"></zxing-scanner>\r\n            \r\n                    <section class=\"results\" *ngIf=\"qrResultString\">\r\n                      <div>\r\n                        <small>Result: </small>\r\n                        <strong>{{ qrResultString }}</strong>\r\n                      </div>\r\n                      <button mat-button class=\"btn-green\" (click)=\"toggleShow(code.nbr,qrResultString)\">Done</button>\r\n                    </section>\r\n                </div>\r\n                <div class=\"scan-field\">\r\n                    <label class=\"input-label\">NFC photo : </label>\r\n                    <button mat-button class=\"btn-green\" (click)=\"displayNFCam();\" ><mat-icon>camera_alt</mat-icon></button>\r\n                </div>\r\n                <div *ngIf=\"showNFCWebcam\" class=\"Scan-container\">\r\n                    <webcam [height]=\"200\"\r\n                            [width]=\"500\"\r\n                            [trigger]=\"triggerObservable\"\r\n                            (imageCapture)=\"handleNFCImage($event)\">\r\n                    </webcam>\r\n                    <div class=\"reas-nfc\">\r\n                        <button mat-button class=\"btn-green\"  (click)=\"triggerSnapshot();\">Click Here</button>\r\n                        <button mat-button class=\"btn-green\"  (click)=\"toggleNFCWebcam();\">Close Camera</button>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div *ngIf=\"webcamNFCImage\" class=\"Scan-container\">\r\n                    <div class=\"snapshot\" >\r\n                      <img [height]=\"200\"\r\n                           [width]=\"200\" [src]=\"webcamNFCImage.imageAsDataUrl\" style=\"border-radius: 8px;\"/>\r\n                    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"pdv\">\r\n\r\n                <div class=\"field\">\r\n                    <mat-form-field>\r\n                        <mat-select placeholder=\"PDV Type*\" panelClass=\"selectPanel2\" [(ngModel)]=\"TypeDPV\" [(value)]=\"selected\">\r\n                            <mat-option value=\"Detail\">Detail</mat-option>\r\n                            <mat-option value=\"Gros\">Gros</mat-option>\r\n                            <mat-option value=\"Demi Gros\">Demi Gros</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"field\" *ngIf=\"selected == 'Detail'\">\r\n                    <mat-form-field>\r\n                        <mat-select placeholder=\"PDV Detail Type*\" panelClass=\"selectPanel2\" [(ngModel)]=\"detailType\">\r\n                            <mat-option value=\"Alimentation\">Alimentation</mat-option>\r\n                            <mat-option value=\"Superette\">Superette</mat-option>\r\n                            <mat-option value=\"Aattar\">Aattar</mat-option>\r\n                            <mat-option value=\"Fruits sec\">Fruits sec</mat-option>\r\n                            <mat-option value=\"Boundif\">Boundif</mat-option>\r\n                            <mat-option value=\"Parfumerie\">Parfumerie</mat-option>\r\n                            <mat-option value=\"Kioske\">Kioske</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                    \r\n                <div class=\"field\">\r\n                    <mat-form-field>\r\n                        <mat-label>First & Last Name*</mat-label>\r\n                        <input matInput placeholder=\"Typing...\" [(ngModel)]=\"NomPrenom\"/>\r\n                    </mat-form-field>\r\n                </div>\r\n                \r\n                     \r\n                <div class=\"field\">\r\n                    <mat-form-field>\r\n                        <mat-label>Phone number*</mat-label>\r\n                        <input matInput placeholder=\"+212\" [(ngModel)]=\"PhoneNumber\"/>\r\n                    </mat-form-field>\r\n    \r\n                    <button mat-button class=\"btn-green\" [disabled]=\"disbale_sms\" (click)=\"Verify('code'); showVerifCodeInput= true\">Verify</button>\r\n                {{display}}\r\n                </div>\r\n\r\n                <div class=\"field\" *ngIf=\"showVerifCodeInput\">\r\n                    <mat-form-field>\r\n                        <input matInput placeholder=\"code SMS\" name=\"codeSMS\" [(ngModel)]=\"codeSMS\"/>\r\n                    </mat-form-field>\r\n                    <button (click)=\"VerifySMS()\">OK</button>\r\n                    {{status}}\r\n                </div>\r\n                <div class=\"field\">\r\n                    <mat-label class=\"input-label\">PV photo : </mat-label>\r\n                    <button mat-button class=\"btn-green\" (click)=\"displayPDVcam()\"><mat-icon>camera_alt</mat-icon></button>    \r\n                </div>\r\n\r\n                <div  *ngIf=\"showPDVWebcam\" class=\"Scan-container\">\r\n                    <webcam [height]=\"200\"\r\n                            [width]=\"500\"\r\n                            [trigger]=\"triggerObservable\"\r\n                            (imageCapture)=\"handlePDVImage($event)\">\r\n                    </webcam>\r\n                    <div class=\"reas-nfc\">\r\n                        <button mat-button class=\"btn-green\"  (click)=\"triggerSnapshot()\">Click Here</button>\r\n                        <button mat-button class=\"btn-green\"  (click)=\"togglePDVWebcam()\">Close Camera</button>\r\n                    </div>\r\n                </div>\r\n                \r\n        \r\n                  <!--          <button class=\"actionBtn\" (click)=\"triggerSnapshot();\">-->\r\n                  <!--            Click Here and take the Shot</button>-->\r\n                  <div  *ngIf=\"webcamPDVImage\" class=\"Scan-container\">\r\n        \r\n                    <div class=\"snapshot\">\r\n                      <img [height]=\"200\"\r\n                           [width]=\"200\" [src]=\"webcamPDVImage.imageAsDataUrl\"/>\r\n                    </div>\r\n                  </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <button mat-button class=\"btn-yellow\" (click)=\"Send()\">Send</button>  \r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {  MAT_DIALOG_DATA, MatDialogRef, MatDialog} from '@angular/material/dialog';\r\nimport { Inject } from '@angular/core'; \r\n\r\n@Component({\r\n  selector: 'app-alert-dialog',\r\n  templateUrl: './alert-dialog.component.html',\r\n  styleUrls: ['./alert-dialog.component.css']\r\n})\r\nexport class AlertDialogComponent implements OnInit {\r\n\r\n  message: string = \"Are you sure?\"\r\n  confirmButtonText = \"Yes\"\r\n  cancelButtonText = \"Cancel\"\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private data: any,\r\n    private dialogRef: MatDialogRef<AlertDialogComponent>) { \r\n\r\n      if(data){\r\n        this.message = data.message || this.message;\r\n        if (data.buttonText) {\r\n          this.confirmButtonText = data.buttonText.ok || this.confirmButtonText;\r\n        }\r\n      }\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onConfirmClick(): void {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n}\r\n","<mat-dialog-content>\r\n\t<p>\r\n\t\t{{message}}\r\n\t</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"center\">\r\n\t<!-- <button mat-raised-button mat-dialog-close tabindex=\"-1\">{{cancelButtonText}}</button> -->\r\n    <button mat-raised-button style=\"background-color:#27AE61; color: white;\" (click)=\"onConfirmClick()\" tabindex=\"1\">{{confirmButtonText}}</button>\r\n</mat-dialog-actions>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SidebarMenuComponent } from './sidebar-menu/sidebar-menu.component';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { MapComponent } from './map/map.component';\r\nimport { ClientsComponent } from './clients/clients.component';\r\nimport { RoutesComponent } from './routes/routes.component';\r\nimport { PlanningComponent } from './planning/planning.component';\r\nimport { AuthGaurdService } from './auth-gaurd.service';\r\nimport { AddclientComponent } from './addclient/addclient.component';\r\nimport { UpdateClientComponent } from './update-client/update-client.component';\r\nimport { OfflineComponent } from './offline/offline.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\n\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  {\r\n    path:'login',\r\n    component:LoginComponent\r\n  },\r\n  {\r\n    path: 'menu', \r\n    component: SidebarMenuComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'map', component: MapComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'clients', component: ClientsComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'routes', component: RoutesComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'planning', component: PlanningComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'addclient/:sector', component: AddclientComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'addclient', component: AddclientComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'updateclient', component: UpdateClientComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'offline', component: OfflineComponent,\r\n  },\r\n  {\r\n    path: 'settings', component: SettingsComponent,\r\n    canActivate: [AuthGaurdService]\r\n  }\r\n  // {\r\n  //   path: 'upper', component: UpperMenuComponent\r\n  // }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n  constructor(private _auth:AuthenticationService){\r\n  \r\n  }\r\n  \r\n  getLogged(){\r\n    return this._auth.loggedIn()\r\n  }\r\n  \r\n  getusername(){\r\n    \r\n  }\r\n}\r\n","<div class=\"app-view\">\r\n    <!-- <app-upper-menu></app-upper-menu> -->\r\n    <app-sidebar-menu *ngIf=\"getLogged()\"></app-sidebar-menu>\r\n    <router-outlet></router-outlet>\r\n<!--  <app-addclient></app-addclient>-->\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule}  from '@angular/material/icon';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select'\r\nimport { LoginComponent } from './login/login.component';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { SidebarMenuComponent } from './sidebar-menu/sidebar-menu.component';\r\nimport { ClientInfoComponent } from './client-info/client-info.component';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MapComponent } from './map/map.component';\r\nimport { ClientsComponent } from './clients/clients.component';\r\nimport { RoutesComponent } from './routes/routes.component';\r\nimport { PlanningComponent } from './planning/planning.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { AuthGaurdService } from './auth-gaurd.service';\r\nimport { MatMenuModule} from '@angular/material/menu';\r\nimport { AddclientComponent } from './addclient/addclient.component';\r\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {WebcamModule} from 'ngx-webcam';\r\nimport { FormsModule } from '@angular/forms'\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { TokenInterceptorService } from './token-interceptor.service';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { UpdateClientComponent } from './update-client/update-client.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { OfflineComponent } from './offline/offline.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { FullImageComponent } from './full-image/full-image.component';\r\nimport { AlertDialogComponent } from './alert-dialog/alert-dialog.component';\r\nimport {CommonModule} from '@angular/common';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SidebarMenuComponent,\r\n    LoginComponent,\r\n    MapComponent,\r\n    ClientsComponent,\r\n    RoutesComponent,\r\n    PlanningComponent,\r\n    AddclientComponent,\r\n    ClientInfoComponent,\r\n    UpdateClientComponent,\r\n    OfflineComponent,\r\n    SettingsComponent,\r\n    FullImageComponent,\r\n    AlertDialogComponent\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatButtonModule,\r\n    HttpClientModule,\r\n    MatListModule,\r\n    MatDividerModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    RouterModule,\r\n    MatMenuModule,\r\n    AppRoutingModule,\r\n    MatGridListModule,\r\n    FormsModule ,\r\n    ZXingScannerModule,\r\n    MatFormFieldModule,\r\n    WebcamModule,\r\n    MatProgressBarModule,\r\n    MatSelectModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    MatFormFieldModule,\r\n    MatDialogModule,\r\n    CommonModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', {\r\n      enabled: true,\r\n      // Register the ServiceWorker as soon as the app is stable\r\n      // or after 30 seconds (whichever comes first).\r\n      // registrationStrategy: 'registerWhenStable:30000'\r\n    })\r\n\r\n  ],\r\n  providers: [\r\n    AuthenticationService, \r\n    AuthGaurdService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true\r\n    }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGaurdService  implements CanActivate {\r\n\r\n  constructor(private _authService: AuthenticationService,\r\n    private _router: Router) { }\r\n\r\n  canActivate(): boolean {\r\n    if (this._authService.loggedIn()) {\r\n      console.log('true')\r\n      return true\r\n    } else {\r\n      console.log('false')            \r\n      this._router.navigate(['/login']).then(() => {\r\n        window.location.reload();\r\n     });\r\n      return false\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { IndexdbService } from './indexdb.service';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  private _UsersUrl = \"https://stalker-lite.herokuapp.com/api1/login\"\r\n\r\n\r\n  constructor(private http: HttpClient,\r\n    private _router: Router,\r\n    private _index: IndexdbService) { }\r\n\r\n  getUserLogin(data) {\r\n    return this.http.post<any>(this._UsersUrl, data)\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('token')\r\n  }\r\n\r\n  loggedIn() {\r\n    return !!localStorage.getItem('token')\r\n  }\r\n  //////////************** Logout **************/////////////////\r\n  logoutUser() {\r\n    localStorage.removeItem('token')\r\n    //this._index.ClearData()\r\n    //this._index.ClearDataSector()\r\n    this.ClearData();\r\n\r\n  }\r\n  db; ///database\r\n  version = 6; ///version of the database\r\n  ClearData() {\r\n    var request = window.indexedDB.open(\"off\", this.version)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      this.db = event.target.result;\r\n      console.log(\"success inside Clear\")\r\n      console.log(this.db)\r\n      var transaction = this.db.transaction(['data'], 'readwrite');\r\n      var objectStore = transaction.objectStore(\"data\");\r\n      var objectStoreRequest = objectStore.clear();\r\n      objectStoreRequest.onsuccess = (event) => {\r\n        console.log(\"Data Cleared\")\r\n        this.ClearDataSector()\r\n      }\r\n    }\r\n  }\r\n  ClearDataSector() {\r\n    var request = window.indexedDB.open(\"off\", this.version)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      this.db = event.target.result;\r\n      console.log(\"success Sector inside Clear\")\r\n      console.log(this.db)\r\n      var transaction = this.db.transaction(['sector'], 'readwrite');\r\n      var objectStore = transaction.objectStore(\"sector\");\r\n      var objectStoreRequest = objectStore.clear();\r\n      objectStoreRequest.onsuccess = (event) => {\r\n        console.log(\"Data Sector Cleared\")\r\n        this._router.navigate(['login']).then(() => {\r\n          window.location.reload();\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {  MAT_DIALOG_DATA, MatDialogRef, MatDialog} from '@angular/material/dialog';\r\nimport { Inject } from '@angular/core'; \r\nimport { ClientsService } from '../clients.service';\r\nimport { MapComponent } from '../map/map.component';\r\nimport { Router } from '@angular/router';\r\nimport { FullImageComponent } from '../full-image/full-image.component';\r\nimport { AlertDialogComponent } from '../alert-dialog/alert-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-client-info',\r\n  templateUrl: './client-info.component.html',\r\n  styleUrls: ['./client-info.component.css']\r\n})\r\nexport class ClientInfoComponent implements OnInit {\r\n\r\n\r\n  loggedUser;\r\n  clientOfSeller;\r\n  clientOfAuditor;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private clientService: ClientsService,\r\n    public dialogRef: MatDialogRef<MapComponent>,\r\n    public dialogRef2: MatDialogRef<FullImageComponent>,\r\n    public dialog: MatDialog,\r\n    public _router: Router ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"############################ Wa client\")\r\n    console.log(this.data)\r\n    this.loggedUser = JSON.parse(localStorage.getItem(\"user\"))\r\n    if(this.loggedUser.role == 'Admin' || this.loggedUser.role == 'Back Office'){\r\n    this.clientService.getClientBySeller(this.data.geometry.coordinates[1],this.data.geometry.coordinates[0]).subscribe(res=>{\r\n      this.clientOfSeller = res;\r\n      console.log(\"!!!!!!!!!!!!!!!! Seller !!!!!!!!!!!!!!\")\r\n      console.log(res)\r\n      this.clientService.getClientByAuditor(this.data.geometry.coordinates[1],this.data.geometry.coordinates[0]).subscribe(res=>{\r\n        this.clientOfAuditor = res;\r\n        console.log(\"!!!!!!!!!!!!!!!! Auditor !!!!!!!!!!!!!!\")\r\n        console.log(res)\r\n      })\r\n    })\r\n  }else{\r\n    console.log(\"############################ Wa client\")\r\n    console.log(this.data)\r\n  }\r\n    \r\n    \r\n  }\r\n\r\n  openImage(url){\r\n    this.dialogRef2 = this.dialog.open(FullImageComponent,{data:url})\r\n  }\r\n\r\n\r\n  onUpdateClick(){\r\n    this.clientService.setCurrentClientInfo(this.data)\r\n    this.dialogRef.close();\r\n    this._router.navigate(['/updateclient'])\r\n\r\n  }\r\n\r\n  \r\n\r\n  validate(id, status){\r\n\r\n    console.log(\"######## id:\"+id)\r\n    this.clientService.validateAuditorInfo({'id':id,'status':status}).subscribe(res=>console.log(res))\r\n    if(status=='green'){\r\n      var message=\"Client Validated, synchronize to see the result.\"\r\n      var btn = \"OK\"\r\n      this.openAlertDialog(message,btn)\r\n    }else{\r\n      var message=\"Client Refused, synchronize to see the status changed.\"\r\n      var btn = \"OK\"\r\n      this.openAlertDialog(message,btn)\r\n    }\r\n    \r\n    this.dialogRef.close();\r\n\r\n    //this._router.navigate(['/map'])\r\n  }\r\n\r\n  openAlertDialog(msg,btn){\r\n\r\n    const dialogRef = this.dialog.open(AlertDialogComponent,{\r\n      data:{\r\n        message: msg,\r\n        buttonText: {\r\n          ok: btn,\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div *ngIf=\"loggedUser.role == 'Back Office' || loggedUser.role == 'Admin'\">\r\n {{data.idGeo}}\r\n <div *ngIf=\"data.properties.status=='green', else refused\">\r\n     <span style=\"color: green;\">Client Validated</span>\r\n </div>\r\n <ng-template #refused>\r\n    <span style=\"color: red;\">Client Not validated</span>\r\n </ng-template>\r\n \r\n    <mat-dialog-content>\r\n        <div class=\"dialog-container\">\r\n            <div class=\"aud-sell-container\">\r\n                <section class=\"sell-container\">\r\n                    <span>Seller</span>\r\n                    <div class=\"pdv-info-container\">\r\n                        <div class=\"pdv-img\">\r\n                            <img src=\"{{clientOfSeller.PVP}}\" alt=\"\" (click)=\"openImage(clientOfSeller.PVP)\">\r\n                        </div>\r\n                        <div class=\"pdv-info\">\r\n                            <label>Sector:</label> \r\n                            <p>{{clientOfSeller.Code_Secteur_OS}}</p>\r\n                            <label>Name:</label> \r\n                            <p>{{clientOfSeller.NomPrenom}}</p>\r\n                            <label>Phone Number:</label> \r\n                            <p>{{clientOfSeller.PhoneNumber}}</p>\r\n                            <label>Type PDV:</label>\r\n                            <p>{{ clientOfSeller.TypeDPV}}, {{clientOfSeller.detailType}}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"pdv-action-btns\">\r\n                        <!-- <button mat-button class=\"btn-valid\" (click)=\"validateSeller()\">Valid</button>\r\n                        <button mat-button class=\"btn-refus\">Refus</button> -->\r\n                    </div>\r\n                </section>\r\n                <section class=\"aud-container\">\r\n                    <span>Auditor</span>\r\n                    <div class=\"pdv-info-container\">\r\n                        <div class=\"pdv-img\">\r\n                            <img src=\"{{clientOfAuditor.PVP}}\" alt=\"\" (click)=\"openImage(clientOfAuditor.PVP)\">\r\n                        </div>\r\n                        <div class=\"pdv-info\">\r\n                            <label>Sector:</label> \r\n                            <p>{{clientOfAuditor.Code_Secteur_OS}}</p>\r\n                            <label>Name:</label> \r\n                            <p>{{clientOfAuditor.NomPrenom}}</p>\r\n                            <label>Phone Number:</label> \r\n                            <p>{{clientOfAuditor.PhoneNumber}}</p>\r\n                            <label>Type PDV:</label>\r\n                            <p>{{ clientOfAuditor.TypeDPV}}, {{clientOfAuditor.detailType}}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"pdv-action-btns\" *ngIf=\"data.properties.status !='green'\">\r\n                        <button mat-button class=\"btn-valid\" (click)=\"validate(data.idGeo,'green')\">Valid</button>\r\n                        <button mat-button class=\"btn-refus\" (click)=\"validate(data.idGeo,'black')\">Refus</button>\r\n                    </div>\r\n                    \r\n                </section>\r\n            </div>\r\n            <div class=\"validPDV-container\">\r\n                <span>Validated Client</span>\r\n\r\n                <section class=\"valid-pdv-container\">\r\n                    <div class=\"pdv-info-container\">\r\n                        <div class=\"pdv-img\">\r\n                            <img src=\"{{data.properties.PVP}}\" alt=\"\" (click)=\"openImage(data.properties.PVP)\">\r\n                        </div>\r\n                        <div class=\"pdv-info\">\r\n                            <label>Sector:</label> \r\n                            <p>{{data.properties.Code_Secteur_OS}}</p>\r\n                            <label>Name:</label> \r\n                            <p>{{data.properties.NomPrenom}}</p>\r\n                            <label>Phone Number:</label> \r\n                            <p>{{data.properties.PhoneNumber}}</p>\r\n                            <label>Type PDV:</label>\r\n                            <p>{{ data.properties.TypeDPV}}, {{data.properties.detailType}}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"pdv-info-container\" >\r\n                        <div class=\"pdv-img\">\r\n                            <img src=\"{{data.properties.NFCP}}\" alt=\"\" (click)=\"openImage(data.properties.NFCP)\">\r\n                        </div>\r\n                        <div class=\"pdv-info\">\r\n                            <label>NFC UUID:</label> \r\n                            <p>{{data.properties.nfc.UUID}}</p>\r\n                            <label>NFC code Qr:</label> \r\n                            <p>{{data.properties.codeQR}}</p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n            </div>\r\n        </div>\r\n        <!-- <p> {{data.NomPrenom}}</p> -->\r\n    </mat-dialog-content>\r\n\r\n    <mat-dialog-actions class=\"action-btns\" align=\"center\">\r\n        <button mat-raised-button color=\"primary\" class=\"btn-green\">Update Client</button>\r\n        <button mat-raised-button color=\"primary\" class=\"btn-red\">Delete Client</button>\r\n        <button mat-raised-button color=\"primary\" class=\"btn-orange\">Navigate to the client</button>\r\n    </mat-dialog-actions>\r\n\r\n</div>\r\n<div *ngIf=\"loggedUser.role == 'Seller' || loggedUser.role == 'Auditor'\">\r\n    <mat-dialog-content class=\"dialog-content\">\r\n        <h2>Client Information</h2>\r\n        <section fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n            <div class=\"pdv-info-container\">\r\n                <div class=\"pdv-img\">\r\n                    <img src=\"{{data.properties.PVP}}\" alt=\"\" (click)=\"openImage(data.properties.NFCP)\">\r\n                </div>\r\n                <div class=\"pdv-info\">\r\n                    <label>Sector:</label> \r\n                    <p>{{data.properties.Code_Secteur_OS}}</p>\r\n                    <label>Name:</label> \r\n                    <p>{{data.properties.NomPrenom}}</p>\r\n                    <label>Phone Number:</label> \r\n                    <p>{{data.properties.PhoneNumber}}</p>\r\n                    <label>Type PDV:</label>\r\n                    <p>{{ data.properties.TypeDPV}}, {{data.properties.detailType}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"pdv-info-container\">\r\n                <div class=\"pdv-img\">\r\n                    <img src=\"{{data.properties.NFCP}}\" alt=\"\" (click)=\"openImage(data.properties.NFCP)\">\r\n                </div>\r\n                <div class=\"pdv-info\">\r\n                    <label>Code NFC:</label>\r\n                    <p *ngIf=\"!data.properties.nfc.codeNFC, else nfc\">null</p>\r\n                    <ng-template #nfc>{{data.properties.nfc.codeNFC}}</ng-template>\r\n                    <label>UUID:</label>\r\n                    <p>{{data.properties.nfc.UUID}}</p>\r\n                \r\n                </div>\r\n            </div>\r\n            \r\n        </section>\r\n        <!-- <p> {{data.NomPrenom}}</p> -->\r\n    </mat-dialog-content>\r\n\r\n    <mat-dialog-actions class=\"action-btns\" align=\"center\">\r\n        <button mat-raised-button color=\"primary\" class=\"btn-green\" (click)=\"onUpdateClick()\" >Update Client</button>\r\n        <button mat-raised-button color=\"primary\" class=\"btn-red\">Delete Client</button>\r\n    </mat-dialog-actions>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { OnlineOfflineServiceService } from './online-offline-service.service';\r\nimport Dexie from 'dexie';\r\nimport { UUID } from 'angular2-uuid';\r\nimport { AlertDialogComponent } from './alert-dialog/alert-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientsService {\r\n\r\n  private db: any;\r\n  private request\r\n\r\n\r\n  // for update functionality\r\n  private currentClient;\r\n  uri=\"https://stalker-lite.herokuapp.com\";\r\n  private  _clientUrl=this.uri+\"/api1/clients\";\r\n  private _secteurUrl=this.uri+\"/api1/secteurs\";\r\n  private _addclient=this.uri+\"/api1/AddClient\";\r\n  private _getclient = this.uri+\"/api1/addedClients\";\r\n  private _updateclient =this.uri+\"/api1/updateClient\";\r\n  private getClientBySell =this.uri+\"/api1/getClientBySeller\";\r\n  private _validate = this.uri+\"/api1/validate\";\r\n  ////////////////////remplacer par uri après le port\r\n  private _getClientByID = \"https://stalker-lite.herokuapp.com/api1/GetClient\";\r\n\r\n\r\n\r\n  getNFC(){\r\n    var url=\"http://localhost:7000/nfc\"\r\n    return this.http.post<any>(url,\"0633691574\")\r\n  }\r\n  getSMS(phone){\r\n    var url=\"http://localhost:7000/sms\"\r\n    return this.http.post<any>(url,phone)\r\n\r\n  }\r\n\r\n\r\n\r\n  SendClient(client) {\r\n    return this.http.post<any>(this._addclient,client);\r\n  }\r\n\r\n  constructor(private readonly onlineOffline: OnlineOfflineServiceService, private http: HttpClient, private _router: Router,  private dialog: MatDialog) {\r\n    this.registerToEvents(onlineOffline);\r\n    this.createDatabase();\r\n    // this.request = window.indexedDB.open(\"MyTestDatabase\", 1)\r\n    // this.request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n    //   console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    // };\r\n  }\r\n\r\n  getAllClient() {\r\n    return this.http.get<any>(this._clientUrl)\r\n  }\r\n\r\n  private createDatabase() {\r\n    this.db = new Dexie('MyTestDatabase');\r\n    this.db.version(1).stores({\r\n      client: 'UUid'\r\n    });\r\n  }\r\n\r\n  addTodo(client: any) {\r\n    client[\"UUid\"] = UUID.UUID();\r\n    if (!this.onlineOffline.isOnline) {\r\n      this.addToIndexedDb(client);\r\n    } else {\r\n      //post request to mongodb\r\n      this.SendClient(client).subscribe(res => {\r\n        console.log(res);\r\n        console.log(\"data sent\")\r\n      });\r\n    }\r\n  }\r\n  getClientBySeller(lat,long){\r\n     var url=\"http://localhost:3000/api1/getClientBySeller/\"+lat+\"/\"+long+\"\"\r\n    console.log(url)\r\n    return this.http.get<any>(url)\r\n  }\r\n\r\n  getClientByAuditor(lat,long){\r\n    var url=\"http://localhost:3000/api1/getClientByAuditor/\"+lat+\"/\"+long+\"\"\r\n   console.log(url)\r\n   return this.http.get<any>(url)\r\n }\r\n\r\n\r\n  // used for update functionality\r\n  setCurrentClientInfo(client: any) {\r\n    this.currentClient = client;\r\n    console.log('***************************'+this.currentClient.NomPrenom)\r\n  }\r\n\r\n  addToIndexedDb(clientt: any) {\r\n    this.db.client\r\n      .add(clientt)\r\n      .then(async () => {\r\n        const allItems: any = await this.db[\"client\"].toArray();\r\n        console.log('saved in DB, DB is now', allItems);\r\n        var message = \"Data saved successfuly\";\r\n        var btn = \"Continue\"\r\n        this.openAlertDialog(message,btn)\r\n      })\r\n      .catch(e => {\r\n        alert('Error: ' + (e.stack || e));\r\n      });\r\n  }\r\n\r\n   async sendItemsFromIndexedDb() {\r\n    console.log(\"sending items\");\r\n    // const allItems: any[] = await this.db[\"client\"].toArray();\r\n    var db; var transaction; var upgradeDb\r\n    var request = window.indexedDB.open(\"MyTestDatabase\", 10)\r\n    // upgradeDb.createObjectStore('client');\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n    console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log(\"success\")\r\n      console.log(db)\r\n      transaction = db.transaction(['client'], 'readwrite');\r\n      var objectStore = transaction.objectStore(\"client\");\r\n      var objectStoreRequest = objectStore.getAll();\r\n      objectStoreRequest.onsuccess = event => {\r\n        var all = event.target.result\r\n        // console.log(\"------------------------\")\r\n         console.log(all)\r\n        // console.log(\"------------------------\")\r\n        all.forEach(element => {\r\n          // console.log(\"---\")\r\n          console.log(element)\r\n          this.SendClient(element).subscribe(res => {\r\n            console.log(res);\r\n\r\n          })\r\n          console.log(\"data sent succusfuly\")\r\n        })\r\n\r\n      }\r\n      this.db.client.clear();\r\n      // objectStoreRequest.onerror=event=>{\r\n      //   console.log(event)\r\n      // }\r\n    }\r\n  }\r\n\r\n  items\r\n\r\n\r\n  openAlertDialog(msg,btn){\r\n    const dialogRef = this.dialog.open(AlertDialogComponent,{\r\n      data:{\r\n        message: msg,\r\n        buttonText: {\r\n          ok: btn,\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  private registerToEvents(onlineOffline: OnlineOfflineServiceService) {\r\n          onlineOffline.connectionChanged.subscribe(online => {\r\n            console.log(online);\r\n            if (online) {\r\n              console.log('went online');\r\n              console.log('sending all stored items');\r\n              var message = \"went online, sending all stored items\";\r\n              var btn = \"Ok\"\r\n              this.openAlertDialog(message,btn)\r\n              this.sendItemsFromIndexedDb();\r\n              // this.getdata()\r\n            } else {\r\n              console.log('went offline, storing in indexdb');\r\n              var message = \"went offline, storing in indexdb\";\r\n              var btn = \"Ok\"\r\n              this.openAlertDialog(message,btn)\r\n            }\r\n          });\r\n  }\r\n\r\n\r\n\r\n\r\n  getAllSecteurs(){\r\n          return this.http.get<any>(this._secteurUrl)\r\n        }\r\n\r\n  getClient() {\r\n          return this.http.get<any>(this._getclient);\r\n        }\r\n\r\n\r\n\r\n  getClientInfo(){\r\n          return this.currentClient;\r\n        }\r\n  \r\n  getShow() {\r\n    var list=[]\r\n    var transaction\r\n    var request = window.indexedDB.open(\"MyTestDatabase\",10)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase }}) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess=(event: Event & { target: { result: IDBDatabase }})=>{\r\n      this.db=event.target.result;\r\n      console.log(\"success\")\r\n      console.log(this.db)\r\n      transaction=this.db.transaction(['client'], 'readwrite');\r\n      var objectStore = transaction.objectStore(\"client\");\r\n      var objectStoreRequest = objectStore.getAll();\r\n    \r\n      objectStoreRequest.onsuccess = function(event) {\r\n        var all=event.target.result\r\n        all.forEach(element => {\r\n          console.log(\"---\")\r\n          var elm = element.UUid\r\n          console.log(elm)\r\n          list.push(elm)\r\n          console.log(list)\r\n          \r\n          \r\n          \r\n        }); \r\n        \r\n      }  \r\n    };\r\n     return list\r\n  }\r\n\r\n  updateClient(client:any){\r\n    return this.http.post<any>(this._updateclient, client);\r\n  }\r\n\r\n\r\n  validateAuditorInfo(info){\r\n    console.log(\"#############################\")\r\n    console.log(info)\r\n    return this.http.post<any>(this._validate,info);\r\n  }\r\n  //////////////////\r\n  getClientByID(id){\r\n    console.log('id'+id);\r\n    return this.http.get(this._getClientByID+ '/' +id);\r\n  }\r\n  ///////////////////\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as L from 'leaflet';\r\n@Component({\r\n  selector: 'app-clients',\r\n  templateUrl: './clients.component.html',\r\n  styleUrls: ['./clients.component.css']\r\n})\r\nexport class ClientsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n   \r\n  }\r\n\r\n}\r\n","<div class=\"clients_container\">\r\n    <button mat-button>\r\n        <mat-icon>filter_list</mat-icon>\r\n        Filter\r\n    </button>\r\n\r\n    <div class=\"clients-list\">\r\n        <!-- *ngFor=\"let client of clients\" -->\r\n        <mat-card>\r\n            <img mat-card-image src=\"assets/images/blank.jpg\" alt=\"\" >\r\n            <mat-card-content class=\"card-content\">\r\n              <p>Name</p>\r\n              <p>PDV type</p>\r\n              <p>Sector</p>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {  MAT_DIALOG_DATA, MatDialogRef, MatDialog} from '@angular/material/dialog';\r\nimport { Inject } from '@angular/core'; \r\n\r\n@Component({\r\n  selector: 'app-full-image',\r\n  templateUrl: './full-image.component.html',\r\n  styleUrls: ['./full-image.component.css']\r\n})\r\nexport class FullImageComponent implements OnInit {\r\n\r\n  imageURL\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.imageURL = this.data;\r\n    console.log(\"~~~~~~~~~~~~~~~~~~~~~~~~~~ Image\"+this.imageURL)\r\n  }\r\n\r\n}\r\n","<img src=\"{{imageURL}}\" alt=\"\">\r\n","import { Injectable } from '@angular/core';\r\nimport { ClientsService } from './clients.service';\r\nimport * as geojson from 'geojson';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class IndexdbService {\r\n  db;transaction;\r\n  \r\n   version=6\r\n  constructor(private client:ClientsService) { }\r\n\r\n  createDatabase() {\r\n    var request = window.indexedDB.open(\"off\",this.version)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase }}) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onupgradeneeded=(event)=>{\r\n      console.log(event.target)\r\n      this.db=request.result\r\n      console.log(\"upgrade\")\r\n      var objectStore = this.db.createObjectStore(\"data\", { keyPath: '_id' });\r\n      console.log(\"create Sector \")\r\n      var objectt=this.db.createObjectStore(\"sector\", { keyPath: '_id' });\r\n      console.log(objectt)\r\n      \r\n    }\r\n    request.onsuccess=(event: Event & { target: { result: IDBDatabase }})=>{\r\n      this.db=event.target.result;\r\n      console.log(this.db) \r\n    }\r\n  }\r\n\r\n\r\n  AddItem() {\r\n    var costumer={'_id':123,Valeur:\"hafsa\"}\r\n    console.log(costumer)\r\n    //const trans= this.db.transaction(['data'], 'readwrite');\r\n    //objectStore.add(costumer)\r\n    //console.log(objectStore)\r\n    var allclient=[]\r\n    this.client.getAllClient().subscribe(res=>{\r\n      res.forEach(element => {\r\n        var geo={_id:element._id,Valeur:JSON.stringify(element.geometry)}\r\n        //console.log(geo)\r\n        allclient.push(geo)\r\n        this.transaction=this.db.transaction(['data'], 'readwrite');\r\n        var objectStore =  this.transaction.objectStore(\"data\");\r\n        var request=objectStore.add(geo)\r\n        request.onsuccess= function(event) {\r\n          console.log(\"done Synchronize\")\r\n        };\r\n      });\r\n      //console.log(allclient)\r\n    });\r\n  }\r\n  \r\n  ClearData(){\r\n    var request = window.indexedDB.open(\"off\",this.version)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase }}) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n      request.onsuccess=(event: Event & { target: { result: IDBDatabase }})=>{\r\n        this.db=event.target.result;\r\n        console.log(\"success inside Clear\")\r\n        console.log(this.db)\r\n        this.transaction=this.db.transaction(['data'], 'readwrite');\r\n        var objectStore =  this.transaction.objectStore(\"data\");\r\n        var objectStoreRequest = objectStore.clear();\r\n        objectStoreRequest.onsuccess = function(event) {\r\n          console.log(\"Data Cleared\")\r\n        }  \r\n    } \r\n  }\r\n\r\n  ClearDataSector(){\r\n    var request = window.indexedDB.open(\"off\",this.version)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase }}) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n      request.onsuccess=(event: Event & { target: { result: IDBDatabase }})=>{\r\n        this.db=event.target.result;\r\n        console.log(\"success Sector inside Clear\")\r\n        console.log(this.db)\r\n        this.transaction=this.db.transaction(['sector'], 'readwrite');\r\n        var objectStore =  this.transaction.objectStore(\"sector\");\r\n        var objectStoreRequest = objectStore.clear();\r\n        objectStoreRequest.onsuccess = function(event) {\r\n          console.log(\"Data Sector Cleared\")\r\n        }  \r\n    } \r\n  }\r\n\r\n   /// ***** Not Used \r\n  public getDataClient(map,markercluster,icon){\r\n    var request = window.indexedDB.open(\"off\",this.version)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase }}) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess=(event: Event & { target: { result: IDBDatabase }})=>{\r\n      this.db=event.target.result;\r\n      console.log(\"success\")\r\n      console.log(this.db)\r\n      this.transaction=this.db.transaction(['data'], 'readwrite');\r\n      var objectStore =  this.transaction.objectStore(\"data\");\r\n      var objectStoreRequest = objectStore.getAll();\r\n    \r\n      objectStoreRequest.onsuccess = function(event) {\r\n        var all=event.target.result\r\n        all.forEach(element => {\r\n          console.log(\"---\")\r\n          var elm = JSON.parse(element.Valeur);\r\n         // console.log(elm)\r\n          var Point={_id:element._id,geometry:elm}\r\n          var geojsonPoint: geojson.Point = Point.geometry.geometry\r\n          var marker = L.geoJSON(geojsonPoint, {\r\n            pointToLayer: (point, latlon) => {\r\n              return L.marker(latlon, { icon: icon })\r\n              //return L.circle([latlon.lat,latlon.lng], {color:\"green\",radius:20}).addTo(this.map);\r\n            }\r\n          });\r\n          markercluster.addLayer(marker)\r\n          map.addLayer(markercluster);\r\n        }); \r\n      }  \r\n    } \r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'\r\nimport { AuthenticationService } from '../authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { SidebarMenuComponent } from '../sidebar-menu/sidebar-menu.component';\r\nimport { IndexdbService } from '../indexdb.service';\r\nimport { ClientsService } from '../clients.service';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  hide: boolean = false;\r\n  constructor(private fb: FormBuilder,\r\n    private _auth: AuthenticationService,\r\n    private _router: Router,\r\n    private client: ClientsService,\r\n    private index: IndexdbService) { }\r\n\r\n  ngOnInit() {\r\n    this.index.createDatabase()\r\n  }\r\n\r\n  loginForm: FormGroup = this.fb.group({\r\n    email: ['', [Validators.required, Validators.email]],\r\n    password: ['', [Validators.required, Validators.minLength(6)]]\r\n  })\r\n\r\n  onLogin() {\r\n    if (!this.loginForm.valid) {\r\n      return;\r\n    } else {\r\n      var email = this.loginForm.value.email;\r\n      var password = this.loginForm.value.password;\r\n      console.log(email, password)\r\n      var user = {\r\n        'email': email,\r\n        'password': password\r\n      }\r\n      this._auth.getUserLogin(user).subscribe(\r\n        res => this.Response(res),\r\n        err => console.log(err));\r\n    }\r\n  }\r\n  // Store Token and delegate to Home page\r\n  Response(res) {\r\n    console.log(res)\r\n    localStorage.setItem('token', res.Data.token)\r\n    localStorage.setItem(\"user\", JSON.stringify(res.Data.user))\r\n    console.log(this._auth.getToken())\r\n    localStorage.setItem(\"name\", res.Data.user.name)\r\n    //this.index.AddItem();\r\n    ///******* GET DATA  ******/\r\n    this.PutDataClient()\r\n  }\r\n\r\n\r\n  PutDataClient() {\r\n    var db; var transaction\r\n    var request = window.indexedDB.open(\"off\", this.version)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log(\"success Login\")\r\n      var allclient = []\r\n      this.client.getAllClient().subscribe(res => {\r\n        res.forEach(element => {\r\n          var geo = { _id: element._id, Valeur: JSON.stringify(element.geometry) }\r\n          allclient.push(geo)\r\n          transaction = db.transaction(['data'], 'readwrite');\r\n          var objectStore = transaction.objectStore(\"data\");\r\n          var request = objectStore.add(geo)\r\n          request.onsuccess = function (event) {\r\n            console.log(\"done Adding login\")\r\n          };\r\n        });\r\n        this.PutDataSector()\r\n      });\r\n    }\r\n  }\r\n  version=6\r\n  PutDataSector() {\r\n    var db; var transaction\r\n    var request = window.indexedDB.open(\"off\", this.version)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log(\"success Sector Login\")\r\n      this.client.getAllSecteurs().subscribe(res => {\r\n        res.forEach(element => {\r\n          transaction = db.transaction(['sector'], 'readwrite');\r\n          var objectStore = transaction.objectStore(\"sector\");\r\n          var geo = { _id: element._id, Valeur: JSON.stringify(element.geometry) }\r\n          console.log(\"$sector login$\")\r\n          console.log(geo)\r\n          var request = objectStore.add(geo)\r\n          request.onsuccess = function (event) {\r\n            console.log(\"done Adding Sector login\")\r\n          };\r\n        });\r\n        \r\n        this._router.navigate(['/map']).then(() => {\r\n          //window.location.reload();\r\n        });\r\n\r\n        //console.log(allclient)\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <mat-card>\r\n    <mat-card-content>\r\n      <div class=\"header\">\r\n        <p>Sign in</p>\r\n      </div>\r\n      <form  name=\"loginForm\" [formGroup]=\"loginForm\">\r\n        <div class=\"emailInput\">\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label>Email</mat-label>\r\n            <input\r\n              formControlName=\"email\"\r\n              matInput\r\n              placeholder=\"Enter email address\" required\r\n            />\r\n            <mat-error *ngIf=\"!loginForm.controls['email'].valid\">\r\n                Email is required\r\n              </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <a class=\"text-link\" class=\"aLink\" routerLink=\"/auth/forgot-password\">Forgot Password?</a>\r\n          </span>\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label>Password</mat-label>\r\n            <input formControlName=\"password\" matInput [type]=\" hide ? 'password' : 'text'\" required />\r\n            <button  mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide Password'\"\r\n            [attr.aria-pressed]=\"hide\">\r\n            <mat-icon>\r\n                {{hide ? 'visibility_off' : 'visibility'}}\r\n            </mat-icon>\r\n            </button>\r\n            <mat-error *ngIf=\"!loginForm.controls['password'].valid\">\r\n            Password is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <button mat-flat-button color=\"primary\" (click)=\"onLogin()\">Sign in</button>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n\r\n\r\n","import { Component, AfterViewInit, HostListener } from '@angular/core';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\nimport * as geojson from 'geojson';\r\nimport { ClientsService } from '../clients.service';\r\nimport { interval } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { ClientInfoComponent } from '../client-info/client-info.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { NgZone } from '@angular/core';\r\nimport * as turf from '@turf/turf';\r\nimport { IndexdbService } from '../indexdb.service';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport {error} from 'protractor';\r\nimport { AlertDialogComponent } from '../alert-dialog/alert-dialog.component';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.css']\r\n})\r\n\r\nexport class MapComponent implements AfterViewInit {\r\n\r\n\r\n  /// ****** constructor *****/\r\n  constructor(\r\n    private _serviceClient: ClientsService,\r\n    private _router: Router,\r\n    private zone: NgZone,\r\n    private index: IndexdbService,\r\n    private dialog: MatDialog) { this.index.createDatabase(); }\r\n\r\n  dialogRef: MatDialogRef<ClientInfoComponent>;\r\n  private map;\r\n  public content = null;\r\n  mySector = 'hello';\r\n  IDGeomerty;\r\n  icon = L.icon({\r\n    iconUrl: 'assets/green.png',\r\n    iconSize: [12, 12],\r\n  });\r\n\r\n  location_icon = L.icon({\r\n    iconUrl: 'assets/location.png',\r\n    iconSize: [30, 30]\r\n  });\r\n\r\n  clientwithNFC_icon = L.icon({\r\n    iconUrl: 'assets/blue.png',\r\n    iconSize: [15, 15]\r\n  });\r\n\r\n  clientwithoutNFC_icon = L.icon({\r\n    iconUrl: 'assets/red.png',\r\n    iconSize: [15, 15]\r\n  });\r\n\r\n\r\n  markersCluster = new L.MarkerClusterGroup();\r\n  markerClusterSector = new L.MarkerClusterGroup();\r\n  lat = 33.61041004;\r\n  lon = -7.527008504;\r\n  myMarker;\r\n  statusAddClient = false;\r\n\r\n  AllSecteurs = [];\r\n  MarkerClusterSector;\r\n  version = 6;\r\n\r\n  private initMap(): void {\r\n    this.map = L.map('map', {\r\n      center: [this.lat, this.lon],\r\n      zoom: 10,\r\n      zoomControl: false\r\n    });\r\n\r\n    const zoomOptions = {\r\n      zoomInText: '+',\r\n      zoomOutText: '-',\r\n    };\r\n\r\n    // const zoom = L.control.zoom(zoomOptions);\r\n    const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      maxZoom: 30,\r\n      minZoom: 0\r\n    });\r\n\r\n\r\n\r\n    // const locationControl = {\r\n    //   position: 'bottomleft',\r\n    //   strings: {\r\n    //       title: \"Show me where I am, yo!\"\r\n    //   }}\r\n\r\n    // const lc = L.control.locate(locationControl)\r\n\r\n    // lc.addTo(this.map);\r\n    // zoom.addTo(this.map);\r\n\r\n    tiles.addTo(this.map);\r\n    // this.getClients()\r\n    this.getDataClient();\r\n    // this.getAllSecteurs()\r\n    this.getDataSector();\r\n    this.map.addLayer(this.markersCluster);\r\n    this.map.addControl(L.control.zoom({ position: 'bottomleft' }));\r\n\r\n  }\r\n  //////////////\r\n  Search(IDGeomerty){\r\n    console.log(IDGeomerty);\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    \r\n      this._serviceClient.getClientByID(IDGeomerty).subscribe(res => {\r\n      if(IDGeomerty!=null){\r\n      this.map.setView(new L.LatLng(res[\"geometry\"].geometry.coordinates[1], res[\"geometry\"].geometry.coordinates[0]), 30, { animation: true }).addTo(this.map);\r\n       }\r\n    }\r\n    \r\n      , (error) => {console.log(error); });\r\n  }\r\n//////////////////////\r\n  ngAfterViewInit(): void {\r\n    this.getLocation();\r\n    this.initMap();\r\n    // this.getClient()\r\n  }\r\n\r\n  getLocation() {\r\n    // interval(1000).subscribe(x => {\r\n\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position: GeolocationPosition) => {\r\n        if (position) {\r\n          console.log('Latitude: ' + position.coords.latitude +\r\n            ' Longitude: ' + position.coords.longitude);\r\n          this.lat = position.coords.latitude;\r\n          this.lon = position.coords.longitude;\r\n          console.log(this.lat);\r\n          console.log(this.lon);\r\n          this.map.setView(new L.LatLng(this.lat, this.lon), 11, { animation: true });\r\n          this.myMarker = L.marker([this.lat, this.lon], { icon: this.location_icon });\r\n          // this.myMarker.bindPopup(\"my\")\r\n          this.myMarker.addTo(this.map);\r\n\r\n        }\r\n      },\r\n        (error: GeolocationPositionError) => console.log(error));\r\n    } else {\r\n      alert('Geolocation is not supported by this browser.');\r\n    }\r\n\r\n    // });\r\n  }\r\n\r\n  locate() {\r\n    this.map.flyTo(new L.LatLng(this.lat, this.lon), 13);\r\n    this.Insid();\r\n  }\r\n\r\n\r\n\r\n  getClient() {\r\n    const client = this._serviceClient.getClient().subscribe(res => {\r\n      console.log('*********** ');\r\n      console.log(res);\r\n      res.forEach(element => {\r\n\r\n        console.log(element.lat, element.lon);\r\n        if (element.status === 'red') {\r\n\r\n          const popupOptions = {\r\n            maxWidth: 800,\r\n            className: 'popup'\r\n          };\r\n\r\n          L.marker([element.lat, element.lon], { icon: this.clientwithoutNFC_icon }).addTo(this.map).on('click', () => {\r\n            this.content = element;\r\n            this.zone.run(() => this.openDialog(element));\r\n          });\r\n        }\r\n        if (element.status === 'green') {\r\n          L.marker([element.lat, element.lon], { icon: this.clientwithNFC_icon }).addTo(this.map);\r\n\r\n        }\r\n\r\n      });\r\n    });\r\n    console.log(client);\r\n\r\n  }\r\n\r\n  // open dialog with client info\r\n  openDialog(content) {\r\n    // console.log(content)\r\n    this.dialogRef = this.dialog.open(ClientInfoComponent, { data: content });\r\n\r\n  }\r\n  /////////////// *************get data  of clients and sectors **********************///////////////\r\n  async getClients() {\r\n    const arr = [];\r\n    this._serviceClient.getAllClient().subscribe(\r\n      res => {\r\n        res.forEach(element => {\r\n          // console.log(\"@@@@@@@@@@@@@@@@@@@\")\r\n          // console.log(element.geometry)\r\n          const geojsonPoint: geojson.Point = element.geometry.geometry;\r\n          const marker = L.geoJSON(geojsonPoint, {\r\n            pointToLayer: (point, latlon) => {\r\n              return L.marker(latlon, { icon: this.icon });\r\n              // return L.circle([latlon.lat,latlon.lng], {color:\"green\",radius:20}).addTo(this.map);\r\n            }\r\n          });\r\n          this.markersCluster.addLayer(marker);\r\n          if (element.geometry.properties?.nfc != undefined) {\r\n\r\n            marker.on('click', () => {\r\n              this.content = element.geometry;\r\n              this.zone.run(() => this.openDialog(element.geometry));\r\n            });\r\n          } else {\r\n            marker.bindPopup('<h1> <b>Client Information</b></h1><p><b>Name:</b> ' + String(element.geometry.properties.Nom_Client) + '</p><p><b>Sector Name: </b>' + String(element.geometry.properties.Nom_du_Secteur) + '</p>');\r\n          }\r\n          marker.addTo(this.map);\r\n        });\r\n      });\r\n    // console.log(await arr)\r\n    return await arr;\r\n  }\r\n  async getAllSecteurs() {\r\n\r\n    this._serviceClient.getAllSecteurs().subscribe(\r\n      res => {\r\n        // console.log(res)\r\n        res.forEach(element => {\r\n          const marker = L.geoJSON(element.geometry, { style: { color: 'red' } });\r\n          marker.bindPopup(String(element.geometry.properties.codeRegion));\r\n          marker.addTo(this.map);\r\n          this.AllSecteurs.push({ coor: element.geometry.geometry.coordinates, sector: element.geometry.properties.idSecteur });\r\n        });\r\n      });\r\n    // console.log(await arr)\r\n    // return await arr;\r\n  }\r\n\r\n  // $$$ from IndexDB $$$////\r\n\r\n  public getDataClient() {\r\n    let db; let transaction;\r\n    const request = window.indexedDB.open('off', this.version);\r\n    request.onerror = function(event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log('Why didn\\'t you allow my web app to use IndexedDB?!');\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log('success');\r\n      console.log(db);\r\n      transaction = db.transaction(['data'], 'readwrite');\r\n      const objectStore = transaction.objectStore('data');\r\n      const objectStoreRequest = objectStore.getAll();\r\n      objectStoreRequest.onsuccess = event => {\r\n        const all = event.target.result;\r\n        all.forEach(element => {\r\n          console.log('---');\r\n          const elm = JSON.parse(element.Valeur);\r\n          const Point = { _id: element._id, geometry: elm };\r\n          console.log(Point);\r\n          const geojsonPoint: geojson.Point = Point.geometry;\r\n          // console.log(geojsonPoint)\r\n          const marker = L.geoJSON(geojsonPoint, {\r\n            pointToLayer: (point, latlon) => {\r\n              // console.log(\"***\")\r\n              console.log(point);\r\n              return L.marker(latlon, { icon: this.getIcon(Point.geometry.properties.status) });\r\n              // return L.circle([latlon.lat,latlon.lng], {color:\"green\",radius:20}).addTo(this.map);\r\n            }\r\n          });\r\n          this.markersCluster.addLayer(marker);\r\n          if (Point.geometry.properties?.nfc != undefined) {\r\n            Point.geometry.idGeo = Point._id;\r\n            marker.on('click', () => {\r\n              this.content = Point.geometry;\r\n              this.zone.run(() => this.openDialog(Point.geometry));\r\n            });\r\n          } else {\r\n            marker.bindPopup('<h1> <b>Client Information</b></h1><p><b>Name:</b> ' + String(Point.geometry.properties.Nom_Client) + '</p><p><b>Sector Name: </b>' + String(Point.geometry.properties.Nom_du_Secteur) + '</p>');\r\n          }\r\n          marker.addTo(this.map);\r\n        });\r\n\r\n      };\r\n    };\r\n  }\r\n  /// list of icons\r\n  getIcon(statuss) {\r\n    const green = L.icon({iconUrl: 'assets/green.png', iconSize: [12, 12]});\r\n    const black = L.icon({iconUrl: 'assets/black.png', iconSize: [12, 12]});\r\n    const pink = L.icon({iconUrl: 'assets/pink.png', iconSize: [12, 12]});\r\n    const red_white = L.icon({iconUrl: 'assets/r_white.png', iconSize: [12, 12]});\r\n    const red = L.icon({iconUrl: 'assets/red.png', iconSize: [12, 12]});\r\n    const purple = L.icon({iconUrl: 'assets/purple.png', iconSize: [12, 12]});\r\n    switch (statuss) {\r\n      case 'green':\r\n        return green;\r\n        break;\r\n      case 'black':\r\n        return black;\r\n        break;\r\n      case 'red_white':\r\n        return red_white;\r\n        break;\r\n      case 'purple':\r\n        return purple;\r\n        break;\r\n      case 'pink':\r\n        return pink;\r\n        break;\r\n        case 'red':\r\n        return red;\r\n        break;\r\n      // code block\r\n    }\r\n  }\r\n\r\n  public getDataSector() {\r\n    let db; let transaction;\r\n    const request = window.indexedDB.open('off', this.version);\r\n    request.onerror = function(event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log('Why didn\\'t you allow my web app to use IndexedDB?!');\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log('success');\r\n      console.log(db);\r\n      transaction = db.transaction(['sector'], 'readwrite');\r\n      const objectStore = transaction.objectStore('sector');\r\n      const objectStoreRequest = objectStore.getAll();\r\n      objectStoreRequest.onsuccess = event => {\r\n        const all = event.target.result;\r\n        all.forEach(element => {\r\n          console.log('---');\r\n          const elm = JSON.parse(element.Valeur);\r\n          const Point = { _id: element._id, geometry: elm };\r\n          const marker = L.geoJSON(Point.geometry, { style: { color: 'red' } });\r\n          marker.bindPopup(String(Point.geometry.properties.codeRegion));\r\n          marker.addTo(this.map);\r\n          this.markerClusterSector.addLayer(marker);\r\n          this.AllSecteurs.push({ coor: Point.geometry.geometry.coordinates, sector: Point.geometry.properties.idSecteur });\r\n        });\r\n      };\r\n    };\r\n  }\r\n  PutData() {\r\n    let db; let transaction;\r\n    const request = window.indexedDB.open('off', this.version);\r\n    request.onerror = function(event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log('Why didn\\'t you allow my web app to use IndexedDB?!');\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log('success Sync');\r\n      const allclient = [];\r\n\r\n      this._serviceClient.getAllClient().subscribe(res => {\r\n        res.forEach(element => {\r\n          const geo = { _id: element._id, Valeur: JSON.stringify(element.geometry) };\r\n          allclient.push(geo);\r\n          transaction = db.transaction(['data'], 'readwrite');\r\n          const objectStore = transaction.objectStore('data');\r\n          const request = objectStore.add(geo);\r\n          request.onsuccess = function(event) {\r\n            console.log('done Adding');\r\n          };\r\n        });\r\n        ///// sycn done popup\r\n        this.openAlertDialog();\r\n        this.getDataClient();\r\n        // console.log(allclient)\r\n      });\r\n    };\r\n  }\r\n  PutDataSector() {\r\n    let db; let transaction;\r\n    const request = window.indexedDB.open('off', this.version);\r\n    request.onerror = function(event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log('Why didn\\'t you allow my web app to use IndexedDB?!');\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log('success Login');\r\n      const allclient = [];\r\n      this._serviceClient.getAllSecteurs().subscribe(res => {\r\n        res.forEach(element => {\r\n          console.log('***sector***');\r\n          console.log(element);\r\n          const geo = { _id: element._id, Valeur: JSON.stringify(element.geometry) };\r\n          allclient.push(geo);\r\n          transaction = db.transaction(['sector'], 'readwrite');\r\n          const objectStore = transaction.objectStore('sector');\r\n          const request = objectStore.add(geo);\r\n          request.onsuccess = function(event) {\r\n            console.log('done Adding Sector login');\r\n          };\r\n        });\r\n        this.getDataSector();\r\n        // console.log(allclient)\r\n      });\r\n    };\r\n  }\r\n\r\n  ////////////////// ******************************************/////////////////////////\r\n\r\n  async sync() {\r\n    /* this._router.navigate(['']).then(() => {\r\n       window.location.reload();\r\n   });*/\r\n    this.markersCluster.clearLayers();\r\n    this.index.ClearData();\r\n    // this.index.ClearDataSector()\r\n    this.PutData();\r\n    // this.PutDataSector()\r\n    console.log('whya');\r\n\r\n    // this.index.getDataClient(this.map, this.markersCluster, this.icon)\r\n\r\n  }\r\n\r\n  isMarkerInsidePolygon(marker, poly) {\r\n    const polyPoints = poly.getLatLngs();\r\n    const x = marker.getLatLng().lat, y = marker.getLatLng().lng;\r\n\r\n    let inside = false;\r\n    for (let i = 0, j = polyPoints.length - 1; i < polyPoints.length; j = i++) {\r\n      const xi = polyPoints[i].lat, yi = polyPoints[i].lng;\r\n      const xj = polyPoints[j].lat, yj = polyPoints[j].lng;\r\n\r\n      const intersect = ((yi > y) != (yj > y))\r\n        && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\r\n      if (intersect) { inside = !inside; }\r\n    }\r\n    return inside;\r\n  }\r\n\r\n  Insid() {\r\n    this.statusAddClient = false;\r\n    this.AllSecteurs.forEach(elem => {\r\n      // console.log(this.myMarker)\r\n      // console.log(this.myMarker._latlng)\r\n      const lat = this.myMarker._latlng.lat;\r\n      const lon = this.myMarker._latlng.lng;\r\n      const test = turf.point([lon, lat]);\r\n      const poly = turf.polygon(elem.coor[0]);\r\n      console.log(poly);\r\n      // console.log(test)\r\n      // this.isMarkerInsidePolygon(this.myMarker,elem)\r\n\r\n      if (turf.booleanPointInPolygon(test, poly)) {\r\n        this.statusAddClient = true;\r\n        this.mySector = elem.sector;\r\n        console.log(this.mySector);\r\n      } else {\r\n        console.log('not in ');\r\n      }\r\n\r\n\r\n    });\r\n  }\r\n\r\n  openAlertDialog(){\r\n    const dialogRef = this.dialog.open(AlertDialogComponent,{\r\n      data:{\r\n        message: 'Synchronization is Done',\r\n        buttonText: {\r\n          ok: 'Ok',\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n  \r\n\r\n\r\n","<div class=\"map-frame\">\r\n      <div id=\"map\"></div>\r\n      <div class=\"buttons-wrapper\">\r\n            <div class=\"my-location-container\">\r\n\r\n                  <button mat-icon-button\r\n                  aria-label=\"small button\" (click)=\"locate()\">\r\n                        <mat-icon>my_location</mat-icon>\r\n                  </button>\r\n\r\n            </div>\r\n            <button mat-button class=\"btn-primary\" [disabled]=\"!statusAddClient\" [routerLink]=\"['/addclient', mySector]\">Add PDV</button>\r\n            <button mat-button class=\"btn-warning\" (click)=\"sync()\">Synchronize</button>\r\n      </div>\r\n      <div class=\"map-top-elements\">\r\n            <!-- <button mat-raised-button class=\"my-location\">\r\n                  <mat-icon>my_location</mat-icon>\r\n            </button>  -->\r\n            <!--====================  -->\r\n            <div class=\"element-container\">\r\n                  <div class=\"search-input\">\r\n                        <mat-icon>search</mat-icon>\r\n                        <input type=\"text\" name=\"search\" autocomplete=\"off\" [(ngModel)]=\"IDGeomerty\" >\r\n                  </div>\r\n                  <button (click)=\"Search(IDGeomerty)\">Search</button>\r\n            </div>\r\n            <!-- =============== -->\r\n            <div class=\"element-container\">\r\n                  <div class=\"select-input\">\r\n                        <mat-select panelClass=\"selectPanel\" placeholder=\"PDV Type\">\r\n                              <mat-option value=\"\">Audit</mat-option>\r\n                              <mat-option value=\"\">Audit Retail</mat-option>\r\n                              <mat-option value=\"\">Other stuff</mat-option>\r\n                        </mat-select>\r\n                  </div>\r\n            </div>\r\n            <div class=\"element-container\">\r\n                  <div class=\"select-input\">\r\n                        <mat-select panelClass=\"selectPanel\" placeholder=\"Done\">\r\n                              <mat-option value=\"\">Done</mat-option>\r\n                              <mat-option value=\"\">Not Done</mat-option>\r\n                        </mat-select>\r\n                  </div>\r\n            </div>\r\n      </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { OnlineOfflineServiceService} from '../online-offline-service.service';\r\nimport { ClientsService } from '../clients.service';\r\nimport { AlertDialogComponent } from '../alert-dialog/alert-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-offline',\r\n  templateUrl: './offline.component.html',\r\n  styleUrls: ['./offline.component.css']\r\n})\r\nexport class OfflineComponent implements OnInit {\r\n\r\n  constructor(private readonly onlineOfflineService: OnlineOfflineServiceService,\r\n    private clientService: ClientsService,\r\n    private dialog: MatDialog) { \r\n\r\n       this.getid()\r\n       \r\n    }\r\n\r\n    id=[];\r\n\r\n\r\n    getid(){\r\n        this.id=this.clientService.getShow()\r\n        console.log(this.id)\r\n    }\r\n\r\n    send(){\r\n      if(this.onlineOfflineService.isOnline){\r\n        this.clientService.sendItemsFromIndexedDb()\r\n        var message = \"data sent successfuly\";\r\n        var btn = \"Continue\"\r\n        this.openAlertDialog(message,btn)\r\n      \r\n      }else{\r\n        var message = \"You are still offline !\";\r\n        var btn = \"Continue\"\r\n        this.openAlertDialog(message,btn)\r\n      \r\n      }\r\n\r\n    }\r\n\r\n    openAlertDialog(msg,btn){\r\n      const dialogRef = this.dialog.open(AlertDialogComponent,{\r\n        data:{\r\n          message: msg,\r\n          buttonText: {\r\n            ok: btn,\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n\r\n\r\n    private async sendItemsFromIndexedDb() {\r\n      console.log(\"sending items\");\r\n      // const allItems: any[] = await this.db[\"client\"].toArray();\r\n      var db; var transaction; var upgradeDb\r\n      var request = window.indexedDB.open(\"MyTestDatabase\", 10)\r\n      // upgradeDb.createObjectStore('client');\r\n      request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n      };\r\n      request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n        db = event.target.result;\r\n        console.log(\"success\")\r\n        console.log(db)\r\n        transaction = db.transaction(['client'], 'readwrite');\r\n        var objectStore = transaction.objectStore(\"client\");\r\n        var objectStoreRequest = objectStore.getAll();\r\n        objectStoreRequest.onsuccess = event => {\r\n          var all = event.target.result\r\n          // console.log(\"------------------------\")\r\n           console.log(all)\r\n          // console.log(\"------------------------\")\r\n          all.forEach(element => {\r\n            // console.log(\"---\")\r\n            console.log(element)\r\n            this.clientService.SendClient(element).subscribe(res => {\r\n              console.log(res);\r\n              \r\n            })\r\n            console.log(\"data sent succusfuly\")\r\n          })\r\n  \r\n        }\r\n        db.client.clear();\r\n        // objectStoreRequest.onerror=event=>{\r\n        //   console.log(event)\r\n        // }\r\n      }\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n \r\n\r\n}\r\n","\r\n<div class=\"containe-ids\">\r\n    <div class=\"sync\">\r\n        <div *ngFor=\"let uuid for id\">\r\n            <label>{{uuid}}</label>\r\n            <button mat-button class=\"btn-green\" (click)=\"send()\" >Send</button>\r\n        </div>\r\n        \r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\ndeclare const window: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OnlineOfflineServiceService {\r\n\r\n  private internalConnectionChanged = new Subject<boolean>();\r\n\r\n  get connectionChanged() {\r\n    return this.internalConnectionChanged.asObservable();\r\n  }\r\n\r\n  get isOnline() {\r\n    return !!window.navigator.onLine;\r\n  }\r\n\r\n  constructor() {\r\n    window.addEventListener('online', () => this.updateOnlineStatus());\r\n    window.addEventListener('offline', () => this.updateOnlineStatus());\r\n  }\r\n\r\n  private updateOnlineStatus() {\r\n    console.log(window.navigator.onLine)\r\n    this.internalConnectionChanged.next(window.navigator.onLine);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-planning',\r\n  templateUrl: './planning.component.html',\r\n  styleUrls: ['./planning.component.css']\r\n})\r\nexport class PlanningComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>planning works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-routes',\r\n  templateUrl: './routes.component.html',\r\n  styleUrls: ['./routes.component.css']\r\n})\r\nexport class RoutesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>routes works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SettingsService } from './settings.service';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  time=2;\r\n  Message;\r\n  constructor(private _setting:SettingsService,\r\n              private _router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getSMS()\r\n  }\r\n  send(){\r\n    this._setting.setTimeSMS(this.time).subscribe(res=>{\r\n      console.log(res)\r\n      this.Message=res\r\n      this._router.navigate([''])\r\n    })\r\n  }\r\n  getSMS(){\r\n    this._setting.getTimeSMS().subscribe(res=>{\r\n      if(res!=null){\r\n        this.time=res.details.time\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<br>\r\ntime of validity of SMS : <input name=\"time\" type=\"number\" min=\"1\" max=\"10\" [(ngModel)]=\"time\"/>\r\n<button (click)=\"send()\">set time</button>\r\n{{Message}}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SettingsService {\r\n  uri = \"localhost:3000\";\r\n  private _setting = \"http://\" + this.uri + \"/api1/settings\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n  setTimeSMS(time) {\r\n    return this.http.post<any>(this._setting, { 'time': time })\r\n  }\r\n  getTimeSMS() {\r\n    return this.http.get<any>(this._setting);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '../authentication.service';\r\n@Component({\r\n  selector: 'app-sidebar-menu',\r\n  templateUrl: './sidebar-menu.component.html',\r\n  styleUrls: ['./sidebar-menu.component.css']\r\n})\r\nexport class SidebarMenuComponent implements OnInit {\r\n\r\n  sidenavWidth = 15;\r\n  user\r\n  myname;\r\n  constructor(public _authService: AuthenticationService) {  }\r\n\r\n  ngOnInit(): void {\r\n   this.user= JSON.parse(localStorage.getItem(\"user\"))\r\n   console.log(this.user)\r\n    this.myname=this.user.name;\r\n  }\r\n\r\n\r\n  getLogged(){\r\n    return this._authService.loggedIn()\r\n  }\r\n \r\n  // increase() {\r\n\t// \tthis.sidenavWidth = 15;\r\n\t// \tconsole.log('increase sidenav width');\r\n\t// }\r\n\t// decrease() {\r\n\t// \tthis.sidenavWidth = 4;\r\n\t// \tconsole.log('decrease sidenav width');\r\n\t// }\r\n}\r\n","<mat-sidenav-container fullscreen>\r\n    \r\n    <mat-sidenav #sidenav mode=\"side\" class=\"example-sidenav\" (click)=\"sidenav.toggle()\" opened=\"false\">\r\n        <mat-nav-list>\r\n            <mat-list-item routerLink=\"map\">\r\n                <mat-icon mat-list-icon>home</mat-icon>\r\n                <div fxFlex=\"10\"></div>\r\n                <div *ngIf=\"sidenavWidth > 6\" class=\"sidenav-item\">\r\n                    <span><img src=\"/assets/images/stalker.png\" alt=\"\" class=\"logo\"></span>\r\n                </div>\r\n\r\n            </mat-list-item>\r\n            <mat-list-item routerLink=\"map\" routerLinkActive=\"active\">\r\n                <mat-icon mat-list-icon>location_on</mat-icon>\r\n                <div fxFlex=\"10\"></div>\r\n                <div *ngIf=\"sidenavWidth > 6\" class=\"sidenav-item\">\r\n                    <span>Map</span>\r\n                </div>\r\n            </mat-list-item>\r\n\r\n            <mat-list-item routerLink=\"clients\" routerLinkActive=\"active\">\r\n                <mat-icon mat-list-icon>store</mat-icon>\r\n                <div fxFlex=\"10\"></div>\r\n                <div *ngIf=\"sidenavWidth > 6\" class=\"sidenav-item\">\r\n                    <span>Clients</span>\r\n                </div>\r\n            </mat-list-item>\r\n\r\n            <mat-list-item routerLink=\"routes\" routerLinkActive=\"active\">\r\n                <mat-icon mat-list-icon>route</mat-icon>\r\n                <div fxFlex=\"10\"></div>\r\n                <div *ngIf=\"sidenavWidth > 6\" class=\"sidenav-item\">\r\n                    <span>Routes</span>\r\n                </div>\r\n            </mat-list-item>\r\n\r\n            \r\n            <mat-list-item routerLink=\"planning\" routerLinkActive=\"active\">\r\n                <mat-icon mat-list-icon>edit_calendar</mat-icon>\r\n                <div fxFlex=\"10\"></div>\r\n                <div *ngIf=\"sidenavWidth> 6\" class=\"sidenav-item\">\r\n                    <span>Planning</span>\r\n                </div>\r\n            </mat-list-item>\r\n            \r\n            \r\n            <mat-list-item routerLink=\"offline\" routerLinkActive=\"active\">\r\n                    <mat-icon mat-list-icon>refresh</mat-icon>\r\n                    <div fxFlex=\"10\"></div>\r\n                    <div *ngIf=\"sidenavWidth> 6\" class=\"sidenav-item\">\r\n                        <span>Synchronisation</span>\r\n                    </div>\r\n            </mat-list-item>\r\n            \r\n            <mat-list-item routerLink=\"settings\" routerLinkActive=\"active\" *ngIf=\"user.role== 'Admin'\">\r\n                <mat-icon mat-list-icon>settings</mat-icon>\r\n                <div fxFlex=\"10\"></div>\r\n                <div *ngIf=\"sidenavWidth> 6\" class=\"sidenav-item\">\r\n                    <span>Settings</span>\r\n                </div>\r\n            </mat-list-item>\r\n            \r\n            \r\n        </mat-nav-list>\r\n    </mat-sidenav>\r\n\r\n    <div class=\"example-sidenav-content\">\r\n\r\n\r\n        <mat-toolbar class=\"tool\" fxLayout fxLayoutGap=\"16px\">\r\n            <button mat-icon-button>\r\n                <mat-icon (click)=\"sidenav.toggle()\" class=\"sidebar-toggle\">menu</mat-icon>\r\n            </button>\r\n            <!-- \r\n                <a mat-icon-button>\r\n                    <mat-icon>arrow_back</mat-icon>\r\n                </a> \r\n            -->\r\n            <div fxFlex=\"100%\" class=\"flexExpand\"></div>\r\n            <span style=\"font-size: 12px; color: #444242;\">{{myname}}</span>\r\n            <button mat-icon-button [matMenuTriggerFor]=\"logout\" #menuTrigger=\"matMenuTrigger\"\r\n                (click)=\"menuTrigger.openMenu()\">\r\n\r\n                <mat-icon style=\"color: #323030;\">keyboard_arrow_down</mat-icon>\r\n\r\n            </button>\r\n            <!-- Drop down menu for logging out -->\r\n            <mat-menu #logout=\"matMenu\" [overlapTrigger]=\"false\">\r\n                <span (mouseleave)=\"menuTrigger.closeMenu()\"></span>\r\n                <button mat-menu-item (click)=\"_authService.logoutUser()\">\r\n                    <mat-icon>logout</mat-icon>\r\n                    <span>Logout</span>\r\n                </button>\r\n            </mat-menu>\r\n\r\n        </mat-toolbar>\r\n\r\n        <div class=\"body\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n\r\n    </div>\r\n</mat-sidenav-container>","import { Injectable, Injector} from '@angular/core';\r\nimport { HttpInterceptor } from '@angular/common/http'\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private injector: Injector){}\r\n  intercept(req, next) {\r\n    let authService = this.injector.get(AuthenticationService)\r\n    let tokenizedReq = req.clone(\r\n      {\r\n        headers: req.headers.set('Authorization', 'bearer ' + authService.getToken())\r\n      }\r\n    )\r\n    return next.handle(tokenizedReq)\r\n  }\r\n}\r\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\nimport { ClientsService } from '../clients.service';\r\nimport {Observable, Subject} from \"rxjs\";\r\nimport { interval } from 'rxjs';\r\nimport * as geojson from 'geojson';\r\nimport { Router } from '@angular/router';\r\nimport { GeoJsonTypes } from 'geojson';\r\nimport { ThrowStmt } from '@angular/compiler';\r\n\r\n\r\nconst incr = 1;\r\n\r\n@Component({\r\n  selector: 'app-update-client',\r\n  templateUrl: './update-client.component.html',\r\n  styleUrls: ['./update-client.component.css']\r\n})\r\nexport class UpdateClientComponent implements AfterViewInit {\r\n  progress = 0;\r\n  selected= null;\r\n  user = JSON.parse(localStorage.getItem(\"user\"));\r\n  //from hajar\r\n  ListCodes=[];\r\n  code={nbr:null,value: null}\r\n  qrResultString: string;\r\n  isShown: boolean = false;\r\n  nfcShown: boolean = false;\r\n  hide: boolean = false;// hidden by default\r\n  test: boolean = false;\r\n  map;\r\n\r\n  lat = 33.2607691\r\n  lon = -7.6222771\r\n\r\n  icone = L.icon({\r\n    iconUrl: \"assets/green.png\",\r\n    iconSize: [12, 12],\r\n  });\r\n\r\n  circle: any;\r\n\r\n  percentage=0\r\n  Status=true\r\n  show=false\r\n  list=[]\r\n\r\n  geojsonFeature = {\r\n    type: 'Feature' as GeoJsonTypes, // or type: <GeoJsonTypes> 'Feature',\r\n    properties: {\r\n      name: 'Mohamed',\r\n      amenity: 'Baseball Stadium'\r\n    },\r\n      geometry: {\r\n      type: 'Point' as GeoJsonTypes, // or type: <GeoJsonTypes> 'Point',\r\n      coordinates: [-7.6222771, 33.2608691]\r\n    }\r\n  };\r\n\r\n  // for update functionality\r\n  \r\n  \r\n  \r\n  // fadma's variables\r\n  showVerifCodeInput = false\r\n  showNFCWebcam : boolean = false;\r\n  showPDVWebcam : boolean = false;\r\n  public webcamNFCImage = null;\r\n  public webcamPDVImage = null;\r\n  private trigger: Subject<void> = new Subject<void>();\r\n\r\n  showcheck(){\r\n    this.Status=true\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  clientInfo;\r\n  codeNFC:null;\r\n  TypeDPV:null;\r\n  detailType:null;\r\n  NomPrenom:null;\r\n  PhoneNumber:null;\r\n  scan:boolean=false;\r\n  nfcObject={Numero_Serie:null,Technologies:null,Type_card:null,UUID:null,NFCPhoto:null}\r\n  clientInfos={codes:[],codeNFC:null, NFCPhoto:null, TypeDPV:null, nfc:this.nfcObject,\r\n  NomPrenom:null,detailType:null,userId:null,userRole:null, PhoneNumber:null, PVPhoto:null,Status:\"red\"}\r\n  latclt\r\n  lonclt\r\n\r\n  // map\r\n\r\n  icon = L.icon({\r\n    iconUrl: \"assets/green.png\",\r\n    iconSize: [12, 12],\r\n  });\r\n\r\n  location_icon = L.icon({\r\n    iconUrl: \"assets/location.png\",\r\n    iconSize: [30,30]\r\n  });\r\n  markersCluster = new L.MarkerClusterGroup();\r\n\r\n\r\n  constructor(\r\n    private clientService: ClientsService, \r\n    private _router: Router) { \r\n\r\n      this.clientInfo = clientService.getClientInfo();\r\n      console.log('@@@@@@@@@@@@@@@@'+this.clientInfo.NomPrenom)\r\n    }\r\n\r\n  // ngOnInit(): void {\r\n  //   setInterval(() => this.manageProgress(), 150 )\r\n  //   this.initMap()\r\n  // }\r\n\r\n\r\n  // ngAfterViewInit(): void {\r\n  //   setInterval(() => this.manageProgress(), 150 )\r\n  //   this.initMap()\r\n\r\n  // }\r\n\r\n  // private initMap(): void {\r\n\r\n  //   this.map = L.map('map2', {\r\n  //     center: [this.lat, this.lon],\r\n  //     zoom: 15,\r\n  //     zoomControl: false\r\n  //   });\r\n\r\n  //   const zoomOptions = {\r\n  //     zoomInText: '+',\r\n  //     zoomOutText: '-',\r\n  //   };\r\n\r\n  //   // const zoom = L.control.zoom(zoomOptions);\r\n\r\n\r\n  //   const tiles = L.tileLayer('https://map.novatis.tech/hot/{z}/{x}/{y}.png', {\r\n  //     maxZoom: 30,\r\n  //     minZoom: 0\r\n  //   });\r\n\r\n\r\n\r\n  //   // const lc = L.control.locate(locationControl)\r\n\r\n  //   // lc.addTo(this.map);\r\n  //   // zoom.addTo(this.map);\r\n  //   tiles.addTo(this.map);\r\n  //   this.map.addLayer(this.markersCluster);\r\n  //   this.map.addControl(L.control.zoom({ position: 'bottomleft' }))\r\n\r\n  // }\r\n  manageProgress() {\r\n    if (this.progress === 100) {\r\n      this.progress = 0;\r\n    } else {\r\n      this.progress = this.progress + incr;\r\n    }\r\n  }\r\n\r\n  clearResult(): void {\r\n    this.qrResultString = null;\r\n  }\r\n\r\n  toggleShow(nbr:number,resultString:string) {\r\n    console.log(nbr);\r\n    console.log(resultString);\r\n    console.log(this.ListCodes);\r\n\r\n    this.isShown = !this.isShown;\r\n\r\n    if(nbr===1) {\r\n      this.code={nbr:nbr,value: resultString}\r\n      this.upsert(this.ListCodes,this.code)\r\n      this.qrResultString = null;\r\n\r\n    }\r\n    if(nbr===2) {\r\n      this.code={nbr:nbr,value: resultString}\r\n      this.upsert(this.ListCodes,this.code)\r\n      this.qrResultString = null;\r\n\r\n    }\r\n    if(nbr===3) {\r\n      this.code={nbr:nbr,value: resultString}\r\n      this.upsert(this.ListCodes,this.code)\r\n      this.qrResultString = null;\r\n\r\n    }\r\n    if(nbr===4) {\r\n      this.code={nbr:nbr,value: resultString}\r\n      this.upsert(this.ListCodes,this.code)\r\n      this.qrResultString = null;\r\n\r\n    }\r\n\r\n    //this.code={nbr:nbr,value: resultString}\r\n    //this.upsert(this.ListCodes,this.code)\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n   upsert(array, item) { // (1)\r\n    const i = array.findIndex(_item => _item.nbr === item.nbr);\r\n    if (i > -1) array[i] = item; // (2)\r\n    else array.push(item);\r\n  }\r\n  inter;\r\n\r\n  onCodeResult(resultString: string) {\r\n    this.qrResultString = resultString;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // setInterval(() => this.manageProgress(), 150)\r\n     this.initMap();\r\n    // this.getLocation()\r\n    // this.getLo();\r\n   \r\n      this.clientInfo = this.clientService.getClientInfo();\r\n      // console.log('&&&&&&&&&&&&&&&&&&&&&&&&&&&&&')\r\n      // console.log(this.clientInfo)\r\n    \r\n\r\n  }\r\n  acc=1222000;\r\n\r\n  private initMap(): void {\r\n\r\n    this.Status=true\r\n    this.testTimer()\r\n\r\n    this.map = L.map('map2', {\r\n      center: [this.lat, this.lon],\r\n      zoom: 14,\r\n      zoomControl: true\r\n    });\r\n\r\n    const tiles = L.tileLayer('https://map.novatis.tech/hot/{z}/{x}/{y}.png', {\r\n      maxZoom: 30,\r\n      minZoom: 0\r\n    });\r\n\r\n    tiles.addTo(this.map);\r\n\r\n    var location_icon = L.icon({\r\n      iconUrl: \"assets/location.png\",\r\n      iconSize: [30,30]\r\n    });\r\n    var marker= L.marker([this.lat, this.lon], {icon:location_icon})\r\n\r\n\r\n\r\n    this.inter= interval(1000).subscribe(x => {\r\n\r\n      if (navigator.geolocation) {\r\n        if(this.percentage==100){\r\n          this.inter.unsubscribe();\r\n          this.clientInfos[\"lat\"]=this.latclt\r\n          this.clientInfos[\"lon\"]=this.lonclt\r\n          //console.log(this.clientInfos)\r\n        }\r\n\r\n        var options = {\r\n          enableHighAccuracy: false,\r\n          timeout: 5000,\r\n          maximumAge: 2000\r\n        };\r\n        //console.log(this.percentage)\r\n        var geoId = navigator.geolocation.watchPosition((position: GeolocationPosition) => {\r\n\r\n          if (position) {\r\n            //console.log(\"Latitude: \" + position.coords.latitude +\r\n             // \" // Longitude: \" + position.coords.longitude);\r\n              var newlat=position.coords.latitude\r\n              var newLon=position.coords.longitude;\r\n\r\n              // if (position.coords.accuracy > 10) {\r\n              //   console.log(\"The GPS accuracy isn't good enough\");\r\n              // }\r\n              if(newlat!=this.lat || newLon!=this.lat){\r\n                //console.log(\"nmi rah tbdl\")\r\n                // this.percentage=0\r\n                this.lat = newlat\r\n                this.lon = newLon\r\n                this.list.push(position)\r\n                //console.log(this.list)\r\n                //console.log(\"Accuracy:\"+position.coords.accuracy)\r\n\r\n                if (position.coords.accuracy<this.acc){\r\n                  //console.log(\"********** Accuracy:\"+position.coords.accuracy)\r\n                  this.acc= position.coords.accuracy\r\n                  this.lat=position.coords.latitude\r\n                  this.lon=position.coords.longitude\r\n                  this.latclt= position.coords.latitude\r\n                  this.lonclt=position.coords.longitude\r\n                }\r\n                //console.log(this.lat)\r\n                //console.log(this.lon)\r\n                this.map.removeLayer(marker);\r\n                this.show=false\r\n                this.Status=true\r\n                marker = new (L.marker as any)([this.lat,this.lon],{icon:location_icon}).addTo(this.map);\r\n              }\r\n        }\r\n        },\r\n          (error: GeolocationPositionError) => console.log(error),options);\r\n          // console.log('Clear watch called');\r\n          // window.navigator.geolocation.clearWatch(geoId);\r\n      } else {\r\n        alert(\"Geolocation is not supported by this browser.\");\r\n      }\r\n    });\r\n\r\n\r\n}\r\n  getLo(){\r\n    // var marker = L.geoJSON(this.geojsonFeature, {\r\n    //   pointToLayer: (point, latlon) => {\r\n    //     return L.marker(latlon, { icon: this.icone })\r\n    //   }\r\n    // });\r\n    // marker.addTo(this.map)\r\n    this.circle = L.circle([this.lat, this.lon], 20).addTo(this.map);\r\n    L.Circle.include({\r\n      contains: function (latLng) {\r\n        return this.getLatLng().distanceTo(latLng) < this.getRadius();\r\n      }\r\n    });\r\n\r\n    this.map.fitBounds(this.circle.getBounds());\r\n\r\n  }\r\n\r\n\r\n\r\n  testTimer(){\r\n    this.percentage =0\r\n    interval(300).subscribe(x=>{\r\n        if( this.percentage <100){\r\n          this.percentage+=4\r\n            }\r\n        });\r\n  }\r\n\r\n  addNewComponent() {\r\n    this.show=true\r\n    this.Status=false\r\n  }\r\n  CheckCodes() {\r\n    this.nfcShown = !this.nfcShown;\r\n    this.test =true;\r\n   console.log(this.ListCodes)\r\n    this.clientInfos.codes=this.ListCodes\r\n\r\n  }\r\n\r\n\r\n\r\n  Read() {\r\n    console.log(\"read\")\r\n    \r\n     this.clientService.getNFC().subscribe(\r\n        res=> {   \r\n          console.log(res)\r\n          this.clientInfo.properties.nfc=res;\r\n          console.log(this.clientInfo)\r\n          /*this.clientInfo.nfc.Numero_Serie=res.Numero_Serie;\r\n          this.clientInfo.nfc.Technologies=res.Technologies\r\n          this.clientInfo.nfc.Type_card=res.Type_card\r\n          this.clientInfo.nfc.UUID=res.UUID;*/\r\n  }\r\n      )\r\n\r\n    \r\n\r\n\r\n  }\r\n\r\n  getCoordinates(){\r\n\r\n  }\r\n\r\n  verification_code=123456;\r\nSendSMS(phone){\r\n    this.clientService.getSMS(phone).subscribe(\r\n      res=> { \r\n        console.log(res) \r\n      this.verification_code=res.code\r\n      });\r\n  }\r\n   status;\r\n  codeSMS;\r\n  Verify(code: string) {\r\n    this.clientInfos.PhoneNumber=this.PhoneNumber\r\n    this.SendSMS(this.PhoneNumber);\r\n    \r\n    }\r\n  \r\n  VerifySMS(){\r\n    if(this.verification_code===this.codeSMS){\r\n        this.status=\"the code is correct\"\r\n    }else{\r\n      this.status=\"the code is incorrect\"\r\n    }\r\n  }\r\n\r\n\r\n  Update() {\r\n    \r\n    // this.clientInfos.PhoneNumber=this.PhoneNumber\r\n    // this.clientInfos.NomPrenom=this.NomPrenom\r\n    // this.clientInfos.TypeDPV=this.TypeDPV;\r\n    // this.clientInfos.detailType = this.detailType;\r\n    // this.clientInfos.userId = this.user._id;\r\n    // this.clientInfos.userRole = this.user.role;\r\n    // if(this.clientInfos.codeNFC===null){\r\n    //   this.clientInfos[\"Status\"]=\"red\"\r\n    // }\r\n    // else{\r\n    //   this.clientInfos[\"Status\"]=\"green\"\r\n    // }\r\n    // ***************** scanned codes ************* //\r\n    if(this.ListCodes.length != 0){\r\n      this.ListCodes.forEach(element => {\r\n        if(element.nbr == 1){\r\n          this.clientInfo.properties.codeDANON = element.value;\r\n        }else if(element.nbr == 2){\r\n          this.clientInfo.properties.codeCOLA = element.value\r\n        }else if(element.nbr == 3){\r\n          this.clientInfo.properties.codeFGD = element.value\r\n        }else if(element.nbr == 4){\r\n          this.clientInfo.properties.codeQR = element.value\r\n        }\r\n      });\r\n      \r\n      console.log()\r\n      // this.clientInfo.properties.=this.ListCodes\r\n    }\r\n\r\n    if(this.clientInfos.NFCPhoto){\r\n      this.clientInfo.properties.nfc.NFCPhoto = this.clientInfos.NFCPhoto\r\n      this.clientInfo.properties.NFCP=null\r\n    }\r\n\r\n    if(this.clientInfos.PVPhoto){\r\n      this.clientInfo.properties.PVPhoto = this.clientInfos.PVPhoto\r\n      this.clientInfo.properties.PVP=null\r\n    }\r\n    // add user ids\r\n    this.clientInfo.properties.updatedBy = this.user._id;\r\n    this.clientInfo.properties.userRole = this.user.role;\r\n    this.clientInfo.properties.updated_at = Date.now();\r\n    console.log('########## Updated Client ##########')\r\n    console.log(this.clientInfo)\r\n    if(this.clientInfo.properties.codeQR===null){\r\n      this.clientInfo.properties.status=\"pink\"\r\n    }\r\n    else{\r\n      this.clientInfo.properties.status=\"purple\"\r\n    }\r\n    this.clientService.updateClient(this.clientInfo).subscribe(res => console.log(res))\r\n    this._router.navigate(['map'])\r\n    // this.clientInfos={codes:[],codeNFC:null, NFCPhoto:null, TypeDPV:null,\r\n    //  NomPrenom:null, PhoneNumber:null, detailType:null,userId:null, userRole:null, PVPhoto:null,Status:\"red\"}\r\n\r\n  }\r\n\r\n\r\n  ///////////////////////\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // fadma's code\r\n\r\n  toggleNFCWebcam(){\r\n    this.showNFCWebcam = !this.showNFCWebcam;\r\n  }\r\n\r\n\r\n  displayNFCam(){\r\n    this.showNFCWebcam = !this.showNFCWebcam;\r\n  }\r\n\r\n  triggerSnapshot(): void {\r\n    this.trigger.next();\r\n  }\r\n\r\n  // handleImage(webcamImage): void {\r\n  //   console.info('Saved webcam image', webcamImage);\r\n  //   this.webcamImage = webcamImage;\r\n  //   if(this.camera1) {this.clientInfos.NFCPhoto= webcamImage}\r\n  //   if(this.camera2) {this.clientInfos.PVPhoto = webcamImage}\r\n\r\n  //   console.log(this.webcamNFCImage.imageAsDataUrl);\r\n  // }\r\n\r\n  get triggerObservable(): Observable<void> {\r\n    return this.trigger.asObservable();\r\n  }\r\n\r\n  handleNFCImage(webcamNFCImage): void {\r\n    console.info('received webcam image', webcamNFCImage);\r\n    this.webcamNFCImage = webcamNFCImage;\r\n    this.clientInfos.NFCPhoto= webcamNFCImage.imageAsDataUrl;\r\n\r\n  }\r\n\r\n  togglePDVWebcam(){\r\n    this.showPDVWebcam = !this.showPDVWebcam;\r\n  }\r\n\r\n\r\n  displayPDVcam(){\r\n    this.showPDVWebcam = !this.showPDVWebcam;\r\n  }\r\n\r\n  handlePDVImage(webcamPDVImage){\r\n    console.info('received webcam image', webcamPDVImage);\r\n    this.webcamPDVImage = webcamPDVImage;\r\n    this.clientInfos.PVPhoto= webcamPDVImage.imageAsDataUrl;\r\n  }\r\n\r\n}\r\n","<div class=\"content-body\">\r\n\r\n    <h2>Update Client</h2>\r\n\r\n    <ng-container *ngIf=\"percentage == 100; else elseTemplate\">\r\n        <p>Position Fixed</p>\r\n    </ng-container>\r\n    <ng-template #elseTemplate>\r\n        <p>Fixing Position...</p>\r\n    </ng-template>\r\n\r\n     <div >   \r\n        <pre>pos collectés: {{list.length}}</pre>\r\n        <pre>Accuracy: {{acc}}</pre>\r\n    </div>\r\n\r\n    \r\n\r\n    <div ng-app ng-controller=\"ApplicationController\" class=\"progress-cantainer\">\r\n        <mat-progress-bar mode=\"determinate\" [value]=\"percentage\"></mat-progress-bar>\r\n        <span style=\"position: absolute; top: 0em;\" [ngStyle]=\"{'left': percentage + '%'}\">{{percentage}}%</span>\r\n    </div>\r\n\r\n    <div class=\"map-container\">\r\n        <div id=\"map2\"></div>\r\n    </div>\r\n\r\n    <div>\r\n        <button mat-button class=\"btn-yellow\" (click)=\"showcheck()\" [disabled]=\"(percentage!=100) ||  !Status\">Next</button>\r\n    </div>\r\n    \r\n    <div class=\"container\" id=\"checkcodes\">\r\n        <div class=\"checkcodes-fields\">\r\n            <div class=\"scan-field\">\r\n                <label class=\"input-label\">Code Centrale Danoune : </label>\r\n                <div>\r\n                    <button mat-button class=\"btn-green\" [disabled]=\"test\" (click)=\"toggleShow(1,qrResultString);\">Scan</button>\r\n                    <div *ngFor=\"let code of ListCodes\" class=\"qr-container\">\r\n                        <span *ngIf=\"code.nbr == 1\">{{ code.value}}</span>\r\n                    </div>\r\n                    <span *ngIf=\"clientInfo.properties.codeDANON==null, else scanned\" style=\"color: red;\">Not scanned</span>\r\n                    <ng-template #scanned>{{clientInfo.properties.codeDANON}}</ng-template>     \r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"scan-field\">\r\n                <label class=\"input-label\">Code Coca Cola : </label>\r\n                <div>\r\n                    <button mat-button class=\"btn-green\" [disabled]=\"test\" (click)=\"toggleShow(2,qrResultString)\">Scan</button>\r\n                    <div *ngFor=\"let code of ListCodes\" class=\"qr-container\">\r\n                        <span *ngIf=\"code.nbr == 2\">{{ clientInfo.properties.codeCOLA}}</span>\r\n                    </div>\r\n                    <span *ngIf=\"clientInfo.properties.codeCOLA==null, else scanned\" style=\"color: red;\">Not scanned</span>\r\n                    <ng-template #scanned>{{clientInfo.properties.codeCOLA}}</ng-template>\r\n                </div>\r\n                \r\n            </div>\r\n            <div class=\"scan-field\">\r\n                <label class=\"input-label\">Code FGD : </label>\r\n                <div>\r\n                    <button mat-button class=\"btn-green\" [disabled]=\"test\" (click)=\"toggleShow(3,qrResultString)\">Scan</button>\r\n                    <div *ngFor=\"let code of ListCodes\" class=\"qr-container\">\r\n                        <span *ngIf=\"code.nbr == 3\">{{ clientInfo.properties.codeFGD}}</span>\r\n                    </div>\r\n                    <span *ngIf=\"clientInfo.properties.codeFGD==null, else scanned\" style=\"color: red;\">Not scanned</span>\r\n                    <ng-template #scanned>{{clientInfo.properties.codeFGD}}</ng-template>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        <div id=\"divshow\" *ngIf=\"isShown && !scan\" class=\"Scan-container\">\r\n            <p>Scanning...</p> \r\n            <zxing-scanner Class=\"small-video\" (scanSuccess)=\"onCodeResult($event)\"></zxing-scanner>\r\n            <section class=\"results\" *ngIf=\"qrResultString\">\r\n                <div>\r\n                    <small>Result {{code.nbr}} : </small>\r\n                    <strong>{{ qrResultString }}</strong>\r\n                </div>\r\n                <button mat-button class=\"btn-green\" (click)=\"toggleShow(code.nbr,qrResultString)\">Done</button>\r\n            </section>\r\n        </div>\r\n        <button mat-button class=\"btn-yellow\" [disabled]=\"test\" (click)=\"CheckCodes()\">Check codes</button>\r\n        \r\n        \r\n    </div>\r\n\r\n    <div class=\"container\" id=\"nfc\">\r\n\r\n        <div class=\"inputs-container\">\r\n            <div class=\"nfc\">\r\n                <div class=\"scan-field\">\r\n                    <label class=\"input-label\">NFC card puce : </label>\r\n                    <button mat-button class=\"btn-green\" (click)=\"Read()\">Read</button>  \r\n                </div>\r\n                <div *ngIf=\"clientInfo.properties.nfc.UUID!= null\" class=\"nfc-div\">\r\n                    <span>UUID:</span><p>{{clientInfo.properties.nfc.UUID}}</p>\r\n                    <span>Numero_Serie:</span><p>{{clientInfo.properties.nfc.Numero_Serie}}</p>\r\n                    <span>Type_card:</span><p>{{clientInfo.properties.nfc.Type_card}}</p>\r\n                    <span>Technologies:</span><p>{{clientInfo.properties.nfc.Technologies}}</p>\r\n                </div>\r\n                <div class=\"scan-field\">\r\n                    <label class=\"input-label\">Qr Code : </label>\r\n                    <div>\r\n                        <button mat-button class=\"btn-green\" (click)=\"toggleShow(4,qrResultString);scan=!scan\">Scan</button>\r\n                        <div *ngFor=\"let code of ListCodes\" class=\"qr-container\">\r\n                            <span *ngIf=\"code.nbr == 4\">{{code.value}}</span>\r\n                        </div>\r\n                        <span *ngIf=\"clientInfo.properties.codeQR==null, else scanned\" style=\"color: red;\">Not scanned</span>\r\n                        <ng-template #scanned>{{clientInfo.properties.codeQR}}</ng-template>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div *ngIf=\"isShown && scan \" class=\"Scan-container\">\r\n                    <zxing-scanner Class=\"small-video\" (scanSuccess)=\"onCodeResult($event)\"></zxing-scanner>\r\n            \r\n                    <section class=\"results\" *ngIf=\"qrResultString\">\r\n                      <div>\r\n                        <small>Result: </small>\r\n                        <strong>{{ qrResultString }}</strong>\r\n                      </div>\r\n                      <button mat-button class=\"btn-green\" (click)=\"toggleShow(code.nbr,qrResultString)\">Done</button>\r\n                    </section>\r\n                </div>\r\n                <div class=\"scan-field\">\r\n                    <label class=\"input-label\">NFC photo : </label>\r\n                    <button mat-button class=\"btn-green\" (click)=\"displayNFCam();\" ><mat-icon>camera_alt</mat-icon></button>\r\n                </div>\r\n                <div *ngIf=\"showNFCWebcam\" class=\"Scan-container\">\r\n                    <webcam [height]=\"200\"\r\n                            [width]=\"500\"\r\n                            [trigger]=\"triggerObservable\"\r\n                            (imageCapture)=\"handleNFCImage($event)\">\r\n                    </webcam>\r\n                    <div class=\"reas-nfc\">\r\n                        <button mat-button class=\"btn-green\"  (click)=\"triggerSnapshot();\">Click Here</button>\r\n                        <button mat-button class=\"btn-green\"  (click)=\"toggleNFCWebcam();\">Close Camera</button>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"Scan-container\">\r\n                    <div class=\"snapshot\"  >\r\n                    \r\n                        <img *ngIf=\"webcamNFCImage; else nfcphoto\" [height]=\"200\"\r\n                           [width]=\"200\" [src]=\"webcamNFCImage.imageAsDataUrl\" style=\"border-radius: 8px;\"/>\r\n                        \r\n                    \r\n                    <ng-template #nfcphoto>\r\n                        <img  [height]=\"200\"\r\n                           [width]=\"200\" src=\"{{clientInfo.properties.NFCP}}\" style=\"border-radius: 8px;\"/>\r\n                    </ng-template>\r\n                    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"pdv\">\r\n\r\n                <div class=\"field\">\r\n                    <mat-form-field>\r\n                        <mat-select placeholder=\"PDV Type*\" panelClass=\"selectPanel2\" [(ngModel)]=\"clientInfo.properties.TypeDPV\">\r\n                            <mat-option value=\"Detail\">Detail</mat-option>\r\n                            <mat-option value=\"Gros\">Gros</mat-option>\r\n                            <mat-option value=\"Demi Gros\">Demi Gros</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"field\" *ngIf=\"clientInfo.TypeDPV=='Detail'\">\r\n                    <mat-form-field>\r\n                        <mat-select placeholder=\"PDV Detail Type*\" panelClass=\"selectPanel2\" [(ngModel)]=\"clientInfo.properties.detailType\">\r\n                            <mat-option value=\"Alimentation\">Alimentation</mat-option>\r\n                            <mat-option value=\"Superette\">Superette</mat-option>\r\n                            <mat-option value=\"Aattar\">Aattar</mat-option>\r\n                            <mat-option value=\"Fruits sec\">Fruits sec</mat-option>\r\n                            <mat-option value=\"Boundif\">Boundif</mat-option>\r\n                            <mat-option value=\"Parfumerie\">Parfumerie</mat-option>\r\n                            <mat-option value=\"Kioske\">Kioske</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                    \r\n                <div class=\"field\">\r\n                    <mat-form-field>\r\n                        <mat-label>First & Last Name*</mat-label>\r\n                        <input matInput placeholder=\"Typing...\" [(ngModel)]=\"clientInfo.properties.NomPrenom\"/>\r\n                    </mat-form-field>\r\n                </div>\r\n                \r\n                     \r\n                <div class=\"field\">\r\n\r\n                    <mat-form-field>\r\n                        <mat-label>Phone number*</mat-label>\r\n                        <input matInput placeholder=\"+212\" [(ngModel)]=\"clientInfo.properties.PhoneNumber\"/>\r\n                    </mat-form-field>\r\n    \r\n                    <button mat-button class=\"btn-green\" (click)=\"Verify('code'); showVerifCodeInput= true\">Verify</button>\r\n                </div>\r\n\r\n                <div class=\"field\" *ngIf=\"showVerifCodeInput\">\r\n                    <mat-form-field>\r\n                        <input matInput placeholder=\"code SMS\" name=\"codeSMS\" [(ngModel)]=\"codeSMS\"/>\r\n                    </mat-form-field>\r\n                    <button (click)=\"VerifySMS()\">OK</button>\r\n                    {{status}}\r\n                </div>\r\n                <div class=\"field\">\r\n                    <mat-label class=\"input-label\">PV photo : </mat-label>\r\n                    <button mat-button class=\"btn-green\" (click)=\"displayPDVcam()\"><mat-icon>camera_alt</mat-icon></button>    \r\n                </div>\r\n\r\n                <div  *ngIf=\"showPDVWebcam\" class=\"Scan-container\">\r\n                    <webcam [height]=\"200\"\r\n                            [width]=\"500\"\r\n                            [trigger]=\"triggerObservable\"\r\n                            (imageCapture)=\"handlePDVImage($event)\">\r\n                    </webcam>\r\n                    <div class=\"reas-nfc\">\r\n                        <button mat-button class=\"btn-green\"  (click)=\"triggerSnapshot()\">Click Here</button>\r\n                        <button mat-button class=\"btn-green\"  (click)=\"togglePDVWebcam()\">Close Camera</button>\r\n                    </div>\r\n                </div>\r\n                \r\n        \r\n                  <!--          <button class=\"actionBtn\" (click)=\"triggerSnapshot();\">-->\r\n                  <!--            Click Here and take the Shot</button>-->\r\n                  <div class=\"Scan-container\">\r\n        \r\n                    <div class=\"snapshot\">\r\n                        <img *ngIf=\"webcamPDVImage; else pdvphoto\" [height]=\"200\"\r\n                        [width]=\"200\" [src]=\"webcamPDVImage.imageAsDataUrl\" style=\"border-radius: 8px;\"/>\r\n                     \r\n                 \r\n                 <ng-template #pdvphoto>\r\n                     <img  [height]=\"200\"\r\n                        [width]=\"200\" src=\"{{clientInfo.properties.PVP}}\" style=\"border-radius: 8px;\"/>\r\n                 </ng-template>\r\n                    </div>\r\n                  </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <button mat-button class=\"btn-yellow\" (click)=\"Update()\">Update</button>  \r\n    </div>\r\n   \r\n\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}
{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/addclient/addclient.component.ts","./src/app/addclient/addclient.component.html","./src/app/admin/add-user/add-user.component.ts","./src/app/admin/add-user/add-user.component.html","./src/app/admin/admin.service.ts","./src/app/admin/delete-requests/delete-requests.component.ts","./src/app/admin/delete-requests/delete-requests.component.html","./src/app/admin/planning/planning.component.ts","./src/app/admin/planning/planning.component.html","./src/app/admin/update-user/update-user.component.ts","./src/app/admin/update-user/update-user.component.html","./src/app/admin/user-info/user-info.component.ts","./src/app/admin/user-info/user-info.component.html","./src/app/admin/users/users.component.ts","./src/app/admin/users/users.component.html","./src/app/alert-dialog/alert-dialog.component.ts","./src/app/alert-dialog/alert-dialog.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth-gaurd.service.ts","./src/app/authentication.service.ts","./src/app/client-info/client-info.component.ts","./src/app/client-info/client-info.component.html","./src/app/clients.service.ts","./src/app/clients/clients.component.ts","./src/app/clients/clients.component.html","./src/app/confirmation-dialog/confirmation-dialog.component.ts","./src/app/confirmation-dialog/confirmation-dialog.component.html","./src/app/delete-client/delete-client.component.ts","./src/app/delete-client/delete-client.component.html","./src/app/extract/extract.component.ts","./src/app/extract/extract.component.html","./src/app/full-image/full-image.component.ts","./src/app/full-image/full-image.component.html","./src/app/indexdb.service.ts","./src/app/injection/injection.component.ts","./src/app/injection/injection.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/offline/offline.component.ts","./src/app/offline/offline.component.html","./src/app/online-offline-service.service.ts","./src/app/routes/routes.component.ts","./src/app/routes/routes.component.html","./src/app/settings/settings.component.ts","./src/app/settings/settings.component.html","./src/app/settings/settings.service.ts","./src/app/sidebar-menu/sidebar-menu.component.ts","./src/app/sidebar-menu/sidebar-menu.component.html","./src/app/token-interceptor.service.ts","./src/app/update-client/update-client.component.ts","./src/app/update-client/update-client.component.html","./src/environments/environment.ts","./src/main.ts","ignored|D:\\Stalker\\stalker_05_01_2022\\stalker\\frontend\\node_modules\\xlsx|crypto","ignored|D:\\Stalker\\stalker_05_01_2022\\stalker\\frontend\\node_modules\\xlsx|fs","ignored|D:\\Stalker\\stalker_05_01_2022\\stalker\\frontend\\node_modules\\xlsx|stream"],"sourcesContent":["import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\nimport { ClientsService } from '../clients.service';\r\nimport { Observable, Subject } from \"rxjs\";\r\nimport { interval } from 'rxjs';\r\nimport * as geojson from 'geojson';\r\nimport { Router } from '@angular/router';\r\nimport { GeoJsonTypes } from 'geojson';\r\nimport { UUID } from 'angular2-uuid';\r\nimport { OnlineOfflineServiceService } from '../online-offline-service.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { SettingsService } from '../settings/settings.service';\r\nimport { IndexdbService } from '../indexdb.service';\r\nimport { AlertDialogComponent } from '../alert-dialog/alert-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nconst incr = 1;\r\n\r\n@Component({\r\n  selector: 'app-addclient',\r\n  templateUrl: './addclient.component.html',\r\n  styleUrls: ['./addclient.component.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n\r\n})\r\n\r\nexport class AddclientComponent implements AfterViewInit {\r\n\r\n  //////////////// VARIABLE'S DECLARATION /////////////////////////\r\n  mySector = \"test\";\r\n  progress = 0;\r\n  selected = null;\r\n  user = JSON.parse(localStorage.getItem(\"user\"));\r\n  ListCodes = [];\r\n  code = { nbr: null, value: null }\r\n  qrResultString: string;\r\n  isShown: boolean = false;\r\n  nfcShown: boolean = false;\r\n  hide: boolean = false;// hidden by default\r\n  test: boolean = false;\r\n  map;\r\n  loggedUser;\r\n  lat = 33.2607691\r\n  lon = -7.6222771\r\n\r\n  icone = L.icon({\r\n    iconUrl: \"assets/green.png\",\r\n    iconSize: [12, 12],\r\n  });\r\n\r\n  circle: any;\r\n\r\n  percentage = 0\r\n  Status = true\r\n  show = false\r\n  list = []\r\n\r\n  geojsonFeature = {\r\n    type: 'Feature' as GeoJsonTypes, // or type: <GeoJsonTypes> 'Feature',\r\n    properties: {\r\n      name: 'Mohamed',\r\n      amenity: 'Baseball Stadium'\r\n    },\r\n    geometry: {\r\n      type: 'Point' as GeoJsonTypes, // or type: <GeoJsonTypes> 'Point',\r\n      coordinates: [-7.6222771, 33.2608691]\r\n    }\r\n  };\r\n\r\n  showVerifCodeInput = false\r\n  showNFCWebcam: boolean = false;\r\n  showPDVWebcam: boolean = false;\r\n  public webcamNFCImage = null;\r\n  public webcamPDVImage = null;\r\n  private trigger: Subject<void> = new Subject<void>();\r\n\r\n  //*clients info*//\r\n  popupService: any;\r\n  codeNFC: null;\r\n  UUid: null;\r\n  TypeDPV: null;\r\n  detailType: null;\r\n  NomPrenom: null;\r\n  PhoneNumber: null;\r\n  scan: boolean = false;\r\n  nfcObject = { Numero_Serie: null, Technologies: null, Type_card: null, UUID: null, NFCPhoto: null }\r\n  clientInfos = {\r\n    UUid: null, codes: [], codeNFC: null, NFCPhoto: null, TypeDPV: null, sector: null, nfc: this.nfcObject,\r\n    NomPrenom: null, detailType: null, userId: null, userRole: null, PhoneNumber: null, PVPhoto: null, Status: \"red\", created_at: null, updated_at: null\r\n  }\r\n  latclt\r\n  lonclt\r\n\r\n  inter;\r\n  acc = 1222000;\r\n  version = 6\r\n\r\n  //* map*//\r\n\r\n  icon = L.icon({\r\n    iconUrl: \"assets/green.png\",\r\n    iconSize: [12, 12],\r\n  });\r\n\r\n  location_icon = L.icon({\r\n    iconUrl: \"assets/location.png\",\r\n    iconSize: [30, 30]\r\n  });\r\n  markersCluster = new L.MarkerClusterGroup();\r\n\r\n  //*SMS VARIABLES *//\r\n  disbale_sms = false;\r\n  verification_code = null;\r\n  timeLeft: number = 5;\r\n  interval_validation;\r\n  status;\r\n  display;\r\n  codeSMS\r\n  ///////////////////////////////////////////////////////////////////////////\r\n\r\n  //////////////**************** CONSTRUCTOR ******************///////////////////\r\n  constructor(private readonly onlineOfflineService: OnlineOfflineServiceService,\r\n    private clientService: ClientsService,\r\n    private _router: Router,\r\n    private aroute: ActivatedRoute,\r\n    private index: IndexdbService,\r\n    private dialog: MatDialog,\r\n    private _setting: SettingsService) {\r\n\r\n  }\r\n  ////////////////////////////////////////////////////////////////\r\n\r\n  //////////////*************** INTERFACE FUNCTIONS *****************//////////\r\n  showcheck() {\r\n    this.Status = true\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  manageProgress() {\r\n    if (this.progress === 100) {\r\n      this.progress = 0;\r\n    } else {\r\n      this.progress = this.progress + incr;\r\n    }\r\n  }\r\n\r\n  clearResult(): void {\r\n    this.qrResultString = null;\r\n  }\r\n\r\n  toggleShow(nbr: number, resultString: string) {\r\n    console.log(nbr);\r\n    console.log(resultString);\r\n    console.log(this.ListCodes);\r\n    this.isShown = !this.isShown;\r\n    if (nbr === 1) {\r\n      this.code = { nbr: nbr, value: resultString }\r\n      this.upsert(this.ListCodes, this.code)\r\n      this.qrResultString = null;\r\n\r\n    }\r\n    if (nbr === 2) {\r\n      this.code = { nbr: nbr, value: resultString }\r\n      this.upsert(this.ListCodes, this.code)\r\n      this.qrResultString = null;\r\n\r\n    }\r\n    if (nbr === 3) {\r\n      this.code = { nbr: nbr, value: resultString }\r\n      this.upsert(this.ListCodes, this.code)\r\n      this.qrResultString = null;\r\n\r\n    }\r\n    if (nbr === 4) {\r\n      this.code = { nbr: nbr, value: resultString }\r\n      this.upsert(this.ListCodes, this.code)\r\n      this.qrResultString = null;\r\n    }\r\n  }\r\n\r\n  upsert(array, item) { // (1)\r\n    const i = array.findIndex(_item => _item.nbr === item.nbr);\r\n    if (i > -1) array[i] = item; // (2)\r\n    else array.push(item);\r\n  }\r\n\r\n  onCodeResult(resultString: string) {\r\n    this.qrResultString = resultString;\r\n  }\r\n\r\n  toggleNFCWebcam() {\r\n    this.showNFCWebcam = !this.showNFCWebcam;\r\n  }\r\n\r\n  displayNFCam() {\r\n    this.showNFCWebcam = !this.showNFCWebcam;\r\n  }\r\n\r\n  triggerSnapshot(): void {\r\n    this.trigger.next();\r\n  }\r\n\r\n  get triggerObservable(): Observable<void> {\r\n    return this.trigger.asObservable();\r\n  }\r\n\r\n  handleNFCImage(webcamNFCImage): void {\r\n    console.info('received webcam image', webcamNFCImage);\r\n    this.webcamNFCImage = webcamNFCImage;\r\n    this.clientInfos.nfc.NFCPhoto = webcamNFCImage.imageAsDataUrl;\r\n    console.log(this.clientInfos)\r\n  }\r\n\r\n  togglePDVWebcam() {\r\n    this.showPDVWebcam = !this.showPDVWebcam;\r\n  }\r\n\r\n  displayPDVcam() {\r\n    this.showPDVWebcam = !this.showPDVWebcam;\r\n  }\r\n\r\n  handlePDVImage(webcamPDVImage) {\r\n    console.info('received webcam image', webcamPDVImage);\r\n    this.webcamPDVImage = webcamPDVImage;\r\n    this.clientInfos.PVPhoto = webcamPDVImage.imageAsDataUrl;\r\n  }\r\n\r\n  openAlertDialog(msg, btn) {\r\n    const dialogRef = this.dialog.open(AlertDialogComponent, {\r\n      data: {\r\n        message: msg,\r\n        buttonText: {\r\n          ok: btn,\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  addNewComponent() {\r\n    this.show = true\r\n    this.Status = false\r\n  }\r\n\r\n  CheckCodes() {\r\n    this.nfcShown = !this.nfcShown;\r\n    this.test = true;\r\n    console.log(this.ListCodes)\r\n    this.clientInfos.codes = this.ListCodes\r\n  }\r\n  /////////////////////////////////////////////////////////////////\r\n\r\n  ///////////////////****** INIT FUNCTION *********//////////////////\r\n\r\n  ngAfterViewInit(): void {\r\n    this.loggedUser = JSON.parse(localStorage.getItem(\"user\"));\r\n    this.initMap();\r\n    this._setting.getSettings(\"sms\").subscribe(res => this.timeLeft = res.details.time)\r\n    this.aroute.paramMap.subscribe(params => {\r\n      this.mySector = params.get('sector')\r\n      console.log(\"mysector\" + this.mySector)\r\n      this.clientInfos.sector = this.mySector\r\n    })\r\n  }\r\n\r\n  ///////////////////////////// MAP FUNCTION /////////////////////////////\r\n  private initMap(): void {\r\n    this.Status = true\r\n    this.testTimer()\r\n\r\n    this.map = L.map('map2', {\r\n      center: [this.lat, this.lon],\r\n      zoom: 14,\r\n      zoomControl: true\r\n    });\r\n\r\n    const tiles = L.tileLayer('https://map.novatis.tech/hot/{z}/{x}/{y}.png', {\r\n      maxZoom: 30,\r\n      minZoom: 0\r\n    });\r\n\r\n    tiles.addTo(this.map);\r\n\r\n    var location_icon = L.icon({\r\n      iconUrl: \"assets/location.png\",\r\n      iconSize: [30, 30]\r\n    });\r\n    var marker = L.marker([this.lat, this.lon], { icon: location_icon })\r\n    this.inter = interval(1000).subscribe(x => {\r\n\r\n      if (navigator.geolocation) {\r\n        if (this.percentage == 100) {\r\n          this.inter.unsubscribe();\r\n          this.clientInfos[\"lat\"] = this.latclt\r\n          this.clientInfos[\"lon\"] = this.lonclt\r\n        }\r\n\r\n        var options = {\r\n          enableHighAccuracy: false,\r\n          timeout: 5000,\r\n          maximumAge: 2000\r\n        };\r\n        var geoId = navigator.geolocation.watchPosition((position: GeolocationPosition) => {\r\n\r\n          if (position) {\r\n            var newlat = position.coords.latitude\r\n            var newLon = position.coords.longitude;\r\n            if (newlat != this.lat || newLon != this.lat) {\r\n              this.lat = newlat\r\n              this.lon = newLon\r\n              this.list.push(position)\r\n              if (position.coords.accuracy < this.acc) {\r\n                console.log(\"********** Accuracy:\" + position.coords.accuracy)\r\n                this.acc = position.coords.accuracy\r\n                this.lat = position.coords.latitude\r\n                this.lon = position.coords.longitude\r\n                this.latclt = position.coords.latitude\r\n                this.lonclt = position.coords.longitude\r\n              }\r\n              this.map.removeLayer(marker);\r\n              this.show = false\r\n              this.Status = true\r\n              marker = new (L.marker as any)([this.lat, this.lon], { icon: location_icon }).addTo(this.map);\r\n            }\r\n            console.log(this.lat)\r\n            console.log(this.lon)\r\n            this.map.removeLayer(marker);\r\n            this.show = false\r\n            this.Status = true\r\n            marker = new (L.marker as any)([this.lat, this.lon], { icon: location_icon }).addTo(this.map);\r\n          }\r\n        },\r\n          (error: GeolocationPositionError) => console.log(error), options);\r\n      } else {\r\n        alert(\"Geolocation is not supported by this browser.\");\r\n      }\r\n    });\r\n  }\r\n  //////////////////////////////////////////////////////////////////////\r\n\r\n  /////////////******** TIMER FOR FIX POSITION ********////////////////\r\n  testTimer() {\r\n    this.percentage = 0\r\n    interval(300).subscribe(x => {\r\n      if (this.percentage < 100) {\r\n        this.percentage += 4\r\n      }\r\n    });\r\n  }\r\n\r\n  ///////////////////////// NFC FUNCTION READ ////////////////////////////\r\n\r\n  Read() {\r\n    console.log(\"read\")\r\n\r\n    this.clientService.getNFC().subscribe(\r\n      res => {\r\n        this.clientInfos.nfc.Numero_Serie = res.Numero_Serie;\r\n        this.clientInfos.nfc.Technologies = res.Technologies\r\n        this.clientInfos.nfc.Type_card = res.Type_card\r\n        this.clientInfos.nfc.UUID = res.UUID;\r\n      }\r\n    )\r\n\r\n  }\r\n  ////////////////////////////////////////////////////////////////////\r\n\r\n  /////////////*********** SMS VERIFICATION **********/////////////////\r\n\r\n  ///send sms (Nano)\r\n  SendSMS(phone) {\r\n    this.clientService.getSMS(phone).subscribe(\r\n      res => {\r\n        console.log(res)\r\n        this.verification_code = res.code\r\n      });\r\n  }\r\n  ;\r\n  Verify(code: string) {\r\n    this.disbale_sms = true;\r\n    //this.clientInfos.PhoneNumber = this.PhoneNumber\r\n    this.timer(this.timeLeft);\r\n    this.SendSMS(this.PhoneNumber);\r\n  }\r\n\r\n  VerifySMS() {\r\n    if (this.verification_code === this.codeSMS) {\r\n      this.status = \"the code is correct\"\r\n      this.clientInfos.PhoneNumber=this.PhoneNumber;\r\n    } else {\r\n      this.status = \"the code is incorrect\"\r\n    }\r\n  }\r\n\r\n  timer(minute) {\r\n    // let minute = 1;\r\n    let seconds: number = minute * 60;\r\n    let textSec: any = \"0\";\r\n    let statSec: number = 60;\r\n\r\n    const prefix = minute < 10 ? \"0\" : \"\";\r\n\r\n    const timer = setInterval(() => {\r\n      seconds--;\r\n      if (statSec != 0) statSec--;\r\n      else statSec = 59;\r\n\r\n      if (statSec < 10) {\r\n        textSec = \"0\" + statSec;\r\n      } else textSec = statSec;\r\n\r\n      this.display = `${prefix}${Math.floor(seconds / 60)}:${textSec}`;\r\n\r\n      if (seconds == 0) {\r\n        console.log(\"finished\");\r\n        clearInterval(timer);\r\n        this.verification_code = null;\r\n        this.disbale_sms = false;\r\n      }\r\n    }, 1000);\r\n  }\r\n  //////////////////////////////////////////////////////////////\r\n\r\n  /////////////*********  SEND CLIENT INFOS ************////////////\r\n  Send() {\r\n    // this.clientInfos.UUid=UUID.UUID();\r\n    //this.clientInfos.PhoneNumber = this.PhoneNumber\r\n    this.clientInfos.NomPrenom = this.NomPrenom\r\n    this.clientInfos.TypeDPV = this.TypeDPV;\r\n    this.clientInfos.detailType = this.detailType;\r\n    this.clientInfos.userId = this.user._id;\r\n    this.clientInfos.userRole = this.user.role;\r\n    this.clientInfos.created_at = new Date()\r\n    this.clientInfos.updated_at = new Date()\r\n    if(this.user.role==\"Seller\"){\r\n      this.clientInfos.Status = \"white_red\"\r\n    }else{\r\n      this.clientInfos.Status = \"red_white\"\r\n    }\r\n   \r\n    console.log(this.clientInfos)\r\n    if (!this.onlineOfflineService.isOnline) {\r\n      this.clientService.addTodo(this.clientInfos);\r\n      this.AddNewClientIndexDB()\r\n    } else {\r\n      this.clientService.SendClient(this.clientInfos).subscribe((res) => {\r\n        console.log(\"\\n **********Response form API************\")\r\n        console.log(res)\r\n        //this.index.ClearData();\r\n        var db, transaction;\r\n        var request = window.indexedDB.open(\"off\", this.version)\r\n        request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n          console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n        };\r\n        request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n          db = event.target.result;\r\n          console.log(\"$$$$$$$$$$$$$$$$ Success Add client $$$$$$$$$$$$$$$$$$\")\r\n          this.clientService.getAllClient().subscribe((res) => {\r\n            console.log(\"\\n get all element After Adding New Client \\n \")\r\n            console.log(res)\r\n            var i = 0;\r\n            res.forEach((element, index, array) => {\r\n              i++;\r\n              console.log(\"-----------------------------------\")\r\n              console.log(element)\r\n              console.log(\"-----------------------------------\")\r\n              var geo = { _id: element._id, Valeur: JSON.stringify(element.geometry) }\r\n              transaction = db.transaction(['data'], 'readwrite');\r\n              var objectStore = transaction.objectStore(\"data\");\r\n              var request = objectStore.put(geo)\r\n              request.onsuccess = (event) => {\r\n                console.log(\"****************** done Adding to Database After Adding Client *******************\")\r\n              }\r\n              if (i === array.length) {\r\n                console.log(\"Array I\" + i)\r\n                this._router.navigate(['/map'])\r\n              }\r\n            });\r\n\r\n          });\r\n\r\n        }\r\n\r\n      });\r\n    }\r\n  }\r\n  ////////////////////////////////////////////////////////////////\r\n\r\n  ////////////********** ADD CLIENT IN OFFLINE MODE **************/////////////////\r\n  AddNewClientIndexDB() {\r\n    var db, transaction;\r\n    var request = window.indexedDB.open(\"off\", this.version)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      var clientGeo = \"hhh\";\r\n      var _id = UUID.UUID();\r\n      var codeSector = this.mySector.slice(0, 3)\r\n      ///////\r\n      var geom = {\r\n        \"geometry\": {\r\n          \"type\": \"Feature\",\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [this.clientInfos[\"lon\"], this.clientInfos[\"lat\"]]\r\n          },\r\n          \"properties\": {\r\n            \"codeDANON\": this.clientInfos.codes[0],\r\n            \"codeCOLA\": this.clientInfos.codes[1],\r\n            \"codeFGD\": this.clientInfos.codes[2],\r\n            \"codeQR\": 0,\r\n            \"nfc\": this.nfcObject,\r\n            \"Code_Region\": parseInt(codeSector),\r\n            \"Code_Secteur_OS\": parseInt(this.mySector),\r\n            \"machine\": \"CMG\",\r\n            \"TypeDPV\": this.TypeDPV,\r\n            \"detailType\": this.detailType,\r\n            \"userId\": 'test',\r\n            \"userRole\": \"seller\",\r\n            \"NomPrenom\": this.NomPrenom,\r\n            \"PhoneNumber\": this.PhoneNumber,\r\n            \"PVP\": this.clientInfos.PVPhoto,\r\n            \"status\": \"white_red\"\r\n          }\r\n        },\r\n        \"_id\": _id\r\n      }\r\n      console.log(geom)\r\n\r\n      const geo = { _id: geom._id, Valeur: JSON.stringify(geom.geometry) };\r\n      transaction = db.transaction(['data'], 'readwrite');\r\n      const objectStore = transaction.objectStore('data');\r\n      const request = objectStore.add(geo);\r\n      request.onsuccess = (event) => {\r\n        console.log('done Adding');\r\n        this._router.navigate(['map'])\r\n      };\r\n    }\r\n  }\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n}\r\n","<div class=\"content-body\">\r\n    \r\n    <ng-container *ngIf=\"percentage == 100; else elseTemplate\">\r\n        <p>Position Fixed</p>\r\n    </ng-container>\r\n    <ng-template #elseTemplate>\r\n        <p>Fixing Position...</p>\r\n    </ng-template>\r\n\r\n    <div>\r\n        <pre>pos collectés: {{list.length}}</pre>\r\n        <pre>Accuracy: {{acc}}</pre>\r\n    </div>\r\n\r\n    <div ng-app ng-controller=\"ApplicationController\" class=\"progress-cantainer\">\r\n        <mat-progress-bar mode=\"determinate\" [value]=\"percentage\"></mat-progress-bar>\r\n        <span style=\"position: absolute; top: 0em;\" [ngStyle]=\"{'left': percentage + '%'}\">{{percentage}}%</span>\r\n    </div>\r\n\r\n    <div class=\"map-container\">\r\n        <div id=\"map2\"></div>\r\n    </div>\r\n\r\n    <div>\r\n        <button mat-button class=\"btn-yellow\" (click)=\"showcheck()\"\r\n            [disabled]=\"(percentage!=100) ||  !Status\">Next</button>\r\n    </div>\r\n\r\n    <div class=\"container\" id=\"checkcodes\" *ngIf=\"hide\">\r\n        <div class=\"checkcodes-fields\">\r\n            <div class=\"scan-field\">\r\n                <label class=\"input-label\">Code Centrale Danoune : </label>\r\n                <div>\r\n                    <button mat-button class=\"btn-green\" [disabled]=\"test\"\r\n                        (click)=\"toggleShow(1,qrResultString);\">Scan</button>\r\n                    <div *ngFor=\"let code of ListCodes\" class=\"qr-container\">\r\n                        <span *ngIf=\"code.nbr == 1\">{{ code.value}}</span>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"scan-field\">\r\n                <label class=\"input-label\">Code Coca Cola : </label>\r\n                <div>\r\n                    <button mat-button class=\"btn-green\" [disabled]=\"test\"\r\n                        (click)=\"toggleShow(2,qrResultString)\">Scan</button>\r\n                    <div *ngFor=\"let code of ListCodes\" class=\"qr-container\">\r\n                        <span *ngIf=\"code.nbr == 2\">{{code.value}}</span>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"scan-field\">\r\n                <label class=\"input-label\">Code FGD : </label>\r\n                <div>\r\n                    <button mat-button class=\"btn-green\" [disabled]=\"test\"\r\n                        (click)=\"toggleShow(3,qrResultString)\">Scan</button>\r\n                    <div *ngFor=\"let code of ListCodes\" class=\"qr-container\">\r\n                        <span *ngIf=\"code.nbr == 3\">{{ code.value}}</span>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <div id=\"divshow\" *ngIf=\"isShown && !scan\" class=\"Scan-container\">\r\n            <p>Scanning...</p>\r\n            <zxing-scanner Class=\"small-video\" (scanSuccess)=\"onCodeResult($event)\"></zxing-scanner>\r\n            <section class=\"results\" *ngIf=\"qrResultString\">\r\n                <div>\r\n                    <small>Result {{code.nbr}} : </small>\r\n                    <strong>{{ qrResultString }}</strong>\r\n                </div>\r\n                <button mat-button class=\"btn-green\" (click)=\"toggleShow(code.nbr,qrResultString)\">Done</button>\r\n            </section>\r\n        </div>\r\n        <button mat-button class=\"btn-yellow\" [disabled]=\"test\" (click)=\"CheckCodes()\">Check codes</button>\r\n\r\n\r\n    </div>\r\n\r\n    <div class=\"container\" id=\"nfc\" *ngIf=\"nfcShown\">\r\n\r\n        <div class=\"inputs-container\">\r\n            <div class=\"nfc\" *ngIf=\"loggedUser.role == 'Auditor'\">\r\n                <div class=\"scan-field\">\r\n                    <label class=\"input-label\">NFC card puce : </label>\r\n                    <button mat-button class=\"btn-green\" (click)=\"Read()\">Read</button>\r\n                    <div *ngIf=\"clientInfos.nfc.UUID!= null\" class=\"nfc-div\">\r\n                        <span>UUID:</span>\r\n                        <p>{{clientInfos.nfc.UUID}}</p>\r\n                        <span>Numero_Serie:</span>\r\n                        <p>{{clientInfos.nfc.Numero_Serie}}</p>\r\n                        <span>Type_card:</span>\r\n                        <p>{{clientInfos.nfc.Type_card}}</p>\r\n                        <span>Technologies:</span>\r\n                        <p>{{clientInfos.nfc.Technologies}}</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"scan-field\">\r\n                    <label class=\"input-label\">Qr Code : </label>\r\n                    <div>\r\n                        <button mat-button class=\"btn-green\"\r\n                            (click)=\"toggleShow(4,qrResultString);scan=!scan\">Scan</button>\r\n                        <div *ngFor=\"let code of ListCodes\" class=\"qr-container\">\r\n                            <span *ngIf=\"code.nbr == 4\">{{ code.value}}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div *ngIf=\"isShown && scan \" class=\"Scan-container\">\r\n                    <zxing-scanner Class=\"small-video\" (scanSuccess)=\"onCodeResult($event)\"></zxing-scanner>\r\n\r\n                    <section class=\"results\" *ngIf=\"qrResultString\">\r\n                        <div>\r\n                            <small>Result: </small>\r\n                            <strong>{{ qrResultString }}</strong>\r\n                        </div>\r\n                        <button mat-button class=\"btn-green\" (click)=\"toggleShow(code.nbr,qrResultString)\">Done</button>\r\n                    </section>\r\n                </div>\r\n                <div class=\"scan-field\">\r\n                    <label class=\"input-label\">NFC photo : </label>\r\n                    <button mat-button class=\"btn-green\" (click)=\"displayNFCam();\">\r\n                        <mat-icon>camera_alt</mat-icon>\r\n                    </button>\r\n                </div>\r\n                <div *ngIf=\"showNFCWebcam\" class=\"Scan-container\">\r\n                    <webcam [height]=\"200\" [width]=\"500\" [trigger]=\"triggerObservable\"\r\n                        (imageCapture)=\"handleNFCImage($event)\">\r\n                    </webcam>\r\n                    <div class=\"reas-nfc\">\r\n                        <button mat-button class=\"btn-green\" (click)=\"triggerSnapshot();\">Click Here</button>\r\n                        <button mat-button class=\"btn-green\" (click)=\"toggleNFCWebcam();\">Close Camera</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"webcamNFCImage\" class=\"Scan-container\">\r\n                    <div class=\"snapshot\">\r\n                        <img [height]=\"200\" [width]=\"200\" [src]=\"webcamNFCImage.imageAsDataUrl\"\r\n                            style=\"border-radius: 8px;\" />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"pdv\">\r\n                <div class=\"field\">\r\n                    <mat-form-field>\r\n                        <mat-select placeholder=\"PDV Type*\" panelClass=\"selectPanel2\" [(ngModel)]=\"TypeDPV\"\r\n                            [(value)]=\"selected\">\r\n                            <mat-option value=\"Detail\">Detail</mat-option>\r\n                            <mat-option value=\"Gros\">Gros</mat-option>\r\n                            <mat-option value=\"Demi Gros\">Demi Gros</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"field\" *ngIf=\"selected == 'Detail'\">\r\n                    <mat-form-field>\r\n                        <mat-select placeholder=\"PDV Detail Type*\" panelClass=\"selectPanel2\" [(ngModel)]=\"detailType\">\r\n                            <mat-option value=\"Alimentation\">Alimentation</mat-option>\r\n                            <mat-option value=\"Superette\">Superette</mat-option>\r\n                            <mat-option value=\"Aattar\">Aattar</mat-option>\r\n                            <mat-option value=\"Fruits sec\">Fruits sec</mat-option>\r\n                            <mat-option value=\"Boundif\">Boundif</mat-option>\r\n                            <mat-option value=\"Parfumerie\">Parfumerie</mat-option>\r\n                            <mat-option value=\"Kioske\">Kioske</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                    <mat-form-field>\r\n                        <mat-label>First & Last Name*</mat-label>\r\n                        <input matInput placeholder=\"Typing...\" [(ngModel)]=\"NomPrenom\" />\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                    <mat-form-field>\r\n                        <mat-label>Phone number*</mat-label>\r\n                        <input matInput placeholder=\"+212\" [(ngModel)]=\"PhoneNumber\" />\r\n                    </mat-form-field>\r\n\r\n                    <button mat-button class=\"btn-green\" [disabled]=\"disbale_sms\"\r\n                        (click)=\"Verify('code'); showVerifCodeInput= true\">Verify</button>\r\n                    {{display}}\r\n                </div>\r\n\r\n                <div class=\"field\" *ngIf=\"showVerifCodeInput\">\r\n                    <mat-form-field>\r\n                        <input matInput placeholder=\"code SMS\" name=\"codeSMS\" [(ngModel)]=\"codeSMS\" />\r\n                    </mat-form-field>\r\n                    <button (click)=\"VerifySMS()\">OK</button>\r\n                    {{status}}\r\n                </div>\r\n                <div class=\"field\">\r\n                    <mat-label class=\"input-label\">PV photo : </mat-label>\r\n                    <button mat-button class=\"btn-green\" (click)=\"displayPDVcam()\">\r\n                        <mat-icon>camera_alt</mat-icon>\r\n                    </button>\r\n                </div>\r\n\r\n                <div *ngIf=\"showPDVWebcam\" class=\"Scan-container\">\r\n                    <webcam [height]=\"200\" [width]=\"500\" [trigger]=\"triggerObservable\"\r\n                        (imageCapture)=\"handlePDVImage($event)\">\r\n                    </webcam>\r\n                    <div class=\"reas-nfc\">\r\n                        <button mat-button class=\"btn-green\" (click)=\"triggerSnapshot()\">Click Here</button>\r\n                        <button mat-button class=\"btn-green\" (click)=\"togglePDVWebcam()\">Close Camera</button>\r\n                    </div>\r\n                </div>\r\n                <!--          <button class=\"actionBtn\" (click)=\"triggerSnapshot();\">-->\r\n                <!--            Click Here and take the Shot</button>-->\r\n                <div *ngIf=\"webcamPDVImage\" class=\"Scan-container\">\r\n\r\n                    <div class=\"snapshot\">\r\n                        <img [height]=\"200\" [width]=\"200\" [src]=\"webcamPDVImage.imageAsDataUrl\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <button mat-button class=\"btn-yellow\" (click)=\"Send()\">Send</button>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ClientsService } from 'src/app/clients.service';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ClientInfoComponent } from 'src/app/client-info/client-info.component';\r\nimport { AlertDialogComponent } from 'src/app/alert-dialog/alert-dialog.component';\r\nimport { Router } from '@angular/router';\r\nimport { AdminService } from '../admin.service';\r\n@Component({\r\n  selector: 'app-add-user',\r\n  templateUrl: './add-user.component.html',\r\n  styleUrls: ['./add-user.component.css']\r\n})\r\nexport class AddUserComponent implements OnInit {\r\n\r\n  constructor(private _setting: AdminService, \r\n    private _client: ClientsService,\r\n    private dialog:MatDialog,\r\n    private _router:Router) { }\r\n  Roles = []\r\n  Sectors = []\r\n  AllEmail=[]\r\n  AllSectors=[]\r\n  role;\r\n  FirstName = \"\";\r\n  phoneNumber;\r\n  CIN;\r\n  LastName = \"\";\r\n  Email = \"user@fgddistrib.com\"\r\n  UserID = '0000'\r\n  CountUser = 0\r\n  UserInfo = {};\r\n  Password = \"0000\";\r\n  SelectedSector=[];\r\n  SectorAffacted=[];\r\n  DisableSend=true;\r\n  //dialogRef: MatDialogRef<ClientInfoComponent>;\r\n  ngOnInit(): void {\r\n    /// get All Email from Database to prevenet Email duplication\r\n    this.CheckEmail()\r\n    /// get Roles available\r\n    this._setting.getSettings('param=role').subscribe(res => {\r\n      this.Roles = res.details.roles\r\n      console.log(res)\r\n    })\r\n\r\n    //// get Sectors \r\n    this._client.getAllSecteurs().subscribe(res => {\r\n      console.log(res)\r\n      res.forEach(element => {\r\n        var idSector = Number(String(element.geometry.properties.idSecteur).slice(-2, -1))\r\n        console.log(idSector)\r\n        var machine = (idSector == 0) ? \"Onion\" : \"CMG\"\r\n        console.log(machine)\r\n        var result = element.geometry.properties.idSecteur + \" - \" + machine + \" - \" + element.geometry.properties.name\r\n        console.log(result)\r\n        var obj={\r\n          id:element.geometry.properties.idSecteur,\r\n          detail:result\r\n        }\r\n        this.AllSectors.push(element.geometry.properties.idSecteur)\r\n        this.Sectors.push(obj)\r\n      });\r\n    })\r\n  }\r\n\r\n  RoleActive() {\r\n    if (this.role == \"Seller\")\r\n     { \r\n       return true;\r\n    }\r\n    else if (this.role == \"Supervisor\")\r\n      {return true;}\r\n    else if (this.role == \"Auditor\")\r\n      {return true;}\r\n    else\r\n     { \r\n      //this.SectorAffacted=this.AllSectors;\r\n       return false;\r\n      }\r\n  }\r\n  onChange() {\r\n    this.SetUserID()\r\n\r\n  }\r\n  //// Set User ID \r\n  SetUserID() {\r\n    this._setting.getSettings(\"user=CountUser&role=\" + this.role + \"\").subscribe(res => {\r\n      console.log(res)\r\n      this.CountUser = res + 1\r\n      this.UserID = this.role.slice(0, 2) + String(this.pad(Number(this.CountUser), 7))\r\n    })\r\n  }\r\n\r\n  pad(a, b) {\r\n    console.log(a)\r\n    console.log(b)\r\n    return (1e15 + a + '').slice(-b);\r\n  }\r\n\r\n  //////////\r\n  ///* Generate Email *///\r\n\r\n async  GenerateEmail() {\r\n    var i=0;\r\n    console.log(this.AllEmail)\r\n    var last = this.LastName.replace(\" \", '.')\r\n    var l1 = this.FirstName.toLowerCase().slice(0, 1)\r\n    var email = (l1 + \".\" + last.toLowerCase() + \"@fgddistrib.com\").replace(/\\s/g, '');\r\n    while(this.AllEmail.includes(email)){\r\n      i++;\r\n      email = (l1 + \".\" + last.toLowerCase()+String(i)+ \"@fgddistrib.com\").replace(/\\s/g, '');\r\n      console.log(email)\r\n    }\r\n    this.Email=email\r\n\r\n\r\n  }\r\n\r\n  //// get All Emails\r\n  async CheckEmail(){\r\n     this._setting.CheckEmail().subscribe(res=>{\r\n        res.forEach(element => {\r\n            this.AllEmail.push(element.email)\r\n        });\r\n     })\r\n     \r\n  }\r\n  \r\n  //** Generate password */\r\n  GeneratePassword() {\r\n    this.Password = (Math.random() + 1).toString(36).substring(2);\r\n    console.log(\"random\", this.Password);\r\n  }\r\n  /////\r\n  ///\r\n  SendUser() {\r\n   \r\n    if(this.role=='Seller' || this.role =='Auditor' || this.role =='Supervisor'){\r\n      this.SectorAffacted=this.SelectedSector\r\n    }else{\r\n      this.SectorAffacted=this.AllSectors\r\n    }\r\n    console.log(this.SectorAffacted)\r\n    this.UserInfo = {\r\n      userinfo: {\r\n        UserID: this.UserID,\r\n        name: this.FirstName + \" \" + this.LastName,\r\n        phone: this.phoneNumber,\r\n        CIN: this.CIN,\r\n        role: this.role,\r\n        email: this.Email,\r\n        password:this.Password,\r\n        status:\"active\"\r\n      },\r\n      Sectors: this.SectorAffacted\r\n    }\r\n    this._setting.CreateUser(this.UserInfo).subscribe(res=>{\r\n      this.openAlertDialog()\r\n    })\r\n  }\r\n   ///////********************* Open Dialog *********************////////\r\n\r\n   openAlertDialog() {\r\n    const dialogRef = this.dialog.open(AlertDialogComponent, {\r\n      data: {\r\n        message:\"Please Copy this credentials and send them to the User before Exit \\n \" +\"[Email:\"+this.Email +\"-\"+\"Password:\"+this.Password+\"]\",\r\n        buttonText: {\r\n          ok: 'Ok',\r\n        }\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(res=>{\r\n      this._router.navigate(['/users'])\r\n    })\r\n  }\r\n  ////////////////////////////////////////////////////////////////////\r\n}\r\n","<div class=\"adduser-container\">\r\n    <div class=\"holder\">\r\n        <div class=\"title-holder\">\r\n          <h1 class=\"title\">Add New User</h1>\r\n        </div>\r\n        <div class=\"add-form\">\r\n            <div class=\"field\">\r\n                <label>Id User :</label>\r\n                <button mat-button disabled class=\"matricule\">{{UserID}}</button>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label>First Name :</label>\r\n                <mat-form-field >\r\n                    <!-- <mat-label>Id User</mat-label> -->\r\n                    <input placeholder=\"Type the First name...\" matInput [(ngModel)]=\"FirstName\" />\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label>Last Name :</label>\r\n                <mat-form-field>\r\n                    <!-- <mat-label>Id User</mat-label> -->\r\n                    <input placeholder=\"Type the Last name...\" matInput [(ngModel)]=\"LastName\" />\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label>CIN :</label>\r\n                <mat-form-field>\r\n                    <!-- <mat-label>Id User</mat-label> -->\r\n                    <input placeholder=\"Type the CIN...\" matInput [(ngModel)]=\"CIN\" />\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label>Phone Number :</label>\r\n                <mat-form-field>\r\n                    <!-- <mat-label>Id User</mat-label> -->\r\n                    <input pattern=\"[0]{1}[0-9]{9}\" placeholder=\"Type the phone number...\" matInput [(ngModel)]=\"phoneNumber\" />\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label>Email :</label>\r\n                <mat-form-field>\r\n                    <!-- <mat-label>Id User</mat-label> -->\r\n                    <input matInput placeholder=\"Type the email\" type=\"email\" [(ngModel)]=\"Email\" disabled/>\r\n                </mat-form-field>\r\n                <button mat-button class=\"gen-btn\" (click)=\"GenerateEmail()\">Generate Email</button>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label>Password :</label>\r\n                <mat-form-field>\r\n                    <!-- <mat-label>Id User</mat-label> -->\r\n                    <input matInput placeholder=\"Generate the password...\" type=\"text\" value=\"{{Password}}\" disabled/>\r\n                </mat-form-field>\r\n                <button mat-button class=\"gen-btn\" (click)=\"GeneratePassword()\">Generate Password</button>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label>Role :</label>\r\n                <mat-form-field>\r\n                    <mat-select placeholder=\"select\" panelClass=\"selectPanel2\"   (selectionChange)=\"onChange()\" [(value)]=\"role\">\r\n                        \r\n                        <div *ngFor=\"let rol of Roles\">\r\n                            <mat-option value=\"{{rol}}\">{{rol}}</mat-option>\r\n                            </div>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"field\" *ngIf=\"RoleActive()\">\r\n                <label>Sector :</label>\r\n                <mat-form-field >\r\n                    <mat-select placeholder=\"select\" multiple  panelClass=\"selectPanel2\" value=\"SelectedSector\" [(ngModel)]=\"SelectedSector\">\r\n                        <div *ngFor=\"let sector of Sectors\">\r\n                            <mat-option value=\"{{sector.id}}\">{{sector.detail}}</mat-option>\r\n                            </div>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"btns\">\r\n                <button class=\"btn-red\" mat-button routerLink=\"/users\" >Cancel</button>\r\n                <button class=\"btn-green\" mat-button (click)=\"SendUser()\" >Add</button>\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n    \r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n\r\n  uri = \"http://localhost:3000\";\r\n  private getUsersURL = this.uri+\"/api1/getAllUsers\"\r\n  private deleteUserURL = this.uri+\"/api1/deleteUser\"\r\n  private restoreUserURL = this.uri+\"/api1/restoreUser\"\r\n  private getSectorsByUserURL = this.uri+\"/api1/getSectorsByUser\"\r\n  private _user=this.uri+\"/api1/register\"\r\n  private _user_email=this.uri+\"/api1/GeEmail\"\r\n  private _setting =this.uri + \"/api1/settings\";\r\n\r\n  private _deleteClient =this.uri+\"/api1/ValidateDeleteClient\"\r\n\r\n  currentUser;\r\n\r\n\r\n  constructor(\r\n    private http: HttpClient, \r\n    private _router: Router,\r\n  ) { }\r\n\r\n  getAllUsers() {\r\n    return this.http.get<any>(this.getUsersURL)\r\n  }\r\n\r\n  deleteUser(user){\r\n    return this.http.post<any>(this.deleteUserURL,user)\r\n  }\r\n\r\n  restoreUser(user){\r\n    return this.http.post<any>(this.restoreUserURL,user)\r\n  }\r\n\r\n  setUserInfo(user){\r\n    this.currentUser = user\r\n  }\r\n  getUserInfo() {\r\n    \r\n    return this.currentUser;\r\n  }\r\n\r\n  getSectorsByUser(user){\r\n    return this.http.get<any>(this.getSectorsByUserURL+\"?userId=\"+user._id)\r\n  }\r\n  /////////////***** Add User (Hafsa's code) ***////////////////\r\n  CreateUser(user){\r\n    return this.http.post<any>(this._user,user)\r\n  }\r\n  CheckEmail(){\r\n      return this.http.get<any>(this._user_email)\r\n  }\r\n  getSettings(params) {\r\n    console.log(params)\r\n    return this.http.get<any>(this._setting+\"?\"+params);\r\n  }\r\n\r\n  ValidateDeleteClient(request){\r\n    \r\n    console.log(request)\r\n    return this.http.post<any>(this._deleteClient,{request:request});\r\n  }\r\n  //////\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { AlertDialogComponent } from '../../alert-dialog/alert-dialog.component';\r\nimport { ClientInfoComponent } from '../../client-info/client-info.component';\r\nimport { ClientsService } from '../../clients.service';\r\nimport { Router } from '@angular/router';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport { AdminService } from '../admin.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-delete-requests',\r\n  templateUrl: './delete-requests.component.html',\r\n  styleUrls: ['./delete-requests.component.css']\r\n})\r\nexport class DeleteRequestsComponent implements OnInit {\r\n\r\n\r\n // @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n // @ViewChild(MatSort) sort: MatSort;\r\n  dialogRef: MatDialogRef<ClientInfoComponent>;\r\n\r\n  deleteRequests;\r\n\r\n\r\n  dataSource;\r\n  columnsToDisplay = ['Id', 'Sector', 'PDV Type', 'Reason', 'Status','Location','Request_Date', 'Actions'];\r\n  dataSubject = new BehaviorSubject<Element[]>([]);\r\n\r\n  constructor(\r\n    private domSanitizer: DomSanitizer,\r\n    private dialog: MatDialog,\r\n    private clientService: ClientsService,\r\n    private _admin: AdminService,\r\n    private _router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getDeleteRequests();\r\n  }\r\n\r\n  validateDelete(request,status) {\r\n    console.log(request)\r\n    // Write the code to change status\r\n    \r\n    request.status=status\r\n    this._admin.ValidateDeleteClient(request).subscribe(res => {\r\n      console.log(res)\r\n      var message = \"This PDV has been deleted successfully!\"\r\n      this.openAlertDialog(message)\r\n    })\r\n  }\r\n\r\n  cancelDelete() {\r\n    // Write the code to change status\r\n    var message = \"This PDV has been refused successfully!\"\r\n    this.openAlertDialog(message)\r\n  }\r\n\r\n\r\n  openAlertDialog(message) {\r\n    const dialogRef = this.dialog.open(AlertDialogComponent, {\r\n      data: {\r\n        message: message,\r\n        buttonText: {\r\n          ok: 'Ok',\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  viewPDVDetails(content) {\r\n    // console.log(content)\r\n    this.dialogRef = this.dialog.open(ClientInfoComponent, { data: content });\r\n  }\r\n\r\n  getDeleteRequests() {\r\n    this.clientService.getDeleteRequests().subscribe(res => {\r\n      console.log(\"---\")\r\n      console.log(res)\r\n      this.deleteRequests = res\r\n      this.dataSource = new MatTableDataSource(this.deleteRequests);\r\n      this.dataSource.data = this.deleteRequests;\r\n     // this.dataSource.sort = this.sort;\r\n      //this.dataSource.sort = this.sort;\r\n      this.dataSource.paginator = this.paginator;\r\n    })\r\n  }\r\n\r\n  navigateToMap(lat, long) {\r\n    this._router.navigate(['/map/' + lat + \"/\" + long])\r\n    this.dialogRef.close();\r\n  }\r\n \r\n\r\n}\r\n","<div class=\"requests-container\">\r\n    <div class=\"table-holder\">\r\n\r\n        <div class=\"title-holder\">\r\n          <h1 class=\"list-title\">Delete Requests</h1>\r\n        </div>\r\n      \r\n        <table mat-table matSort [dataSource]=\"dataSource\">\r\n          <ng-container matColumnDef=\"Id\">\r\n            <th class=\"header id-column\" mat-header-cell *matHeaderCellDef>\r\n              <span>Id</span>\r\n              <!-- <button mat-button class=\"float-right btn-icon\">\r\n                <mat-icon class=\"sort-icon\"></mat-icon>\r\n              </button> -->\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let request\">{{request._id}}</td>\r\n          </ng-container>\r\n          \r\n          <ng-container matColumnDef=\"Sector\">\r\n            <th class=\"header sector-column\" mat-header-cell *matHeaderCellDef>\r\n              <span>Sector</span>\r\n              <!-- <button mat-button class=\"float-right btn-icon\">\r\n                <mat-icon class=\"sort-icon\" ></mat-icon>\r\n              </button> -->\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let request\">{{request.Code_Secteur_OS}}</td>\r\n          </ng-container>\r\n      \r\n          <ng-container matColumnDef=\"PDV Type\">\r\n            <th class=\"header type-column\" mat-header-cell *matHeaderCellDef>\r\n              <span>PDV Type</span>\r\n              <!-- <button mat-button  class=\"float-right btn-icon\">\r\n                <mat-icon class=\"sort-icon\" ></mat-icon>\r\n              </button> -->\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let request\">{{request.PDV[0].geometry.properties.TypeDPV}}</td>\r\n          </ng-container>\r\n          \r\n          <ng-container matColumnDef=\"Reason\">\r\n            <th class=\"header reason-column\" mat-header-cell *matHeaderCellDef>\r\n              <span>Reason</span>\r\n              <!-- <button mat-button  class=\"float-right btn-icon\">\r\n                <mat-icon class=\"sort-icon\" ></mat-icon>\r\n              </button> -->\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let request\">{{request.Raison}}</td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"Status\">\r\n            <th class=\"header status-column\" mat-header-cell *matHeaderCellDef>\r\n              <span>Status</span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let request\">{{request.status}}</td>\r\n          </ng-container>\r\n            \r\n          <ng-container matColumnDef=\"Location\">\r\n            <th class=\"header location-column\" mat-header-cell *matHeaderCellDef>\r\n              <span>Location</span>\r\n              <!-- <button mat-button  class=\"float-right btn-icon\">\r\n                <mat-icon class=\"sort-icon\"></mat-icon>\r\n              </button> -->\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let request\">\r\n                <button mat-icon-button (click)=\"navigateToMap(request.PDV[0].geometry.geometry.coordinates[1],request.PDV[0].geometry.geometry.coordinates[0])\"><mat-icon class=\"location-icon\">location_on</mat-icon></button>\r\n            </td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"Request_Date\">\r\n            <th class=\"header Request_Date-column\" mat-header-cell *matHeaderCellDef>\r\n              <span>Request Date</span>\r\n              <!-- <button mat-button  class=\"float-right btn-icon\">\r\n                <mat-icon class=\"sort-icon\"></mat-icon>\r\n              </button> -->\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let request\">\r\n              {{request.created_at | date:'dd/MM/yyyy' }}\r\n            </td>\r\n          </ng-container>\r\n      \r\n          <ng-container matColumnDef=\"Actions\">\r\n            <th class=\"header actions-column\" mat-header-cell *matHeaderCellDef>\r\n              <span>Actions</span>\r\n              <!-- <button mat-button  class=\"float-right btn-icon\">\r\n                <mat-icon class=\"sort-icon\" ></mat-icon>\r\n              </button> -->\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let request\">\r\n                <button mat-icon-button (click)=\"validateDelete(request,'Deleted')\" *ngIf=\"!(request.status!='Waiting')\" ><mat-icon class=\"valid-icon\">check_box</mat-icon></button>\r\n                <button mat-icon-button (click)=\"validateDelete(request,'Canceled')\" *ngIf=\"!(request.status!='Waiting')\"   ><mat-icon class=\"refus-icon\">indeterminate_check_box</mat-icon></button>\r\n                <button mat-icon-button (click)=\"viewPDVDetails(request)\"><mat-icon class=\"detail-icon\">remove_red_eye</mat-icon></button>\r\n            </td>\r\n          </ng-container>\r\n          \r\n      \r\n          <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n          <tr mat-row *matRowDef=\"let request; columns: columnsToDisplay\"></tr>\r\n      \r\n        </table>\r\n        <mat-paginator [pageSizeOptions]=\"[ 5, 10]\" showFirstLastButtons></mat-paginator>\r\n      \r\n    </div>\r\n</div>\r\n","import { Component, OnInit,ElementRef} from '@angular/core';\r\nimport { ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-planning',\r\n  templateUrl: './planning.component.html',\r\n  styleUrls: ['./planning.component.css']\r\n})\r\n\r\nexport class PlanningComponent implements OnInit {\r\n  @ViewChild(\"video\")\r\n  video: ElementRef;\r\n  \r\n \r\n @ViewChild(\"canvas\")\r\n  canvas: ElementRef;\r\n  constructor() { }\r\n\r\n   chunks = [];\r\n   mediaRecorder;\r\n\r\n  ngOnInit() {\r\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n      navigator.mediaDevices.getUserMedia({ video: true }).then(stream => {\r\n          this.video.nativeElement.srcObject = stream;\r\n          this.video.nativeElement.play();\r\n        console.log(\"wtf\")\r\n          this.mediaRecorder = new MediaRecorder(stream);\r\n          this.mediaRecorder.start(); \r\n          this.mediaRecorder.ondataavailable = (e)=> {\r\n            console.log(\"*****************\")\r\n          this.chunks.push(e.data);\r\n        };\r\n        \r\n         \r\n          //var videoStream = canvas.captureStream(30); // the parameter is the desired framerate, see the MDN doc for more info\r\n      });\r\n    }\r\n  }\r\n  Capture() {\r\n    //event.preventDefault();\r\n   \r\n    console.log(\"hhh\")\r\n    var context = this.canvas.nativeElement.getContext(\"2d\").drawImage(this.video.nativeElement, 0, 0, 1024, 768);\r\n    var picture: any = this.canvas.nativeElement.toDataURL(\"image/png\");\r\n    //var img=this.canvas.nativeElement.toDataURL(\"video/png\")\r\n    console.log(this.chunks)\r\n    //console.log(picture)\r\n  } \r\n}\r\n","<div id=\"inner_video\" >\r\n    <video #video id=\"video\" autoplay></video>\r\n</div>\r\n\r\n<div>\r\n\r\n    <button id='request'>\r\n      Request Camera\r\n    </button>\r\n    <button id='start'>\r\n      Start Recording\r\n    </button>\r\n    <button id='stop'>\r\n      Stop Recording\r\n    </button>\r\n    <ul id='ul'>\r\n      Downloads List:\r\n    </ul>\r\n  \r\n  </div>\r\n<canvas #canvas id=\"canvas\" width=\"1024\" height=\"768\">canvas</canvas>    \r\n<button (click)=\"Capture()\">Capture</button>","import { Component, OnInit } from '@angular/core';\r\nimport { AdminService } from '../admin.service';\r\nimport { SettingsService } from 'src/app/settings/settings.service';\r\nimport { ClientsService } from 'src/app/clients.service';\r\nimport { Router } from '@angular/router';\r\nimport { AlertDialogComponent } from 'src/app/alert-dialog/alert-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { UsersComponent } from '../users/users.component';\r\n\r\n@Component({\r\n  selector: 'app-update-user',\r\n  templateUrl: './update-user.component.html',\r\n  styleUrls: ['./update-user.component.css']\r\n})\r\nexport class UpdateUserComponent implements OnInit {\r\n\r\n  userInfo=this._router.getCurrentNavigation().extras.state.dataUser\r\n  UserInfoUp\r\n  FirstName;\r\n  LastName;\r\n  Roles;\r\n  role=this.userInfo.role\r\n  hidpass=true\r\n  SelectedSector=[];\r\n  SectorsAttached=[];\r\n  AllSectors=[];\r\n  Sectors = []\r\n  UserID = this.userInfo.UserID\r\n  UserIDAfficher\r\n  CountUser = 0\r\n  selected=false\r\n  generated=false\r\n  setUserID\r\n\r\n  constructor(\r\n    private _setting: SettingsService,\r\n    private _client: ClientsService,\r\n    private _router: Router,\r\n    private dialog:MatDialog\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    //this.adminService.getAllUsers().subscribe(res=>{console.log(\"sectors\",res)})\r\n   \r\n    //this.userInfo = this.adminService.getUserInfo() \r\n    console.log(\"userInfo\")\r\n    console.log(this.userInfo)\r\n    this.FirstName=this.userInfo.name.split(\" \")[1]\r\n    this.LastName=this.userInfo.name.split(\" \")[0]\r\n    // const UserIDAfficher= this.userInfo.UserID\r\n    // const RoleAfficher=this.userInfo.role\r\n     console.log(\"UserIDAfficher\",this.UserID)\r\n    // console.log(\"RoleAfficher\",RoleAfficher)\r\n    console.log(\"this.userInfo.role\",this.role)\r\n\r\n    // if(RoleAfficher!=this.userInfo.role){\r\n    //   this.userInfo.UserID=this.userInfo.UserID\r\n\r\n    // }if(RoleAfficher === this.userInfo.role){\r\n    //   this.userInfo.UserID = UserIDAfficher\r\n\r\n    // }\r\n   \r\n    console.log(\"userInfoSectors\")\r\n\r\n    this.userInfo.sectors.forEach(el => {this.SelectedSector.push(\"\"+el.nameSecteur)});\r\n    this.SectorsAttached=this.SelectedSector\r\n    this._setting.getSettings('param=role').subscribe(res => {\r\n      this.Roles = res.details.roles\r\n      console.log(res)\r\n    })\r\n    \r\n    this._client.getAllSecteurs().subscribe(res => {\r\n      console.log(res)\r\n      res.forEach(element => {\r\n        var idSector = Number(String(element.geometry.properties.idSecteur).slice(-2, -1))\r\n        console.log(idSector)\r\n        var machine = (idSector == 0) ? \"Onion\" : \"CMG\"\r\n        console.log(machine)\r\n        var result = element.geometry.properties.idSecteur + \" - \" + machine + \" - \" + element.geometry.properties.name\r\n        console.log(\"selected\",result)\r\n        var obj={\r\n          id:element.geometry.properties.idSecteur,\r\n          detail:result\r\n        }\r\n        this.AllSectors.push(element.geometry.properties.idSecteur)\r\n        this.Sectors.push(obj)\r\n        console.log(\"sectors\",this.Sectors)\r\n      });\r\n    })\r\n  }\r\n\r\n\r\n  GenerateEmail()\r\n  {\r\n    var i=0;\r\n    var last = this.LastName.replace(\" \", '.')\r\n    var l1 = this.FirstName.toLowerCase().slice(0, 1)\r\n    var email = (l1 + \".\" + last.toLowerCase() + \"@fgddistrib.com\").replace(/\\s/g, '');\r\n    this.userInfo.email=email\r\n  }\r\n\r\n  GeneratePassword(){\r\n    this.hidpass=false\r\n    this.generated=true;\r\n    this.userInfo.password = (Math.random() + 1).toString(36).substring(2);\r\n\r\n  }\r\n  RoleActive() {\r\n    if (this.userInfo.role == \"Seller\")\r\n     { \r\n       return true;\r\n    }\r\n    else if (this.userInfo.role == \"Supervisor\")\r\n      {return true;}\r\n    else if (this.userInfo.role == \"Auditor\")\r\n      {return true;}\r\n    else\r\n     { \r\n      //this.SectorAffacted=this.AllSectors;\r\n       return false;\r\n      }\r\n  }\r\n\r\n  onChange() {\r\n\r\n    if(this.role!=this.userInfo.role){\r\n      this.SetUserID()\r\n    }if(this.role === this.userInfo.role){\r\n      this.userInfo.UserID = this.UserID\r\n    }\r\n\r\n  }\r\n  //// Set User ID \r\n  SetUserID() {\r\n    this._setting.getSettings(\"user=CountUser&role=\" + this.userInfo.role + \"\").subscribe(res => {\r\n      console.log(res)\r\n      this.CountUser = res + 1\r\n      // const RoleAfficher=this.userInfo.role\r\n        this.userInfo.UserID = this.userInfo.role.slice(0, 2) + String(this.pad(Number(this.CountUser), 7))\r\n  \r\n    })\r\n  }\r\n\r\n  pad(a, b) {\r\n    console.log(a)\r\n    console.log(b)\r\n    return (1e15 + a + '').slice(-b);\r\n  }\r\n  UpdateUser(){\r\n    console.log(\"sfjldkfjdkfjdlsk\") \r\n    var UserInfoUp={}\r\n    UserInfoUp[\"_id\"]=this.userInfo._id\r\n    UserInfoUp[\"UserID\"]=this.userInfo.UserID\r\n    UserInfoUp[\"name\"]=this.LastName+\" \"+this.FirstName\r\n    UserInfoUp[\"CIN\"]=this.userInfo.CIN\r\n    UserInfoUp[\"role\"]=this.userInfo.role\r\n    UserInfoUp[\"password\"]=this.userInfo.password\r\n    UserInfoUp[\"email\"]=this.userInfo.email\r\n    UserInfoUp[\"phone\"]=this.userInfo.phone\r\n    UserInfoUp[\"status\"]=this.userInfo.status\r\n    UserInfoUp[\"sectors\"]=this.SelectedSector\r\n    UserInfoUp[\"generated\"]=this.generated\r\n    console.log(\"====================================\")\r\n\r\n    \r\n    const SectorDeleted = this.SectorsAttached.filter(value => !this.SelectedSector.includes(value));\r\n    UserInfoUp[\"SectorDeleted\"]=SectorDeleted\r\n\r\n    this._setting.UpdateUser(UserInfoUp).subscribe(res=>console.log(res))\r\n    if(this.generated){\r\n          this.openAlertDialog()\r\n    }else{\r\n      this._router.navigate(['/users'])\r\n    }\r\n\r\n  }\r\n  \r\n\r\n  openAlertDialog() {\r\n    const dialogRef = this.dialog.open(AlertDialogComponent, {\r\n      data: {\r\n        message:\"Please Copy this credentials before Exit \\n \" +\"[Email:\"+this.userInfo.email +\"-\"+\"Password:\"+this.userInfo.password+\"]\",\r\n        buttonText: {\r\n          ok: 'Done',\r\n        }\r\n      }\r\n\r\n    }).afterClosed().subscribe(result => {\r\n      this._router.navigate(['/users'])\r\n    });\r\n    ;\r\n\r\n\r\n}\r\n}\r\n","\r\n<div class=\"adduser-container\">\r\n    <div class=\"holder\">\r\n        <div class=\"title-holder\">\r\n          <h1 class=\"title\">Update User</h1>\r\n        </div>\r\n        <div class=\"add-form\">\r\n            <div class=\"field\">\r\n                <label>Id User :</label>\r\n                <button mat-button disabled class=\"matricule\">{{userInfo.UserID}}</button>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label>First Name :</label>\r\n                <mat-form-field >\r\n                    <!-- <mat-label>Id User</mat-label> -->\r\n                    <input placeholder=\"Type the First name...\" matInput [(ngModel)]=\"FirstName\" />\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label>Last Name :</label>\r\n                <mat-form-field>\r\n                    <!-- <mat-label>Id User</mat-label> -->\r\n                    <input placeholder=\"Type the Last name...\" matInput [(ngModel)]=\"LastName\" />\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label>CIN :</label>\r\n                <mat-form-field>\r\n                    <!-- <mat-label>Id User</mat-label> -->\r\n                    <input placeholder=\"Type the CIN...\" matInput [(ngModel)]=\"userInfo.CIN\" />\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label>Phone Number :</label>\r\n                <mat-form-field>\r\n                    <!-- <mat-label>Id User</mat-label> -->\r\n                    <input placeholder=\"Type the phone number...\" matInput [(ngModel)]=\"userInfo.phone\" />\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label>Email :</label>\r\n                <mat-form-field>\r\n                     <mat-label>Id User</mat-label>\r\n                    <input matInput placeholder=\"Type the email\" type=\"email\" [(ngModel)]=\"userInfo.email\" disabled/>\r\n                </mat-form-field>\r\n                <!-- <button mat-button class=\"gen-btn\" (click)=\"GenerateEmail()\">Generate Email</button> -->\r\n            </div>\r\n            <div class=\"field\">\r\n                <label>Password :</label>\r\n               \r\n                    <mat-form-field >\r\n                        <mat-label>Id User</mat-label> \r\n                        <ng-template  [ngIf]=\"hidpass\" [ngIfElse]=\"showPass\"> \r\n                        <input matInput placeholder=\"Generate the password...\" type=\"password\" value=\"{{userInfo.password}}\" disabled/>\r\n                        </ng-template>\r\n\r\n                        <ng-template #showPass>\r\n                                <input matInput placeholder=\"Generate the password...\" type=\"type\" value=\"{{userInfo.password}}\" disabled/>\r\n                        </ng-template>\r\n                </mat-form-field>                \r\n                \r\n               \r\n                <button mat-button class=\"gen-btn\" (click)=\"GeneratePassword()\">Generate Password</button>\r\n            </div>  \r\n            <div class=\"field\"> \r\n                 <label>Role :</label>\r\n                <mat-form-field>\r\n                    <mat-select  panelClass=\"selectPanel2\"   (selectionChange)=\"onChange()\" [(value)]=\"userInfo.role\">\r\n                        \r\n                        <div *ngFor=\"let rol of Roles\" >\r\n                            <mat-option  value=\"{{rol}}\">{{rol}}</mat-option>\r\n                            </div>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"field\" *ngIf=\"RoleActive()\">\r\n                <label>Sector :</label>\r\n                <mat-form-field >\r\n                    <mat-select placeholder=\"select\" multiple  panelClass=\"selectPanel2\" value=\"SelectedSector\" [(ngModel)]=\"SelectedSector\">\r\n                        <div *ngFor=\"let sector of Sectors\">\r\n                            <mat-option value=\"{{sector.id}}\">{{sector.detail}}</mat-option>\r\n                            </div>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"btns\">\r\n                <button class=\"btn-red\" mat-button routerLink=\"/users\">Cancel</button>\r\n                <button class=\"btn-green\" mat-button (click)=\"UpdateUser()\">Update</button>\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n    \r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { Inject } from '@angular/core';\r\nimport { AdminService } from '../admin.service';\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmationDialogComponent } from 'src/app/confirmation-dialog/confirmation-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-user-info',\r\n  templateUrl: './user-info.component.html',\r\n  styleUrls: ['./user-info.component.css']\r\n})\r\nexport class UserInfoComponent implements OnInit {\r\n\r\n  sectors\r\n  dialogRef: MatDialogRef<ConfirmationDialogComponent>;\r\n  dialogRef1: MatDialogRef<UserInfoComponent>\r\n  \r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private adminService: AdminService,\r\n    public dialog: MatDialog,\r\n    private _router: Router,\r\n  ) { \r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSectorsByUser()\r\n  }\r\n\r\n  getSectorsByUser(){\r\n    console.log(this.data._id)\r\n     this.adminService.getSectorsByUser(this.data).subscribe(res=>{\r\n        console.log(res)\r\n        this.sectors = res;\r\n    })\r\n  }\r\n\r\n  deleteUser(user){\r\n    this.dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      disableClose: false\r\n    });\r\n    this.dialogRef.componentInstance.confirmMessage = \"Are you sure you want to delete this user?\"\r\n\r\n    this.dialogRef.afterClosed().subscribe(result => {\r\n      if(result) {\r\n        // do confirmation actions (delete)\r\n        // console.log(\"clicked yes\")\r\n        this.adminService.deleteUser(user).subscribe(res=>{\r\n          \r\n        })\r\n        this._router.navigate(['/users']).then(()=>{\r\n          window.location.reload();\r\n        })\r\n        \r\n      }\r\n      this.dialogRef = null;\r\n    });\r\n    \r\n  }\r\n\r\n  restoreUser(user){\r\n\r\n    this.dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      disableClose: false\r\n    });\r\n    this.dialogRef.componentInstance.confirmMessage = \"Are you sure you want to bring back this user?\"\r\n\r\n    this.dialogRef.afterClosed().subscribe(result => {\r\n      if(result) {\r\n        // do confirmation actions \r\n        // console.log(\"clicked yes\")\r\n        this.adminService.restoreUser(user).subscribe(res=>{\r\n          \r\n        })\r\n        this._router.navigate(['/users']).then(()=>{\r\n          window.location.reload();\r\n        })\r\n        \r\n      }\r\n      this.dialogRef = null;\r\n    });\r\n      \r\n    \r\n  }\r\n\r\n  updateUser(user){\r\n    this.adminService.setUserInfo(user)\r\n    this._router.navigate(['/updateUser'])\r\n\r\n  }\r\n\r\n}\r\n","<mat-dialog-content>\r\n    <div class=\"dialog-container\">\r\n        <h1 class=\"title\">User Info</h1>\r\n        <span *ngIf=\"data.status=='Active'\" style=\"background-color: #27AE61;\">{{data.status}}</span>\r\n        <span *ngIf=\"data.status=='out of work'\" style=\"background-color: #AE5827;\">{{data.status}}</span>\r\n        <div class=\"user-info\">\r\n            <div class=\"info-container\">\r\n                <div class=\"fields\">\r\n                    <div class=\"field\">\r\n                        <label>User Id</label>\r\n                        <div class=\"case\">\r\n                            <ng-container *ngIf=\"!data.UserID\">\r\n                               <p>not found</p> \r\n                            </ng-container>\r\n                            \r\n                            <p>{{data.UserID}}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <label>CIN</label>\r\n                        <div class=\"case\">\r\n                            <p>{{data.CIN}}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <label>Email</label>\r\n                        <div class=\"case\">\r\n                            <p>{{data.email}}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"fields\">\r\n                    <div class=\"field\">\r\n                        <label>Name</label>\r\n                        <div class=\"case\">\r\n                           <p>{{data.name}}</p> \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <label>Phone Number</label>\r\n                        <div class=\"case\">\r\n                           <p>{{data.phone}}</p> \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <label>Role</label>\r\n                        <div class=\"case\">\r\n                            <p>{{data.role}}</p>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div class=\"sectors-container\" *ngIf=\"data.role != 'Admin'\">\r\n                <div class=\"field\">\r\n                    <label>Sectors</label>\r\n                    <div class=\"sectors\" >\r\n                        <ng-container *ngFor=\"let sector of sectors\">\r\n                            <div class=\"case\">\r\n                                <p>{{sector.nameSecteur}}</p>\r\n                            </div>\r\n                        </ng-container>     \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- <p> {{data.NomPrenom}}</p> -->\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"action-btns\" align=\"center\">\r\n    <button mat-raised-button color=\"primary\" class=\"btn-green\" (click)=\"updateUser(data)\" mat-dialog-close>Update User</button>\r\n    <button *ngIf=\"data.status=='Active'\" mat-raised-button color=\"primary\" class=\"btn-red\" (click)=\"deleteUser(data)\" mat-dialog-close>Delete User</button>\r\n    <button *ngIf=\"data.status=='out of work'\" mat-raised-button color=\"primary\" class=\"btn-orange\" (click)=\"restoreUser(data)\" mat-dialog-close>Restore this User</button>\r\n</mat-dialog-actions>","import { Component, OnInit , ChangeDetectorRef,ViewChild} from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport { AdminService } from '../admin.service';\r\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog'\r\nimport { ConfirmationDialogComponent } from 'src/app/confirmation-dialog/confirmation-dialog.component';\r\nimport { Router } from '@angular/router';\r\nimport { UserInfoComponent } from '../user-info/user-info.component';\r\nimport * as _ from 'lodash';\r\nimport { SettingsService } from 'src/app/settings/settings.service';\r\nimport { ClientsService } from 'src/app/clients.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  selectedStatus\r\n  selectedRole\r\n  selectedSector\r\n\r\n  users;\r\n  roles=[]\r\n  Sectors=[]\r\n  AllSectors=[]\r\n  dataSource;\r\n  columnsToDisplay = ['Id', 'Name','CIN','Phone Number', 'Email', 'Role','Status', 'Actions'];\r\n  dataSubject = new BehaviorSubject<Element[]>([]);\r\n  dialogRef: MatDialogRef<ConfirmationDialogComponent>;\r\n  dialogRef2: MatDialogRef<UserInfoComponent>;\r\n\r\n  constructor(\r\n    private adminService: AdminService,\r\n    public dialog: MatDialog,\r\n    private _router: Router,\r\n    private changeDetectorRefs: ChangeDetectorRef,\r\n    private _setting: SettingsService,\r\n    private _admin: AdminService,\r\n    private _client: ClientsService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUsers()\r\n    this.getRoles()\r\n    this.getAllSectors()\r\n  console.log(\"###\"+this.selectedStatus)\r\n  }\r\n\r\n  getAllSectors(){\r\n    this._client.getAllSecteurs().subscribe(res => {\r\n      console.log(res)\r\n      res.forEach(element => {\r\n        var idSector = Number(String(element.geometry.properties.idSecteur).slice(-2, -1))\r\n        //console.log(idSector)\r\n        var machine = (idSector == 0) ? \"Onion\" : \"CMG\"\r\n        //console.log(machine)\r\n        var result = element.geometry.properties.idSecteur + \" - \" + machine + \" - \" + element.geometry.properties.name\r\n        //console.log(result)\r\n        var obj={\r\n          id:element.geometry.properties.idSecteur,\r\n          detail:result\r\n        }\r\n        this.AllSectors.push(element.geometry.properties.idSecteur)\r\n        this.Sectors.push(obj)\r\n      });\r\n    })\r\n  }\r\n\r\n  getRoles(){\r\n    // get roles list\r\n    this._setting.getSettings('param=role').subscribe(res => {\r\n      this.roles = res.details.roles\r\n      console.log(res)\r\n    })\r\n  }\r\n\r\n\r\n  getUsers(){\r\n    this.adminService.getAllUsers().subscribe(res=>{\r\n      console.log(\"---\")\r\n      console.log(res)\r\n      this.users = res\r\n      this.dataSource = new MatTableDataSource(this.users);\r\n      this.dataSource.data = this.users.reverse();\r\n      this.dataSource.paginator = this.paginator;\r\n    })\r\n  }\r\n\r\n  deleteUser(user){\r\n    this.dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      disableClose: false\r\n    });\r\n    this.dialogRef.componentInstance.confirmMessage = \"Are you sure you want to delete this user?\"\r\n\r\n    this.dialogRef.afterClosed().subscribe(result => {\r\n      if(result) {\r\n        // do confirmation actions (delete)\r\n        // console.log(\"clicked yes\")\r\n        this.adminService.deleteUser(user).subscribe(res=>{\r\n          \r\n        })\r\n        this.getUsers()\r\n        this.dataSource = new MatTableDataSource(this.users);\r\n      }\r\n      this.dialogRef = null;\r\n    });\r\n    \r\n  }\r\n\r\n  updateUser(user){\r\n\r\n    this._router.navigateByUrl('/updateUser', { state: { dataUser:user,userid:user.UserID,userrole:user.role } });\r\n\r\n  }\r\n  \r\n  restoreUser(user){\r\n\r\n    this.dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      disableClose: false\r\n    });\r\n    this.dialogRef.componentInstance.confirmMessage = \"Are you sure you want to bring back this user?\"\r\n\r\n    this.dialogRef.afterClosed().subscribe(result => {\r\n      if(result) {\r\n        // do confirmation actions \r\n        // console.log(\"clicked yes\")\r\n        this.adminService.restoreUser(user).subscribe(res=>{\r\n          \r\n        })\r\n        this.getUsers()\r\n        this.dataSource = new MatTableDataSource(this.users);\r\n      }\r\n      this.dialogRef = null;\r\n    });\r\n      \r\n    \r\n  }\r\n\r\n  viewUserDetails(user){\r\n    this.dialogRef2 = this.dialog.open(UserInfoComponent, { data: user });\r\n  }\r\n\r\n  // search input\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    console.log(this.dataSource.filter);\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n// filterage based on status select\r\n  onChangeStatus($event){\r\n    console.log($event.value)\r\n    console.log(this.selectedRole)\r\n    console.log(this.selectedSector)\r\n    if($event.value == 'all'){\r\n      console.log(\"status = all\")\r\n      // when we select all for status \r\n      let filtered=[]\r\n      _.filter(this.users,(item) =>{\r\n\r\n        \r\n        \r\n        if(this.selectedRole=='all' && !this.selectedSector){\r\n          filtered=this.users\r\n        }if(this.selectedSector=='all' && !this.selectedRole){\r\n          filtered=this.users\r\n        }if(this.selectedRole=='all' && this.selectedSector=='all'){\r\n          filtered=this.users\r\n        }if(!this.selectedRole && !this.selectedSector){\r\n          filtered=this.users\r\n        }if(this.selectedRole && (!this.selectedSector || this.selectedSector=='all') && this.selectedRole!='all'){\r\n          // when we select all for status and only the role is selected already\r\n          if(item.role==this.selectedRole){\r\n              filtered.push(item)\r\n          }\r\n        }if(this.selectedRole && this.selectedSector && (this.selectedRole!='all' && this.selectedSector!='all')){\r\n          // if we select all for status and the role and the sector ar both selected\r\n          item.sectors.forEach(element =>{\r\n            if(item.role==this.selectedRole && element.nameSecteur == String(this.selectedSector)){\r\n              filtered.push(item)\r\n              console.log(\"#####\")\r\n            }\r\n          })\r\n          \r\n        }if(this.selectedSector && (!this.selectedRole) && this.selectedSector!='all'){\r\n          // if we select all for status knowing that only the sector is selected already\r\n          item.sectors.forEach(element =>{\r\n            if(element.nameSecteur == String(this.selectedSector)){\r\n              filtered.push(item)\r\n              console.log(\"#####\")\r\n            }\r\n          })\r\n          \r\n        }\r\n\r\n\r\n      })\r\n      this.dataSource = new MatTableDataSource(filtered);\r\n      \r\n\r\n    }else{\r\n\r\n      // let filteredData = _.filter(this.users,(item) =>{\r\n      //   return item.status.toLowerCase() ==  $event.value.toLowerCase();\r\n      // })\r\n      // this.dataSource = new MatTableDataSource(filteredData);\r\n      let filtered=[]\r\n      _.filter(this.users,(item) =>{\r\n\r\n        if((!this.selectedRole || this.selectedRole=='all') && (!this.selectedSector || this.selectedSector=='all')){\r\n          // when we select a status and others are not selected  \r\n          if(item.status.toLowerCase() ==  $event.value.toLowerCase()){\r\n                filtered.push(item)\r\n            }\r\n        }if(this.selectedRole && (!this.selectedSector || this.selectedSector=='all')){\r\n          // when we select a status knowing that only the role is selected already\r\n          if((item.status.toLowerCase() ==  $event.value.toLowerCase()) && item.role==this.selectedRole){\r\n              filtered.push(item)\r\n          }\r\n        }if(this.selectedSector && (!this.selectedRole || this.selectedRole=='all')){\r\n          // if we select the status knowing that only the sector is selected already\r\n          item.sectors.forEach(element =>{\r\n            if(item.status.toLowerCase() ==  $event.value.toLowerCase() && element.nameSecteur == String(this.selectedSector)){\r\n              filtered.push(item)\r\n              console.log(\"#####\")\r\n            }\r\n          })\r\n          \r\n        }if(this.selectedRole && this.selectedSector){\r\n          // if we select a status and the role and the sector ar both selected\r\n          item.sectors.forEach(element =>{\r\n            if(item.status.toLowerCase() ==  $event.value.toLowerCase() && item.role==this.selectedRole && element.nameSecteur == String(this.selectedSector)){\r\n              filtered.push(item)\r\n              console.log(\"#####\")\r\n            }\r\n          })\r\n          \r\n        }\r\n    })\r\n    this.dataSource = new MatTableDataSource(filtered);\r\n    \r\n  }\r\n}\r\n\r\n// filterage based on role select\r\n  onChangeRole($event){\r\n    console.log(this.selectedRole)\r\n    if($event.value == 'all'){\r\n\r\n      // when we select all for role and the others are not selected\r\n\r\n      let filtered=[]\r\n      _.filter(this.users,(item) =>{\r\n\r\n        if(this.selectedStatus=='all' && !this.selectedSector){\r\n          filtered=this.users\r\n        }if(this.selectedSector=='all' && !this.selectedStatus){\r\n          filtered=this.users;\r\n        }if(this.selectedSector=='all' && this.selectedStatus=='all'){\r\n          filtered=this.users\r\n        }if(!this.selectedStatus && !this.selectedSector){\r\n          filtered=this.users\r\n        }if(this.selectedStatus && (!this.selectedSector || this.selectedSector=='all')){\r\n          // when we sellect all for role and the status is selected\r\n          console.log(\"pyaa bani\")\r\n          if(item.status==this.selectedStatus){\r\n              filtered.push(item)\r\n          }\r\n\r\n        }if(this.selectedStatus && this.selectedSector){\r\n          // when we sellect all for role and the status and the sector ar both selected\r\n          item.sectors.forEach(element =>{\r\n            if(item.status==this.selectedStatus && element.nameSecteur == String(this.selectedSector)){\r\n              filtered.push(item)\r\n              console.log(\"#####\")\r\n            }\r\n          })\r\n          \r\n        }if(this.selectedSector && (!this.selectedStatus || this.selectedStatus=='all')){\r\n          // if we select all for role knowing that only the sector is selected already\r\n          item.sectors.forEach(element =>{\r\n            if(element.nameSecteur == String(this.selectedSector)){\r\n              filtered.push(item)\r\n              console.log(\"#####\")\r\n            }\r\n          })\r\n          \r\n        }\r\n      })\r\n      this.dataSource = new MatTableDataSource(filtered);\r\n\r\n      \r\n\r\n\r\n    }else{\r\n      let filtered=[]\r\n      _.filter(this.users,(item) =>{\r\n\r\n        if((!this.selectedSector || this.selectedSector=='all') && (!this.selectedStatus || this.selectedStatus=='all')){\r\n            // when we select a role and others are not selected\r\n          if(item.role.toLowerCase() ==  $event.value.toLowerCase()){\r\n                filtered.push(item)\r\n            }\r\n        }if(this.selectedStatus && (!this.selectedSector || this.selectedSector=='all') && this.selectedStatus!='all'){\r\n          // when we select a role knowing that only the status is selected already\r\n          if((item.role.toLowerCase() ==  $event.value.toLowerCase()) && item.status==this.selectedStatus){\r\n              filtered.push(item)\r\n          }\r\n        }if(this.selectedSector && (!this.selectedStatus || this.selectedStatus=='all') && this.selectedSector!='all'){\r\n          // if we select a role knowing that only the sector is selected already\r\n          item.sectors.forEach(element =>{\r\n            if(item.role.toLowerCase() ==  $event.value.toLowerCase() && element.nameSecteur == String(this.selectedSector)){\r\n              filtered.push(item)\r\n              console.log(\"#####\")\r\n            }\r\n          })\r\n          \r\n        }if(this.selectedStatus && this.selectedSector && this.selectedStatus!= 'all' && this.selectedSector!= 'all'){\r\n          // if we select a role and the status and the sector ar both selected\r\n          item.sectors.forEach(element =>{\r\n            if(item.role.toLowerCase() ==  $event.value.toLowerCase() && item.status==this.selectedStatus && element.nameSecteur == String(this.selectedSector)){\r\n              filtered.push(item)\r\n              console.log(\"#####\")\r\n            }\r\n          })\r\n          \r\n        }\r\n    })\r\n    this.dataSource = new MatTableDataSource(filtered);\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  // filterage based on sector select\r\n  onChangeSector($event){\r\n    console.log(this.selectedSector)\r\n    if($event.value == 'all'){\r\n\r\n      let filtered=[]\r\n      _.filter(this.users,(item) =>{\r\n\r\n        if(this.selectedStatus=='all' && !this.selectedRole){\r\n          filtered=this.users\r\n        }if(this.selectedRole=='all' && !this.selectedStatus){\r\n          filtered=this.users\r\n        }if(this.selectedRole=='all' && this.selectedStatus=='all'){\r\n          filtered=this.users\r\n        }if(!this.selectedStatus && !this.selectedRole){\r\n          filtered=this.users\r\n        }if(this.selectedStatus && (!this.selectedRole || this.selectedRole=='all') && this.selectedStatus!='all'){\r\n          // when we sellect all for sector and the status is selected\r\n          console.log(\"pyaa bani\")\r\n          if(item.status==this.selectedStatus){\r\n              filtered.push(item)\r\n          }\r\n        }if(this.selectedStatus && this.selectedRole){\r\n          // when we sellect all for sector and the status and the role are both selected\r\n          if(item.status==this.selectedStatus && item.role == this.selectedRole){\r\n            filtered.push(item)\r\n          }\r\n          \r\n        }if(this.selectedRole && (!this.selectedStatus || this.selectedStatus=='all') && this.selectedRole != 'all'){\r\n          // if we select all for sector knowing that only the status is selected already\r\n          if(item.role==this.selectedRole){\r\n            filtered.push(item)\r\n          }\r\n          \r\n        }\r\n      })\r\n      this.dataSource = new MatTableDataSource(filtered);\r\n      \r\n\r\n    }else{\r\n      let filtered=[]\r\n      _.filter(this.users,(item) =>{\r\n\r\n        if((!this.selectedRole || this.selectedRole=='all') && (!this.selectedStatus || this.selectedStatus=='all')){\r\n            // when we select a sector and others are not selected\r\n            item.sectors.forEach(element =>{\r\n              if( element.nameSecteur == String($event.value)){\r\n                filtered.push(item)\r\n                // console.log(\"#####\")\r\n              }\r\n            })\r\n        }if(this.selectedStatus && (!this.selectedRole || this.selectedRole=='all') && this.selectedStatus!= 'all'){\r\n          // when we select a sector knowing that only the status is selected already\r\n          item.sectors.forEach(element =>{\r\n            if(item.status == this.selectedStatus && element.nameSecteur == String($event.value)){\r\n              filtered.push(item)\r\n              // console.log(\"#####\")\r\n            }\r\n          })\r\n          \r\n        }if(this.selectedRole && (!this.selectedStatus || this.selectedStatus=='all') && this.selectedRole != 'all'){\r\n          // if we select a sector knowing that only the role is selected already\r\n          item.sectors.forEach(element =>{\r\n            if(item.role == this.selectedRole && element.nameSecteur == String($event.value)){\r\n              filtered.push(item)\r\n              // console.log(\"#####\")\r\n            }\r\n          })\r\n          \r\n        }if(this.selectedStatus && this.selectedRole && this.selectedStatus!= 'all' && this.selectedRole!= 'all'){\r\n          // if we select a sector and the status and the role ar both selected\r\n          item.sectors.forEach(element =>{\r\n            if(item.role == this.selectedRole && item.status==this.selectedStatus && element.nameSecteur == String($event.value)){\r\n              filtered.push(item)\r\n              // console.log(\"#####\")\r\n            }\r\n          })\r\n          \r\n        }\r\n    })\r\n    this.dataSource = new MatTableDataSource(filtered);\r\n    }\r\n\r\n  }\r\n\r\n  \r\n}\r\n","<div class=\"requests-container\">\r\n    <div class=\"table-holder\">\r\n\r\n        <div class=\"title-holder\">\r\n          <h1 class=\"list-title\">Users</h1>\r\n          <button mat-button routerLink=\"/addUser\">Add New User</button>\r\n        </div>\r\n\r\n        <div class=\"filter-container\">\r\n         \r\n            <mat-form-field>\r\n              <!-- <mat-label>Id User</mat-label> -->\r\n              <input placeholder=\"Search...\" matInput (keyup)=\"applyFilter($event.target.value)\"/>\r\n          </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-select placeholder=\"Status\" panelClass=\"selectPanel2\" (selectionChange)=\"onChangeStatus($event)\" [(ngModel)]=\"selectedStatus\">\r\n                  <mat-option value=\"all\">All</mat-option>\r\n                  <mat-option value=\"out of work\">Out Of Work</mat-option>\r\n                  <mat-option value=\"Active\">Active</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            \r\n\r\n            <mat-form-field>\r\n              <mat-select placeholder=\"Role\" panelClass=\"selectPanel2\"   (selectionChange)=\"onChangeRole($event)\" [(ngModel)]=\"selectedRole\">\r\n                  <mat-option value=\"all\">All</mat-option>\r\n                  <ng-container *ngFor=\"let rol of roles\">\r\n                    <mat-option value=\"{{rol}}\">{{rol}}</mat-option>\r\n                  </ng-container>\r\n                   \r\n              \r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field >\r\n              <mat-select placeholder=\"Sector\"  panelClass=\"selectPanel2\" (selectionChange)=\"onChangeSector($event)\" [(ngModel)]=\"selectedSector\">\r\n                <mat-option value=\"all\">All</mat-option>\r\n                <ng-container *ngFor=\"let sector of Sectors\">\r\n                  <mat-option value=\"{{sector.id}}\">{{sector.detail}}</mat-option>\r\n                </ng-container>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            \r\n         \r\n\r\n        </div>\r\n      \r\n        <table mat-table matSort [dataSource]=\"dataSource\">\r\n          <ng-container matColumnDef=\"Id\">\r\n            <th class=\"header id-column\" mat-header-cell *matHeaderCellDef>\r\n              <span>Id</span>\r\n              <!-- <button mat-button class=\"float-right btn-icon\">\r\n                <mat-icon class=\"sort-icon\"></mat-icon>\r\n              </button> -->\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let request\">{{request.UserID}}</td>\r\n          </ng-container>\r\n          \r\n          <ng-container matColumnDef=\"Name\">\r\n            <th class=\"header name-column\" mat-header-cell *matHeaderCellDef>\r\n              <span>Name</span>\r\n              <!-- <button mat-button class=\"float-right btn-icon\">\r\n                <mat-icon class=\"sort-icon\" ></mat-icon>\r\n              </button> -->\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let request\">{{request.name}}</td>\r\n          </ng-container>\r\n      \r\n          <ng-container matColumnDef=\"CIN\">\r\n            <th class=\"header cin-column\" mat-header-cell *matHeaderCellDef>\r\n              <span>CIN</span>\r\n              <!-- <button mat-button  class=\"float-right btn-icon\">\r\n                <mat-icon class=\"sort-icon\" ></mat-icon>\r\n              </button> -->\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let request\">{{request.CIN}}</td>\r\n          </ng-container>\r\n          \r\n          <ng-container matColumnDef=\"Phone Number\">\r\n            <th class=\"header number-column\" mat-header-cell *matHeaderCellDef>\r\n              <span>Phone Number</span>\r\n              <!-- <button mat-button  class=\"float-right btn-icon\">\r\n                <mat-icon class=\"sort-icon\" ></mat-icon>\r\n              </button> -->\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let request\">{{request.phone}}</td>\r\n          </ng-container>\r\n            \r\n          <ng-container matColumnDef=\"Email\">\r\n            <th class=\"header email-column\" mat-header-cell *matHeaderCellDef>\r\n              <span>Email</span>\r\n              <!-- <button mat-button  class=\"float-right btn-icon\">\r\n                <mat-icon class=\"sort-icon\"></mat-icon>\r\n              </button> -->\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let request\">{{request.email}}</td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"Role\">\r\n            <th class=\"header role-column\" mat-header-cell *matHeaderCellDef>\r\n              <span>Role</span>\r\n              <!-- <button mat-button  class=\"float-right btn-icon\">\r\n                <mat-icon class=\"sort-icon\" ></mat-icon>\r\n              </button> -->\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let request\">{{request.role}}</td>\r\n          </ng-container>\r\n\r\n\r\n          <ng-container matColumnDef=\"Status\">\r\n            <th class=\"header role-column\" mat-header-cell *matHeaderCellDef>\r\n              <span>Status</span>\r\n              <!-- <button mat-button  class=\"float-right btn-icon\">\r\n                <mat-icon class=\"sort-icon\" ></mat-icon>\r\n              </button> -->\r\n            </th>\r\n            <ng-container *matCellDef=\"let request\" >\r\n              <td mat-cell *ngIf=\"request.status=='out of work'\"><span style=\"background-color: #AE5827; padding: 3px; color: #fff; border-radius: 3px;\">{{request.status}}</span></td>\r\n            \r\n              <td mat-cell *ngIf=\"request.status=='Active'\"><span style=\"background-color: #27AE61; padding: 3px; color: #fff; border-radius: 3px;\">{{request.status}}</span></td>\r\n            </ng-container>\r\n          \r\n          </ng-container>\r\n      \r\n          <ng-container matColumnDef=\"Actions\">\r\n            <th class=\"header actions-column\" mat-header-cell *matHeaderCellDef>\r\n              <span>Actions</span>\r\n              <!-- <button mat-button  class=\"float-right btn-icon\">\r\n                <mat-icon class=\"sort-icon\" ></mat-icon>\r\n              </button> -->\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let request\">\r\n                <button mat-icon-button (click)=\"updateUser(request)\" title=\"Update user\"><mat-icon class=\"valid-icon\">edit</mat-icon></button>\r\n                <button mat-icon-button (click)=\"deleteUser(request)\" title=\"Delete user\" *ngIf=\"request.status=='Active'\">\r\n                  <mat-icon class=\"refus-icon\" >delete</mat-icon>\r\n                </button>\r\n                <button mat-icon-button (click)=\"restoreUser(request)\" title=\"Bring back this user\" *ngIf=\"request.status=='out of work'\">\r\n                  <mat-icon class=\"restore-icon\" >restore_from_trash</mat-icon>\r\n                </button>\r\n                <button mat-icon-button (click)=\"viewUserDetails(request)\" ><mat-icon class=\"detail-icon\" title=\"Click to view user details.\">remove_red_eye</mat-icon></button>\r\n            </td>\r\n          </ng-container>\r\n          \r\n      \r\n          <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n          <tr mat-row *matRowDef=\"let request; columns: columnsToDisplay\"></tr>\r\n      \r\n        </table>\r\n\r\n        <mat-paginator [pageSizeOptions]=\"[ 10, 15, 20]\" showFirstLastButtons></mat-paginator>\r\n      \r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {  MAT_DIALOG_DATA, MatDialogRef, MatDialog} from '@angular/material/dialog';\r\nimport { Inject } from '@angular/core'; \r\n\r\n@Component({\r\n  selector: 'app-alert-dialog',\r\n  templateUrl: './alert-dialog.component.html',\r\n  styleUrls: ['./alert-dialog.component.css']\r\n})\r\nexport class AlertDialogComponent implements OnInit {\r\n\r\n  message: string = \"Are you sure?\"\r\n  confirmButtonText = \"Yes\"\r\n  cancelButtonText = \"Cancel\"\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private data: any,\r\n    private dialogRef: MatDialogRef<AlertDialogComponent>) { \r\n\r\n      if(data){\r\n        this.message = data.message || this.message;\r\n        if (data.buttonText) {\r\n          this.confirmButtonText = data.buttonText.ok || this.confirmButtonText;\r\n        }\r\n      }\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onConfirmClick(): void {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n}\r\n","<mat-dialog-content>\r\n\t<p>\r\n\t\t{{message}}\r\n\t</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"center\">\r\n\t<!-- <button mat-raised-button mat-dialog-close tabindex=\"-1\">{{cancelButtonText}}</button> -->\r\n\t<button mat-raised-button style=\"background-color:#27AE61; color: white;\" (click)=\"onConfirmClick()\"\r\n\t\ttabindex=\"1\">{{confirmButtonText}}</button>\r\n</mat-dialog-actions>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SidebarMenuComponent } from './sidebar-menu/sidebar-menu.component';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { MapComponent } from './map/map.component';\r\nimport { ClientsComponent } from './clients/clients.component';\r\nimport { RoutesComponent } from './routes/routes.component';\r\nimport { PlanningComponent } from './admin/planning/planning.component';\r\nimport { AuthGaurdService } from './auth-gaurd.service';\r\nimport { AddclientComponent } from './addclient/addclient.component';\r\nimport { UpdateClientComponent } from './update-client/update-client.component';\r\nimport { OfflineComponent } from './offline/offline.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { DeleteClientComponent } from './delete-client/delete-client.component';\r\nimport { InjectionComponent } from './injection/injection.component';\r\nimport { DeleteRequestsComponent } from './admin/delete-requests/delete-requests.component';\r\nimport { AddUserComponent } from './admin/add-user/add-user.component';\r\nimport { UsersComponent } from './admin/users/users.component';\r\nimport { UpdateUserComponent } from './admin/update-user/update-user.component';\r\n\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: '', redirectTo: 'map', pathMatch: 'full' },\r\n  {\r\n    path:'login',\r\n    component:LoginComponent\r\n  },\r\n  {\r\n    path: 'menu', \r\n    component: SidebarMenuComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'map', component: MapComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'clients', component: ClientsComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'routes', component: RoutesComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'planning', component: PlanningComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'addclient/:sector', component: AddclientComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'addclient', component: AddclientComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'updateclient', component: UpdateClientComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'offline', component: OfflineComponent,\r\n  },\r\n  {\r\n    path: 'settings', component: SettingsComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  { \r\n    path: 'map/:lat/:long', component: MapComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'deleteClient', component: DeleteClientComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'deleteRequests', component: DeleteRequestsComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'injection', component: InjectionComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'addUser', component: AddUserComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'users', component: UsersComponent,\r\n    canActivate: [AuthGaurdService]\r\n  },\r\n  {\r\n    path: 'updateUser', component: UpdateUserComponent,\r\n    canActivate: [AuthGaurdService]\r\n  }\r\n  // {\r\n  //   path: 'upper', component: UpperMenuComponent\r\n  // }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n  constructor(private _auth:AuthenticationService){\r\n  \r\n  }\r\n  \r\n  getLogged(){\r\n    return this._auth.loggedIn()\r\n  }\r\n  \r\n  getusername(){\r\n  }\r\n  \r\n}\r\n","<div class=\"app-view\">\r\n    <!-- <app-upper-menu></app-upper-menu> -->\r\n    <app-sidebar-menu *ngIf=\"getLogged()\"></app-sidebar-menu>\r\n    <router-outlet></router-outlet>\r\n<!--  <app-addclient></app-addclient>-->\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule}  from '@angular/material/icon';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select'\r\nimport { LoginComponent } from './login/login.component';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { SidebarMenuComponent } from './sidebar-menu/sidebar-menu.component';\r\nimport { ClientInfoComponent } from './client-info/client-info.component';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MapComponent } from './map/map.component';\r\nimport { ClientsComponent } from './clients/clients.component';\r\nimport { RoutesComponent } from './routes/routes.component';\r\nimport { PlanningComponent } from './admin/planning/planning.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { AuthGaurdService } from './auth-gaurd.service';\r\nimport { MatMenuModule} from '@angular/material/menu';\r\nimport { AddclientComponent } from './addclient/addclient.component';\r\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {WebcamModule} from 'ngx-webcam';\r\nimport { FormsModule } from '@angular/forms'\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { TokenInterceptorService } from './token-interceptor.service';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { UpdateClientComponent } from './update-client/update-client.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { OfflineComponent } from './offline/offline.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { FullImageComponent } from './full-image/full-image.component';\r\nimport { AlertDialogComponent } from './alert-dialog/alert-dialog.component';\r\nimport {CommonModule} from '@angular/common';\r\nimport { ExtractComponent } from './extract/extract.component';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { DeleteClientComponent } from './delete-client/delete-client.component';\r\nimport { DeleteRequestsComponent } from './admin/delete-requests/delete-requests.component';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport { InjectionComponent } from './injection/injection.component'\r\n// import { FileUploadModule } from \"ng2-file-upload\";\r\n\r\n\r\nimport { AddUserComponent } from './admin/add-user/add-user.component';\r\nimport { UsersComponent } from './admin/users/users.component';\r\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\r\nimport { UpdateUserComponent } from './admin/update-user/update-user.component'\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport { UserInfoComponent } from './admin/user-info/user-info.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SidebarMenuComponent,\r\n    LoginComponent,\r\n    MapComponent,\r\n    ClientsComponent,\r\n    RoutesComponent,\r\n    PlanningComponent,\r\n    AddclientComponent,\r\n    ClientInfoComponent,\r\n    UpdateClientComponent,\r\n    OfflineComponent,\r\n    SettingsComponent,\r\n    FullImageComponent,\r\n    AlertDialogComponent,\r\n    ExtractComponent,\r\n    DeleteClientComponent,\r\n    DeleteRequestsComponent,\r\n    InjectionComponent,\r\n    AddUserComponent,\r\n    UsersComponent,\r\n    ConfirmationDialogComponent,\r\n    UpdateUserComponent,\r\n    UserInfoComponent,\r\n    \r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatButtonModule,\r\n    HttpClientModule,\r\n    MatListModule,\r\n    MatDividerModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    RouterModule,\r\n    MatMenuModule,\r\n    AppRoutingModule,\r\n    MatGridListModule,\r\n    FormsModule ,\r\n    ZXingScannerModule,\r\n    MatFormFieldModule,\r\n    WebcamModule,\r\n    MatProgressBarModule,\r\n    Ng2SearchPipeModule,\r\n    MatSelectModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    MatFormFieldModule,\r\n    MatDialogModule,\r\n    CommonModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSlideToggleModule,\r\n    // FileUploadModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', {\r\n      enabled: true,\r\n      // Register the ServiceWorker as soon as the app is stable\r\n      // or after 30 seconds (whichever comes first).\r\n      // registrationStrategy: 'registerWhenStable:30000'\r\n    })\r\n\r\n  ],\r\n  providers: [\r\n    AuthenticationService, \r\n    AuthGaurdService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true\r\n    }],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ConfirmationDialogComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGaurdService implements CanActivate {\r\n\r\n  constructor(private _authService: AuthenticationService,\r\n    private _router: Router) { }\r\n\r\n  canActivate(): boolean {\r\n    if (this._authService.loggedIn()) {\r\n      console.log('true')\r\n      return true\r\n    } else {\r\n      console.log('false')\r\n      this._router.navigate(['/login']).then(() => {\r\n        window.location.reload();\r\n      });\r\n      return false\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { IndexdbService } from './indexdb.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  private _UsersUrl = \"http://localhost:3000/api1/login\"\r\n\r\n  constructor(private http: HttpClient,\r\n    private _router: Router,\r\n    private _index: IndexdbService) { }\r\n  getUserLogin(data,httpOptions) {\r\n    return this.http.post<any>(this._UsersUrl, data)\r\n  }\r\n  getToken() {\r\n    return localStorage.getItem('token')\r\n  }\r\n  loggedIn() {\r\n    return !!localStorage.getItem('token')\r\n  }\r\n  //////////************** Logout **************/////////////////\r\n  logoutUser() {\r\n    localStorage.removeItem('token')\r\n    //this._index.ClearData()\r\n    //this._index.ClearDataSector()\r\n    this.ClearData();\r\n    //ClearDataSector()\r\n  }\r\n  db; ///database\r\n  version = 6; ///version of the database\r\n  ClearData() {\r\n    var request = window.indexedDB.open(\"off\", this.version)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      this.db = event.target.result;\r\n      console.log(\"success inside Clear\")\r\n      console.log(this.db)\r\n      var transaction = this.db.transaction(['data'], 'readwrite');\r\n      var objectStore = transaction.objectStore(\"data\");\r\n      var objectStoreRequest = objectStore.clear();\r\n      objectStoreRequest.onsuccess = (event) => {\r\n        console.log(\"Data Cleared\")\r\n        this.ClearDataSector()\r\n      }\r\n    }\r\n  }\r\n  ClearDataSector() {\r\n    var request = window.indexedDB.open(\"off\", this.version)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      this.db = event.target.result;\r\n      console.log(\"success Sector inside Clear\")\r\n      console.log(this.db)\r\n      var transaction = this.db.transaction(['sector'], 'readwrite');\r\n      var objectStore = transaction.objectStore(\"sector\");\r\n      var objectStoreRequest = objectStore.clear();\r\n      objectStoreRequest.onsuccess = (event) => {\r\n        console.log(\"Data Sector Cleared\")\r\n        this._router.navigate(['login']).then(()=>{\r\n          window.location.reload();\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { Inject } from '@angular/core';\r\nimport { ClientsService } from '../clients.service';\r\nimport { MapComponent } from '../map/map.component';\r\nimport { Router } from '@angular/router';\r\nimport { FullImageComponent } from '../full-image/full-image.component';\r\nimport { AlertDialogComponent } from '../alert-dialog/alert-dialog.component';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-client-info',\r\n  templateUrl: './client-info.component.html',\r\n  styleUrls: ['./client-info.component.css']\r\n})\r\nexport class ClientInfoComponent implements OnInit {\r\n\r\n  ////******* VARIABLES DECLARATIONS ******/////\r\n  loggedUser;\r\n  clientOfSeller;\r\n  clientOfAuditor;\r\n  safeURL;\r\n  videoURL: \"https://www.youtube.com/watch?v=iloN8k4zdgE&ab_channel=MRUTaste\"\r\n  //////////////////////////////////////////////\r\n\r\n  ////********* CONSTRUCTOR ******///////////////\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private clientService: ClientsService,\r\n    public dialogRef: MatDialogRef<MapComponent>,\r\n    public dialogRef2: MatDialogRef<FullImageComponent>,\r\n    public dialog: MatDialog,\r\n    public _router: Router,\r\n    private _sanitizer: DomSanitizer) {\r\n      this.safeURL = this._sanitizer.bypassSecurityTrustResourceUrl(this.videoURL);\r\n     }\r\n\r\n  ///////////////////////////////////////////////\r\n\r\n  ////********** INIT FUNCTIONC **********/////\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"############################ Wa client\")\r\n    console.log(this.data)\r\n    this.loggedUser = JSON.parse(localStorage.getItem(\"user\"))\r\n    if (this.loggedUser.role == 'Admin' || this.loggedUser.role == 'Back Office') {\r\n      this.clientService.getClientBySeller(this.data._id).subscribe(res => {\r\n        this.clientOfSeller = res;\r\n        console.log(\"!!!!!!!!!!!!!!!! Seller !!!!!!!!!!!!!!\")\r\n        console.log(res)\r\n        this.clientService.getClientByAuditor(this.data._id).subscribe(res => {\r\n          this.clientOfAuditor = res;\r\n          console.log(\"!!!!!!!!!!!!!!!! Auditor !!!!!!!!!!!!!!\")\r\n          console.log(res)\r\n        })\r\n      })\r\n    } else {\r\n      console.log(\"############################ Wa client\")\r\n      console.log(this.data)\r\n    }\r\n  }\r\n  //////////////////////////////////////////////////////////\r\n\r\n  ////*********UPDATE CLIENT INFOS *********/////\r\n  onUpdateClick() {\r\n    this.clientService.setCurrentClientInfo(this.data)\r\n    this.dialogRef.close();\r\n    this._router.navigate(['/updateclient'])\r\n  }\r\n  \r\n  ActiveTheButton(){\r\n    //console.log(\"fjdkfh\"+ this.clientService.ActiveTheButton())\r\n    return this.clientService.ActiveTheButton();\r\n  }\r\n  \r\n  deleteRequest(){\r\n    this.dialogRef.close();\r\n    this._router.navigateByUrl('/deleteClient', { state: { dataClient:this.data } });\r\n  }\r\n\r\n ////**********VALIDATE FUNCTION ***********////\r\n  validate(id, status) {\r\n    console.log(\"######## id:\" + id)\r\n    this.clientService.validateAuditorInfo({ 'id': id, 'status': status }).subscribe(res => console.log(res))\r\n    if (status == 'green') {\r\n      var message = \"Client Validated, synchronize to see the result.\"\r\n      var btn = \"OK\"\r\n      this.openAlertDialog(message, btn)\r\n    } else {\r\n      var message = \"Client Refused, synchronize to see the status changed.\"\r\n      var btn = \"OK\"\r\n      this.openAlertDialog(message, btn)\r\n    }\r\n    this.dialogRef.close();\r\n  }\r\n  ///////////////////////////////////////////////////////\r\n\r\n  ////********INTERFCE FUNCTIONS ******/////\r\n\r\n  openImage(url) {\r\n    this.dialogRef2 = this.dialog.open(FullImageComponent, { data: url })\r\n  }\r\n\r\n  openAlertDialog(msg, btn) {\r\n    const dialogRef = this.dialog.open(AlertDialogComponent, {\r\n      data: {\r\n        message: msg,\r\n        buttonText: {\r\n          ok: btn,\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n  navigateToMap(lat, long) {\r\n    this._router.navigate(['/map/' + lat + \"/\" + long])\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  /// enbale Button\r\n/// status1: for DeletedRequests Collection status2: status\r\n  EnableButton(status1,status2){\r\n    \r\n    console.log(status1)\r\n    console.log(status2)\r\n  }\r\n}\r\n","<label style=\"font-weight: bold; color: green;\">Id Client: </label><p>{{data._id}}</p>\r\n<div *ngIf=\"(loggedUser.role == 'Back Office' || loggedUser.role == 'Admin' ) && !data?.Raison\">\r\n    \r\n    <div *ngIf=\"data.geometry.properties.status=='green', else refused\">\r\n        <span style=\"color: green;\">Client Validated</span>\r\n    </div>\r\n    <ng-template #refused>\r\n        <span style=\"color: red;\">Client Not validated</span>\r\n    </ng-template>\r\n\r\n    <mat-dialog-content>\r\n        <div class=\"dialog-container\">\r\n            <div class=\"aud-sell-container\">\r\n                <section class=\"sell-container\">\r\n                    <span>Seller</span>\r\n                    <div class=\"pdv-info-container\">\r\n                        <div class=\"pdv-img\">\r\n                            <img *ngIf=\"clientOfSeller?.PVP\" src=\"{{clientOfSeller?.PVP}}\" alt=\"\"\r\n                                (click)=\"openImage(clientOfSeller?.PVP)\">\r\n                            <img *ngIf=\"!clientOfSeller?.PVP\" src=\"assets/images/blank.jpg\" alt=\"\"\r\n                                (click)=\"openImage(clientOfSeller?.PVP)\">\r\n                        </div>\r\n                        <div class=\"pdv-info\">\r\n                            <label>Sector:</label>\r\n                            <p>{{clientOfSeller?.Code_Secteur_OS}}</p>\r\n                            <label>Name:</label>\r\n                            <p>{{clientOfSeller?.NomPrenom}}</p>\r\n                            <label>Phone Number:</label>\r\n                            <p>{{clientOfSeller?.PhoneNumber}}</p>\r\n                            <label>Type PDV:</label>\r\n                            <p>{{ clientOfSeller?.TypeDPV}}, {{clientOfSeller?.detailType}}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"pdv-action-btns\">\r\n                    </div>\r\n                </section>\r\n                <section class=\"aud-container\">\r\n                    <span>Auditor</span>\r\n                    <div class=\"pdv-info-container\">\r\n                        <div class=\"pdv-img\">\r\n                            <img *ngIf=\"clientOfAuditor?.PVP\" src=\"{{clientOfAuditor?.PVP}}\" alt=\"\"\r\n                                (click)=\"openImage(clientOfAuditor?.PVP)\">\r\n                            <img *ngIf=\"!clientOfAuditor?.PVP\" src=\"assets/images/blank.jpg\" alt=\"\"\r\n                                (click)=\"openImage(clientOfAuditor?.PVP)\">\r\n                        </div>\r\n                        <div class=\"pdv-info\">\r\n                            <label>Sector:</label>\r\n                            <p>{{clientOfAuditor?.Code_Secteur_OS}}</p>\r\n                            <label>Name:</label>\r\n                            <p>{{clientOfAuditor?.NomPrenom}}</p>\r\n                            <label>Phone Number:</label>\r\n                            <p>{{clientOfAuditor?.PhoneNumber}}</p>\r\n                            <label>Type PDV:</label>\r\n                            <p>{{ clientOfAuditor?.TypeDPV}}, {{clientOfAuditor?.detailType}}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"pdv-action-btns\" *ngIf=\"data.geometry.properties.status !='green'\">\r\n                        <button mat-button class=\"btn-valid\" (click)=\"validate(data._id,'green')\">Valid</button>\r\n                        <button mat-button class=\"btn-refus\" (click)=\"validate(data._id,'black')\">Refus</button>\r\n                    </div>\r\n\r\n                </section>\r\n            </div>\r\n            <div class=\"validPDV-container\">\r\n                <span>Validated Client</span>\r\n\r\n                <section class=\"valid-pdv-container\">\r\n                    <div class=\"pdv-info-container\">\r\n                        <div class=\"pdv-img\">\r\n                            <img *ngIf=\"data.geometry.properties.PVP\" src=\"{{data.geometry.properties.PVP}}\" alt=\"\"\r\n                                (click)=\"openImage(data.geometry.properties.PVP)\">\r\n                            <img *ngIf=\"!data.geometry.properties.PVP\" src=\"assets/images/blank.jpg\" alt=\"\"\r\n                                (click)=\"openImage(data.geometry.properties.PVP)\">\r\n                        </div>\r\n                        <div class=\"pdv-info\">\r\n                            <label>Sector:</label>\r\n                            <p>{{data.geometry.properties.Code_Secteur_OS}}</p>\r\n                            <label>Name:</label>\r\n                            <p>{{data.geometry.properties.NomPrenom}}</p>\r\n                            <label>Phone Number:</label>\r\n                            <p>{{data.geometry.properties.PhoneNumber}}</p>\r\n                            <label>Type PDV:</label>\r\n                            <p>{{ data.geometry.properties.TypeDPV}}, {{data.geometry.properties.detailType}}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"pdv-info-container\">\r\n                        <div class=\"pdv-img\">\r\n                            <img *ngIf=\"data.geometry.properties.NFCP\" src=\"{{data.geometry.properties.NFCP}}\" alt=\"\"\r\n                                (click)=\"openImage(data.geometry.properties.NFCP)\">\r\n                            <img *ngIf=\"!data.geometry.properties.NFCP\" src=\"assets/images/blank.jpg\" alt=\"\"\r\n                                (click)=\"openImage(data.geometry.properties.NFCP)\">\r\n                        </div>\r\n                        <div class=\"pdv-info\">\r\n                            <label>NFC UUID:</label>\r\n                            <p>{{data.geometry.properties.nfc.UUID}}</p>\r\n                            <label>NFC code Qr:</label>\r\n                            <p>{{data.geometry.properties.codeQR}}</p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n            </div>\r\n        </div>\r\n        <!-- <p> {{data.NomPrenom}}</p> -->\r\n    </mat-dialog-content>\r\n\r\n    <mat-dialog-actions class=\"action-btns\" align=\"center\">\r\n        <button mat-raised-button color=\"primary\" class=\"btn-green\" (click)=\"onUpdateClick()\">Update Client</button>\r\n        <button mat-raised-button color=\"primary\" class=\"btn-red\">Delete Client</button>\r\n        <button mat-raised-button color=\"primary\" class=\"btn-orange\"\r\n            (click)=\"navigateToMap(data.geometry.geometry.coordinates[1],data.geometry.geometry.coordinates[0])\">Navigate\r\n            to the client</button>\r\n    </mat-dialog-actions>\r\n</div>\r\n\r\n<div *ngIf=\"loggedUser.role == 'Seller' || loggedUser.role == 'Auditor'\">\r\n    <mat-dialog-content class=\"dialog-content\">\r\n        <h2>Client Information</h2>\r\n        <section fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n            <div class=\"pdv-info-container\">\r\n                <div class=\"pdv-img\">\r\n                    <img *ngIf=\"data.geometry.properties.PVP\" src=\"{{data.geometry.properties.PVP}}\" alt=\"\"\r\n                        (click)=\"openImage(data.geometry.properties.PVP)\">\r\n                    <img *ngIf=\"!data.geometry.properties.PVP\" src=\"assets/images/blank.jpg\" alt=\"\"\r\n                        (click)=\"openImage(data.geometry.properties.PVP)\">\r\n                </div>\r\n                <div class=\"pdv-info\">\r\n                    <label>Sector:</label>\r\n                    <p>{{data.geometry.properties.Code_Secteur_OS}}</p>\r\n                    <label>Name:</label>\r\n                    <p>{{data.geometry.properties.NomPrenom}}</p>\r\n                    <label>Phone Number:</label>\r\n                    <p>{{data.geometry.properties.PhoneNumber}}</p>\r\n                    <label>Type PDV:</label>\r\n                    <p>{{ data.geometry.properties.TypeDPV}}, {{data.geometry.properties.detailType}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"pdv-info-container\">\r\n                <div class=\"pdv-img\">\r\n                    <img *ngIf=\"data.geometry.properties.NFCP\" src=\"{{data.geometry.properties.NFCP}}\" alt=\"\"\r\n                        (click)=\"openImage(data.geometry.properties.NFCP)\">\r\n                    <img *ngIf=\"!data.geometry.properties.NFCP\" src=\"assets/images/blank.jpg\" alt=\"\"\r\n                        (click)=\"openImage(data.geometry.properties.NFCP)\">\r\n                </div>\r\n                <div class=\"pdv-info\">\r\n                    <label>Code NFC:</label>\r\n                    <p *ngIf=\"!data.geometry.properties.nfc.codeNFC, else nfc\">null</p>\r\n                    <ng-template #nfc>{{data.geometry.properties.nfc.codeNFC}}</ng-template>\r\n                    <label>UUID:</label>\r\n                    <p>{{data.geometry.properties.nfc.UUID}}</p>\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n        <!-- <p>{{data.NomPrenom}}</p> -->\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"action-btns\" align=\"center\">\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"ActiveTheButton()\" class=\"btn-green\" (click)=\"onUpdateClick()\">Update Client</button>\r\n        <button mat-raised-button color=\"primary\"  class=\"btn-red\" (click)=\"deleteRequest()\">Delete Client</button>\r\n    </mat-dialog-actions>\r\n    \r\n</div>\r\n\r\n<div *ngIf=\"data?.Raison\">\r\n    <mat-dialog-content class=\"dialog-content\">\r\n        <section class=\"section\">\r\n            <div class=\"pdv-info-container\">\r\n                <div class=\"pdv-img\">\r\n                    <img *ngIf=\"data.PDV[0].geometry.properties?.PVP\" src=\"{{data.PDV[0].geometry.properties?.PVP}}\" alt=\"\"\r\n                                (click)=\"openImage(data.PDV[0].geometry.properties?.PVP)\">\r\n                    <img *ngIf=\"!data.PDV[0].geometry.properties?.PVP\" src=\"assets/images/blank.jpg\" alt=\"\"\r\n                                (click)=\"openImage('assets/images/blank.jpg')\">\r\n                </div>\r\n                <div class=\"pdv-info\">\r\n                    <label>Sector:</label>\r\n                    <p>{{data.PDV[0].geometry.properties.Code_Secteur_OS}}</p>\r\n                    <label>Name:</label>\r\n                    <p>{{data.PDV[0].geometry.properties.NomPrenom}}</p>\r\n                    <label>Phone Number:</label>\r\n                    <p>{{data.PDV[0].geometry.properties.PhoneNumber}}</p>\r\n                    <label>Type PDV:</label>\r\n                    <p>{{data.PDV[0].geometry.properties.TypeDPV}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"pdv-info-container\">\r\n\r\n                <div class=\"pdv-img\">\r\n                    <img *ngIf=\"data.PDV[0].geometry.properties?.NFCP\" src=\"{{data.PDV[0].geometry.properties?.NFCP}}\" alt=\"\"\r\n                    (click)=\"openImage(data.PDV[0].geometry.properties?.NFCP)\">\r\n                    <img *ngIf=\"!data.PDV[0].geometry.properties?.NFCP\" src=\"assets/images/blank.jpg\" alt=\"\"\r\n                    (click)=\"openImage('assets/images/blank.jpg')\">\r\n                </div>\r\n                <div class=\"pdv-info\">\r\n                    <label>Code QR:</label>\r\n                    <p>{{data.PDV[0].geometry.properties.codeQR}}</p>\r\n                    <label>UUID:</label>\r\n                    <p>{{data.PDV[0].geometry.properties.nfc.UUID}}</p>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n        </section>\r\n        <section class=\"section\">\r\n            <div class=\"pdv-info-container\">\r\n\r\n                <div class=\"pdv-img\">\r\n                    <img *ngIf=\"data.Photo!=null\" src=\"{{data.prove}}\" alt=\"\"\r\n                    (click)=\"openImage(data.PhotoURL)\">\r\n                    <video *ngIf=\"data.Video!=null\" src=\"{{data.prove}}\"  controls>\r\n                        \r\n                    </video>\r\n                </div>\r\n                <div class=\"pdv-info\">\r\n                    <label>Reason:</label>\r\n                    <p>{{data.Raison}}</p>\r\n                    \r\n                </div>\r\n            </div>\r\n        </section>\r\n        <!-- <p>{{data.NomPrenom}}</p> -->\r\n    </mat-dialog-content>\r\n\r\n    <mat-dialog-actions class=\"action-btns\" align=\"center\">\r\n        <button mat-raised-button color=\"primary\" class=\"btn-green\" *ngIf=\"data.status=='Waiting'\">Validate Supp</button>\r\n        <button mat-raised-button color=\"primary\" class=\"btn-red\" *ngIf=\"data.status=='Waiting'\">Cancel Supp</button>\r\n    </mat-dialog-actions>\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpEvent, HttpHeaders, HttpRequest } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { OnlineOfflineServiceService } from './online-offline-service.service';\r\nimport Dexie from 'dexie';\r\nimport { UUID } from 'angular2-uuid';\r\nimport { AlertDialogComponent } from './alert-dialog/alert-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport * as L from 'leaflet';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientsService {\r\n\r\n  /////********* VARIABLE'S DECLARATION ******//////////\r\n  MyPosition;\r\n  Raduis;\r\n  PositionClient;\r\n  Distance;\r\n  private db: any;\r\n  items\r\n\r\n  private currentClient;\r\n  uri = \"http://localhost:3000\";\r\n  private _clientUrl = this.uri + \"/api1/clients\";\r\n  private _secteurUrl = this.uri + \"/api1/secteurs\";\r\n  private _addclient = this.uri + \"/api1/AddClient\";\r\n  private _getclient = this.uri + \"/api1/addedClients\";\r\n  private _updateclient = this.uri + \"/api1/updateClient\";\r\n  private getClientBySell = this.uri + \"/api1/getClientBySeller\";\r\n  private _validate = this.uri + \"/api1/validate\";\r\n  private _extarct = this.uri + \"/api1/extract\";\r\n  private _getClientByID = this.uri + \"/api1/GetClient\";\r\n  private _allDeleteRequests = this.uri+\"/api1/getAllDeleteRequests\";\r\n  ////////////////////remplacer par uri après le port\r\n  //private _getClientByID = \"http://localhost:3000/api1/GetClient\";\r\n  //private _Delete = \"http://localhost:3000/api1/\";\r\n  private _Delete = this.uri+\"/api1/\";\r\n\r\n  ////////*************** API *****************////////\r\n  getNFC() {\r\n    var url = \"http://localhost:7000/nfc\"\r\n    return this.http.post<any>(url, \"0633691574\")\r\n  }\r\n  getSMS(phone) {\r\n    var url = \"http://localhost:7000/sms\"\r\n    return this.http.post<any>(url, phone)\r\n  }\r\n  SendClient(client) {\r\n    return this.http.post<any>(this._addclient, client);\r\n  }\r\n  getAllClient() {\r\n    return this.http.get<any>(this._clientUrl)\r\n  }\r\n  getClientBySeller(id) {\r\n    var url = \"http://localhost:3000/api1/getClientBySeller/\" + id\r\n    console.log(url)\r\n    return this.http.get<any>(url)\r\n  }\r\n  getClientByAuditor(id) {\r\n    var url = \"http://localhost:3000/api1/getClientByAuditor/\" + id\r\n    console.log(url)\r\n    return this.http.get<any>(url)\r\n  }\r\n  getAllSecteurs() {\r\n    return this.http.get<any>(this._secteurUrl)\r\n  }\r\n  getClient() {\r\n    return this.http.get<any>(this._getclient);\r\n  }\r\n  updateClient(client: any) {\r\n    return this.http.post<any>(this._updateclient, client);\r\n  }\r\n\r\n  extract() {\r\n    return this.http.get<any>(this._extarct);\r\n  }\r\n\r\n  getDeleteRequests() {\r\n    return this.http.get<any>(this._allDeleteRequests)\r\n  }\r\n\r\n  DeleteClientByID(id) {\r\n    console.log(\"DeleteClientByID\" + id);\r\n    return this.http.get(this._Delete + \"DeleteClient/\" + id);\r\n  }\r\n\r\n  // DeleteRequest(data) {\r\n  //   console.log(\"DeleteClientByID\" + data.video);\r\n  //   return this.http.post(this._Delete + \"DeleteRequest\", data);\r\n  // }\r\n\r\n  // ReadV() {\r\n  //   return this.http.get(this._Delete + \"ReadVideo\");\r\n  // }\r\n\r\n  myDelete(info){\r\n    return this.http.post<any>(\"http://localhost:3000/api1/deleteo\",info)\r\n  }\r\n  myDeleteRead(){\r\n    return this.http.get<any>(\"http://localhost:3000/api1/VideoReadHafsa\")\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////\r\n\r\n  //////************* CONSTRUCTOR **************/////////////\r\n  constructor(private readonly onlineOffline: OnlineOfflineServiceService, private http: HttpClient, private _router: Router, private dialog: MatDialog) {\r\n    this.registerToEvents(onlineOffline);\r\n    this.createDatabase();\r\n  }\r\n\r\n\r\n  ////*********** CREATE DATABASE ***********//////////////\r\n  private createDatabase() {\r\n    this.db = new Dexie('MyTestDatabase');\r\n    this.db.version(1).stores({\r\n      client: 'UUid',\r\n      update: 'UUid'\r\n    });\r\n  }\r\n  /////********* ADD CLIENT IN INDEXEDDB OFFLINE MODE *********//////////\r\n  addTodo(client: any) {\r\n    client[\"UUid\"] = UUID.UUID();\r\n    if (!this.onlineOffline.isOnline) {\r\n      this.addToIndexedDb(client);\r\n    } else {\r\n      this.SendClient(client).subscribe(res => {\r\n        console.log(res);\r\n        console.log(\"data sent\")\r\n      });\r\n    }\r\n  }\r\n  addToIndexedDb(clientt: any) {\r\n    this.db.client\r\n      .add(clientt)\r\n      .then(async () => {\r\n        const allItems: any = await this.db[\"client\"].toArray();\r\n        console.log('saved in DB, DB is now', allItems);\r\n        var message = \"Data saved successfuly\";\r\n        var btn = \"Continue\"\r\n        this.openAlertDialog(message, btn)\r\n      })\r\n      .catch(e => {\r\n        alert('Error: ' + (e.stack || e));\r\n      });\r\n  }\r\n  ////////////////////////////////////////////////////////////////////\r\n\r\n  /////*********** UPDATE CLIENT OFFLINE MODE *********///////\r\n\r\n  addTodoUpdate(client: any) {\r\n    client[\"UUid\"] = UUID.UUID();\r\n    if (!this.onlineOffline.isOnline) {\r\n      this.addToIndexedDbUpdate(client);\r\n    } else {\r\n      //post request to mongodb\r\n      this.updateClient(client).subscribe(res => {\r\n        console.log(res);\r\n        console.log(\"data sent\")\r\n      });\r\n    }\r\n  }\r\n///////************  ********************/\r\n  addToIndexedDbUpdate(clientt: any) {\r\n    var db; var transaction; var upgradeDb\r\n    var request = window.indexedDB.open(\"MyTestDatabase\", 10)\r\n    // upgradeDb.createObjectStore('client');\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log(\"success\")\r\n      console.log(db)\r\n      transaction = db.transaction(['update'], 'readwrite');\r\n      var objectStore = transaction.objectStore(\"update\");\r\n      //var objectStoreRequest = objectStore.get(id);\r\n      const request = objectStore.add(clientt);\r\n      request.onsuccess = (event) => {\r\n        console.log('saved in DB, DB is now');\r\n        var message = \"Data saved successfuly\";\r\n        var btn = \"Continue\"\r\n        this.openAlertDialog(message, btn)\r\n      };\r\n\r\n    }\r\n  }\r\n  ////////////////////////////////////////////////////////////////////////\r\n\r\n  /////*********** DELETE CLIENT OFFLINE MODE *********///////\r\n  addTodoDelete(client: any) {\r\n    client[\"UUid\"] = UUID.UUID();\r\n    if (!this.onlineOffline.isOnline) {\r\n      this.addToIndexedDbDelete(client);\r\n    } else {\r\n      //post request to mongodb\r\n      this.DeleteRequest(client).subscribe(res => {\r\n        console.log(res);\r\n        console.log(\"data sent\")\r\n      });\r\n    }\r\n  }\r\n\r\n  addToIndexedDbDelete(clientt: any) {\r\n    var db; var transaction; var upgradeDb\r\n    var request = window.indexedDB.open(\"MyTestDatabase\", 10)\r\n    // upgradeDb.createObjectStore('client');\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log(\"success\")\r\n      console.log(db)\r\n      transaction = db.transaction(['delete'], 'readwrite');\r\n      var objectStore = transaction.objectStore(\"delete\");\r\n      //var objectStoreRequest = objectStore.get(id);\r\n      const request = objectStore.add(clientt);\r\n      request.onsuccess = (event) => {\r\n        console.log('saved in DB, DB is now');\r\n        var message = \"Data saved successfuly\";\r\n        var btn = \"Continue\"\r\n        this.openAlertDialog(message, btn)\r\n      };\r\n\r\n    }\r\n  }\r\n\r\n  /////********** SEND CLIENT INFO FROM INDEXEDB TO MONGODB (ADD CLIENT) *********** //////\r\n  async sendItemsFromIndexedDb(id) {\r\n    console.log(\"sending items\");\r\n    // const allItems: any[] = await this.db[\"client\"].toArray();\r\n    var db; var transaction; var upgradeDb\r\n    var request = window.indexedDB.open(\"MyTestDatabase\", 10)\r\n    // upgradeDb.createObjectStore('client');\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log(\"success\")\r\n      console.log(db)\r\n      transaction = db.transaction(['client'], 'readwrite');\r\n      var objectStore = transaction.objectStore(\"client\");\r\n      var objectStoreRequest = objectStore.get(id);\r\n\r\n      console.log(\"@@@@@@@@@@\" + objectStoreRequest)\r\n      objectStoreRequest.onsuccess = event => {\r\n        var element = event.target.result\r\n        console.log(element)\r\n        this.SendClient(element).subscribe(res => {\r\n          console.log(res);\r\n          console.log(\"data sent succusfuly\")\r\n        })\r\n        var objectStoreRequest1 = objectStore.delete(id);\r\n        objectStoreRequest1.onsuccess = event => {\r\n          console.log(\"item deleted from indexedDb\");\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  /////********** SEND CLIENT INFO FROM INDEXEDB TO MONGODB (UPDATE CLIENT) *********** //////\r\n  async sendItemsUpdated(id) {\r\n    console.log(\"sending items\");\r\n    var db; var transaction; var upgradeDb\r\n    var request = window.indexedDB.open(\"MyTestDatabase\", 10)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log(\"success\")\r\n      console.log(db)\r\n      transaction = db.transaction(['update'], 'readwrite');\r\n      var objectStore = transaction.objectStore(\"update\");\r\n      var objectStoreRequest = objectStore.get(id);\r\n      console.log(\"@@@@@@@@@@\" + objectStoreRequest)\r\n      objectStoreRequest.onsuccess = event => {\r\n        var element = event.target.result\r\n        console.log(element)\r\n        this.updateClient(element).subscribe(res => {\r\n          console.log(res);\r\n          console.log(\"data sent succusfuly\")\r\n        })\r\n        var objectStoreRequest1 = objectStore.delete(id);\r\n        objectStoreRequest1.onsuccess = event => {\r\n          console.log(\"item deleted from indexedDb\");\r\n        }\r\n      };\r\n    }\r\n  }\r\n  /////********** SEND CLIENT INFO FROM INDEXEDB TO MONGODB (DELETE CLIENT) *********** //////\r\n  async sendItemsDeleted(id) {\r\n    console.log(\"sending items\");\r\n    var db; var transaction; var upgradeDb\r\n    var request = window.indexedDB.open(\"MyTestDatabase\", 10)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log(\"success\")\r\n      console.log(db)\r\n      transaction = db.transaction(['delete'], 'readwrite');\r\n      var objectStore = transaction.objectStore(\"delete\");\r\n      var objectStoreRequest = objectStore.get(id);\r\n      console.log(\"@@@@@@@@@@\" + objectStoreRequest)\r\n      objectStoreRequest.onsuccess = event => {\r\n        var element = event.target.result\r\n        console.log(element)\r\n        this.DeleteRequest(element).subscribe(res => {\r\n          console.log(res);\r\n          console.log(\"data sent succusfuly\")\r\n        })\r\n        var objectStoreRequest1 = objectStore.delete(id);\r\n        objectStoreRequest1.onsuccess = event => {\r\n          console.log(\"item deleted from indexedDb\");\r\n        }\r\n      };\r\n    }\r\n  }\r\n  //////************** CHECK IF THE NAVIGATOR IS ONLINE OR OFFLINE *********///////\r\n  private registerToEvents(onlineOffline: OnlineOfflineServiceService) {\r\n    onlineOffline.connectionChanged.subscribe(online => {\r\n      console.log(online);\r\n      if (online) {\r\n        console.log('went online');\r\n        console.log('sending all stored items');\r\n        var message = \"went online, sending all stored items\";\r\n        var btn = \"Ok\"\r\n        this.openAlertDialog(message, btn)\r\n      } else {\r\n        console.log('went offline, storing in indexdb');\r\n        var message = \"went offline, storing in indexdb\";\r\n        var btn = \"Ok\"\r\n        this.openAlertDialog(message, btn)\r\n      }\r\n    });\r\n  }\r\n  /////////////////////////////////////////////////////////////\r\n\r\n  openAlertDialog(msg, btn) {\r\n    const dialogRef = this.dialog.open(AlertDialogComponent, {\r\n      data: {\r\n        message: msg,\r\n        buttonText: {\r\n          ok: btn,\r\n        }\r\n      }\r\n    });\r\n  }\r\n  ////************ GET DATA BY ID FROM INDEXEDB (ADD CLIENT) *********///////\r\n  getShow() {\r\n    var list = []\r\n    var transaction\r\n    var request = window.indexedDB.open(\"MyTestDatabase\", 10)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      this.db = event.target.result;\r\n      console.log(\"success\")\r\n      console.log(this.db)\r\n      transaction = this.db.transaction(['client'], 'readwrite');\r\n      var objectStore = transaction.objectStore(\"client\");\r\n      var objectStoreRequest = objectStore.getAll();\r\n      objectStoreRequest.onsuccess = function (event) {\r\n        var all = event.target.result\r\n        all.forEach(element => {\r\n          console.log(\"---\")\r\n          var elm = element.UUid\r\n          console.log(elm)\r\n          list.push(elm)\r\n          console.log(list)\r\n        });\r\n\r\n      }\r\n    };\r\n    return list\r\n  }\r\n\r\n  ////************ GET DATA BY ID FROM INDEXEDB (UPDATE CLIENT) *********///////\r\n  getID() {\r\n    var list = []\r\n    var transaction\r\n    var request = window.indexedDB.open(\"MyTestDatabase\", 10)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      this.db = event.target.result;\r\n      console.log(\"success\")\r\n      console.log(this.db)\r\n      transaction = this.db.transaction(['update'], 'readwrite');\r\n      var objectStore = transaction.objectStore(\"update\");\r\n      var objectStoreRequest = objectStore.getAll();\r\n\r\n      objectStoreRequest.onsuccess = function (event) {\r\n        var all = event.target.result\r\n        all.forEach(element => {\r\n          console.log(\"---\")\r\n          var elm = element.UUid\r\n          console.log(elm)\r\n          list.push(elm)\r\n          console.log(list)\r\n        });\r\n      }\r\n    };\r\n    return list\r\n  }\r\n\r\n  ////************ GET DATA BY ID FROM INDEXEDB (DELETE CLIENT) *********///////\r\n  getIDdelete() {\r\n    var list = []\r\n    var transaction\r\n    var request = window.indexedDB.open(\"MyTestDatabase\", 10)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      this.db = event.target.result;\r\n      console.log(\"success\")\r\n      console.log(this.db)\r\n      transaction = this.db.transaction(['delete'], 'readwrite');\r\n      var objectStore = transaction.objectStore(\"delete\");\r\n      var objectStoreRequest = objectStore.getAll();\r\n      objectStoreRequest.onsuccess = function (event) {\r\n        var all = event.target.result\r\n        all.forEach(element => {\r\n          console.log(\"---\")\r\n          var elm = element.UUid\r\n          console.log(elm)\r\n          list.push(elm)\r\n          console.log(list)\r\n        });\r\n      }\r\n    };\r\n    return list\r\n  }\r\n  //////********** VALIDATE AUDIT INFO BACKOFFICE *******////////\r\n\r\n  validateAuditorInfo(info) {\r\n    console.log(\"#############################\")\r\n    console.log(info)\r\n    return this.http.post<any>(this._validate, info);\r\n  }\r\n\r\n  ////////////////////////////////////////////////////////\r\n\r\n  setCurrentClientInfo(client: any) {\r\n    this.currentClient = client;\r\n    console.log('***************************' + this.currentClient.geometry.properties.NomPrenom)\r\n  }\r\n\r\n  getClientInfo() {\r\n    return this.currentClient;\r\n  }\r\n\r\n  //////////////////\r\n  getClientByID(id) {\r\n    console.log('id' + id);\r\n    return this.http.get(this._getClientByID + '/' + id);\r\n  }\r\n  \r\n  ///////////////////\r\n\r\n  getPosition(position) {\r\n    if (Object.keys(position)[0] === \"Map\") {\r\n      this.MyPosition = position.Map;\r\n      this.Raduis = position.Raduis;\r\n    };\r\n    if (Object.keys(position)[0] === \"Client\") {\r\n      this.PositionClient = position.Client;\r\n\r\n    }\r\n    if ((Object.keys(position)[0] === \"MapUp\") && (this.PositionClient != null)) {\r\n\r\n      console.log(\"MyPosition Updated \" + new L.LatLng(position.MapUp[0], position.MapUp[1]));\r\n\r\n      this.MyPosition = new L.LatLng(position.MapUp[0], position.MapUp[1]);\r\n      this.Raduis = position.Raduis;\r\n      this.Distance = this.PositionClient.distanceTo(this.MyPosition).toFixed(2);\r\n      console.log(\"Distance Up :\" + this.Distance);\r\n      console.log(\"Raduis Up :\" + this.Raduis);\r\n\r\n    }\r\n    if (this.PositionClient != null) {\r\n      console.log(\"MyPosition \" + this.MyPosition);\r\n\r\n      console.log(\"Pointposition \" + this.PositionClient);\r\n\r\n      this.Distance = this.PositionClient.distanceTo(this.MyPosition).toFixed(2);\r\n      console.log(\"Distance :\" + this.Distance);\r\n      console.log(\"Raduis :\" + this.Raduis);\r\n\r\n    }\r\n  }\r\n\r\n  DeleteRequest(data){\r\n    console.log(\"$$$$$$$$$$$$$$$$$$$$$$$$$$$$\")\r\n    \r\n\r\n    console.log(data)\r\n    console.log(\"DeleteClientByID\"+data);\r\n    return this.http.post(this._Delete+\"DeleteRequest\",data);\r\n  }\r\n\r\n  ReadVideo(id){\r\n  console.log(\"DeleteClientByID\"+id);\r\n\r\n  return this.http.get(this._Delete+\"ReadVideo/\"+id);\r\n  }\r\n\r\n//   getPosition(position){\r\n//     if(Object.keys(position)[0]===\"Map\"){\r\n//     this.MyPosition=position.Map;\r\n//     this.Raduis=position.Raduis;\r\n//   };\r\n//     if(Object.keys(position)[0]===\"Client\"){\r\n//     this.PositionClient=position.Client;\r\n\r\n//   }\r\n//   if((Object.keys(position)[0]===\"MapUp\")&&(this.PositionClient!=null)){\r\n\r\n//     console.log(\"MyPosition Updated \"+ new L.LatLng(position.MapUp[0], position.MapUp[1]));\r\n\r\n//     this.MyPosition=new L.LatLng(position.MapUp[0], position.MapUp[1]);\r\n//     this.Raduis=position.Raduis;\r\n//     this.Distance=this.PositionClient.distanceTo(this.MyPosition).toFixed(2);\r\n//     console.log(\"Distance Up :\"+this.Distance );\r\n//     console.log(\"Raduis Up :\"+this.Raduis );\r\n    \r\n//   }\r\n//   if(this.PositionClient!=null){\r\n// console.log(\"MyPosition \"+this.MyPosition);\r\n\r\n//   console.log(\"Pointposition \"+this.PositionClient);\r\n\r\n//     this.Distance=this.PositionClient.distanceTo(this.MyPosition).toFixed(2);\r\n//     console.log(\"Distance :\"+this.Distance );\r\n//     console.log(\"Raduis :\"+this.Raduis );\r\n\r\n//   }\r\n  \r\n//     // if(this.Distance<=this.Raduis) {\r\n//     // console.log(\"The point into the cercle\")\r\n//     // //this.getDistance();\r\n//     // return this.Distance;\r\n//     //}\r\n//   }\r\n  ActiveTheButton(){\r\n    if(this.Distance<=this.Raduis) {\r\n      //console.log(\"The point into the cercle\")\r\n      return false;\r\n    }\r\n    return true\r\n  }\r\n\r\n  getDistance(){\r\n    //console.log(\"Distance2 :\"+this.Distance );\r\n    return this.Distance;\r\n\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////////\r\n\r\n  private baseUrl = 'http://localhost:3000/api1';\r\n  \r\n  upload(file: File): Observable<HttpEvent<any>> {\r\n    const formData: FormData = new FormData();\r\n\r\n    formData.append('file', file);\r\n    console.log(formData)\r\n\r\n    const req = new HttpRequest('POST', `${this.baseUrl}/upload`, formData, {\r\n      reportProgress: true,\r\n      responseType: 'json'\r\n    });\r\n    console.log(req)\r\n\r\n    return this.http.request(req);\r\n   \r\n  }\r\n\r\n  getFiles(): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/files`);\r\n  }\r\n\r\n  deleteFiles(): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/deletefile`);\r\n  }\r\n\r\n  //****************************** */\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ClientInfoComponent } from '../client-info/client-info.component';\r\nimport { ClientsService } from '../clients.service';\r\n\r\n@Component({\r\n  selector: 'app-clients',\r\n  templateUrl: './clients.component.html',\r\n  styleUrls: ['./clients.component.css']\r\n})\r\n\r\nexport class ClientsComponent implements OnInit {\r\n\r\n  ////**********VARIABLE'S DECLARATION ******/////\r\n  clients = [];\r\n  version = 6;\r\n  showFilterage = true\r\n  dialogRef: MatDialogRef<ClientInfoComponent>;\r\n  sectorNames = [];\r\n  loggedUser;\r\n  NomPrenom;\r\n  typePDVselected;\r\n  detailType;\r\n  IdClient;\r\n  PhoneNumber;\r\n  PDVType;\r\n  sector;\r\n  deleteStatus;\r\n  validate;\r\n  nfc;\r\n\r\n  ////*********** CONSTRUCTOR ********///////////// \r\n\r\n  constructor(private _serviceClient: ClientsService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    this.loggedUser = JSON.parse(localStorage.getItem(\"user\"))\r\n  }\r\n  //////////////////////////////////////////////////\r\n\r\n  ///////********* INIT FUNCTION *********///////\r\n\r\n  ngOnInit(): void {\r\n    this.getDataSector()\r\n    console.log(\"############# sectors names########\")\r\n    console.log(this.sectorNames)\r\n\r\n    this.getAllClients()\r\n    console.log(this.clients)\r\n  }\r\n  \r\n  //////////////////////////////////////////////\r\n\r\n  ////*********** GET CLIENTS INFOS ***********/////\r\n  public getAllClients() {\r\n    let db; let transaction;\r\n    const request = window.indexedDB.open('off', this.version);\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log('Why didn\\'t you allow my web app to use IndexedDB?!');\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log('success');\r\n      console.log(db);\r\n      transaction = db.transaction(['data'], 'readwrite');\r\n      const objectStore = transaction.objectStore('data');\r\n      const objectStoreRequest = objectStore.getAll();\r\n      objectStoreRequest.onsuccess = event => {\r\n        const all = event.target.result;\r\n        all.forEach(element => {\r\n          console.log(\"******************\")\r\n          const elm = JSON.parse(element.Valeur);\r\n          var  Point = { _id: element._id, geometry: elm };\r\n          if(this.loggedUser.role=='Admin' || this.loggedUser.role=='Back Office'){\r\n            console.log(\"deleted\")\r\n            console.log(this.loggedUser.role)\r\n            this.clients.push(Point);\r\n            console.log(Point.geometry.properties.status);\r\n         }\r\n         else if((this.loggedUser.role=='Seller' || this.loggedUser.role=='Auditor') && Point.geometry.properties.status!=\"deleted\"){\r\n          this.clients.push(Point);\r\n          console.log(this.loggedUser.role)\r\n          console.log(Point.geometry.properties.status);\r\n         }\r\n\r\n         \r\n\r\n        });\r\n\r\n      };\r\n    };\r\n  }\r\n  //////////////////////////////////////////////////////////\r\n\r\n  ///////*********** GET SECTOR'S DATE *****************///////\r\n\r\n  public getDataSector() {\r\n    let db; let transaction;\r\n    const request = window.indexedDB.open('off', this.version);\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log('Why didn\\'t you allow my web app to use IndexedDB?!');\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log('success');\r\n      console.log(db);\r\n      transaction = db.transaction(['sector'], 'readwrite');\r\n      const objectStore = transaction.objectStore('sector');\r\n      const objectStoreRequest = objectStore.getAll();\r\n      objectStoreRequest.onsuccess = event => {\r\n        const all = event.target.result;\r\n        all.forEach(element => {\r\n          console.log('---');\r\n          const elm = JSON.parse(element.Valeur);\r\n          this.sectorNames.push(elm.properties.idSecteur)\r\n          //this.AllSecteurs.push(elm.idSecteur);\r\n        });\r\n      };\r\n    };\r\n  }\r\n  /////////////////////////////////////////////////////////////////\r\n\r\n  openDialog(content) {\r\n    this.dialogRef = this.dialog.open(ClientInfoComponent, { data: content });\r\n  }\r\n\r\n}\r\n","<div class=\"clients_container\">\r\n    <div class=\"filtrage-container\">\r\n        <!-- <div class=\"filter1\"> -->\r\n            <div class=\"field\">\r\n                <mat-form-field>\r\n                    <mat-label>Id Client</mat-label> \r\n                    <input matInput placeholder=\"Typing...\" [(ngModel)]=\"IdClient\"/>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n                <mat-form-field>\r\n                    <mat-label>Phone Number</mat-label>\r\n                    <input matInput placeholder=\"+212\" [(ngModel)]=\"PhoneNumber\"/>\r\n                </mat-form-field>\r\n            </div>\r\n            \r\n            <div class=\"field\">\r\n                <mat-form-field>\r\n                    <mat-select placeholder=\"PDV Type\" panelClass=\"selectPanel2\" [(ngModel)]=\"PDVType\" [(value)]=\"typePDVselected\">\r\n                        <mat-option value=\"\">All</mat-option>\r\n                        <mat-option value=\"Detail\">Detail</mat-option>\r\n                        <mat-option value=\"Gros\">Gros</mat-option>\r\n                        <mat-option value=\"Demi Gros\">Demi Gros</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"field\" *ngIf=\"typePDVselected == 'Detail'\">\r\n                <mat-form-field>\r\n                    <mat-select placeholder=\"PDV Detail Type*\" panelClass=\"selectPanel2\" [(ngModel)]=\"detailType\">\r\n                        <mat-option value=\"\">All</mat-option>\r\n                        <mat-option value=\"Alimentation\">Alimentation</mat-option>\r\n                        <mat-option value=\"Superette\">Superette</mat-option>\r\n                        <mat-option value=\"Aattar\">Aattar</mat-option>\r\n                        <mat-option value=\"Fruits sec\">Fruits sec</mat-option>\r\n                        <mat-option value=\"Boundif\">Boundif</mat-option>\r\n                        <mat-option value=\"Parfumerie\">Parfumerie</mat-option>\r\n                        <mat-option value=\"Kioske\">Kioske</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            \r\n            <div class=\"field\">\r\n                <mat-form-field>\r\n                    <mat-select placeholder=\"NFC\" panelClass=\"selectPanel2\" [(ngModel)]=\"nfc\" >\r\n                        <mat-option value=\"\">Default</mat-option>\r\n                        <mat-option value=\"purple\">Installed</mat-option>\r\n                        <mat-option value=\"pink\">NFC Refused</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n                <mat-form-field>\r\n                    <mat-select placeholder=\"Back Office Validation\" panelClass=\"selectPanel2\" [(ngModel)]=\"validate\" >\r\n                        <mat-option value=\"\">Default</mat-option>\r\n                        <mat-option value=\"green\">Validated</mat-option>\r\n                        <mat-option value=\"black\">Refused</mat-option>\r\n                        <mat-option value=\"purple\">Waiting</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n                <mat-form-field>\r\n                    <mat-select placeholder=\"Sector\" panelClass=\"selectPanel2\" [(ngModel)]=\"sector\">\r\n                        <mat-option value=\"\">All</mat-option>\r\n                       <div *ngFor=\"let name of sectorNames\">\r\n                        <mat-option value=\"{{name}}\">{{name}}</mat-option>\r\n                       </div>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n                <mat-form-field>\r\n                    <mat-select placeholder=\"Delete\" panelClass=\"selectPanel2\" [(ngModel)]=\"deleteStatus\">\r\n                        <mat-option value=\"yellow\">Deleted</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n        <!-- </div> -->\r\n\r\n    </div>\r\n\r\n    <div class=\"clients-list\">\r\n        <!-- *ngFor=\"let client of clients\" -->\r\n        <div *ngFor=\"let client of clients.slice().reverse() | filter: IdClient | filter: PhoneNumber | filter: PDVType | filter: detailType | filter: sector | filter: validate | filter: nfc | filter: deleteStatus\"\r\n            class=\"card-container\">\r\n            <mat-card (click)=\"openDialog(client)\">\r\n                <img mat-card-image src=\"{{client.geometry.properties.PVP}}\" alt=\"\"\r\n                    *ngIf=\"client.geometry.properties.PVP; else nfcPhoto\">\r\n\r\n                <ng-template #nfcPhoto>\r\n                    <img mat-card-image src=\"assets/images/blank.jpg\" alt=\"\">\r\n                </ng-template>\r\n\r\n                <mat-card-content class=\"card-content\">\r\n                    <p><span>Id:</span> {{client._id}}</p> <label *ngIf=\"client.geometry.properties.status=='deleted'\" style=\"background-color: #ee5f54;\">Deleted</label>\r\n                    <p><span>Name:</span> {{client.geometry.properties.NomPrenom}}</p>\r\n                    <p><span>PDV type:</span> {{client.geometry.properties.TypeDPV}}</p>\r\n                    <p><span>Sector:</span> {{client.geometry.properties.Code_Secteur_OS}}</p>\r\n                    <div class=\"nfc\">\r\n                        NFC\r\n                        <mat-icon *ngIf=\"!client.geometry.properties.codeQR \" [ngStyle]=\"{'color':'#FACF37'}\">\r\n                            indeterminate_check_box</mat-icon>\r\n                        <mat-icon *ngIf=\"client.geometry.properties.codeQR \" [ngStyle]=\"{'color':'#27AE61'}\">check_box\r\n                        </mat-icon>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-confirmation-dialog',\r\n  templateUrl: './confirmation-dialog.component.html',\r\n  styleUrls: ['./confirmation-dialog.component.css']\r\n})\r\nexport class ConfirmationDialogComponent implements OnInit {\r\n\r\n  public confirmMessage:string;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ConfirmationDialogComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n\r\n<mat-dialog-content>\r\n\t<p>\r\n\t\t{{confirmMessage}}\r\n\t</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"center\">\r\n\t<button mat-raised-button (click)=\"dialogRef.close(false)\">Cancel</button>\r\n\t<button mat-raised-button style=\"background-color:#27AE61; color: white;\" (click)=\"dialogRef.close(true)\"\r\n\t\ttabindex=\"1\">Confirm</button>\r\n</mat-dialog-actions>","import { Component, OnInit, AfterViewInit, ViewChild, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef } from '@angular/core';\r\nimport { Observable, Subject } from \"rxjs\";\r\nimport { interval } from 'rxjs';\r\nimport * as L from 'leaflet';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { ClientsService } from '../clients.service';\r\nimport { ThrowStmt } from '@angular/compiler';\r\nimport { OnlineOfflineServiceService } from '../online-offline-service.service';\r\n\r\ndeclare var MediaRecorder: any;\r\n@Component({\r\n  selector: 'app-delete-client',\r\n  templateUrl: './delete-client.component.html',\r\n  styleUrls: ['./delete-client.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class DeleteClientComponent implements AfterViewInit {\r\n\r\n  // video variables\r\n  @ViewChild('recordedVideo') recordVideoElementRef: ElementRef;\r\n  @ViewChild('video') videoElementRef: ElementRef;\r\n\r\n  videoElement: HTMLVideoElement;\r\n  recordVideoElement: HTMLVideoElement;\r\n  mediaRecorder: any;\r\n  recordedBlobs=[]\r\n  isRecording: boolean = false;\r\n  downloadUrl: string;\r\n  stream: MediaStream;\r\n  showVideo = false\r\n\r\n  \r\n\r\n  list = []\r\n  Status;\r\n  hide;\r\n  percentage = 0;\r\n  acc = 1222000;\r\n  inter;\r\n  map;\r\n  lat = 33.2607691\r\n  lon = -7.6222771\r\n  clientInfos = null\r\n  latclt\r\n  lonclt\r\n  show\r\n  raison\r\n  selected\r\n  checkInfos;\r\n  // photo\r\n  user = JSON.parse(localStorage.getItem(\"user\"));\r\n  \r\n  showWebcam = false\r\n  private trigger: Subject<void> = new Subject<void>();\r\n  public webcamImage = null;\r\n  PDVImage\r\n\r\n  constructor(\r\n    private readonly onlineOfflineService: OnlineOfflineServiceService,\r\n    private router: Router,\r\n    private clientService: ClientsService\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n\r\n  }\r\n\r\n  startRecording() {\r\n    this.recordedBlobs = [];\r\n    let options: any = { mimeType: 'video/webm' };\r\n\r\n    try {\r\n      this.mediaRecorder = new MediaRecorder(this.stream, options);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    this.mediaRecorder.start(); // collect 100ms of data\r\n    this.isRecording = !this.isRecording;\r\n    this.onDataAvailableEvent();\r\n    this.onStopRecordingEvent();\r\n  }\r\nthestream;\r\n\r\n  stopRecording() {\r\n    this.mediaRecorder.stop();\r\n    //   console.log(\"Strem:\"+ this.stream.getTracks()[0].stop())\r\n    //   console.log(\"blobs:\"+ this.recordedBlobs)\r\n\r\n    //   this.thestream=this.stream.getTracks()[0].stop()\r\n    //   var blob = new Blob(this.recordedBlobs, {type: \"video/webm\"});\r\n    // var url = (window.URL || window.webkitURL).createObjectURL(blob);\r\n    // console.log(\"!!!\"+url)\r\n    // console.log(\"!!!\"+blob)\r\n\r\n    this.isRecording = !this.isRecording;\r\n    console.log('Recorded Blobs: ', this.recordedBlobs);\r\n  }\r\n\r\n  playRecording() {\r\n    if (!this.recordedBlobs || !this.recordedBlobs.length) {\r\n      console.log('cannot play.');\r\n      return;\r\n    }\r\n    this.recordVideoElement.play();\r\n  }\r\ndataV;\r\ntext;\r\n\r\n  onDataAvailableEvent() {\r\n    try {\r\n      this.mediaRecorder.ondataavailable = (event: any) => {\r\n        if (event.data && event.data.size > 0) {\r\n          this.recordedBlobs.push(event.data);\r\n      \r\n\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  Video;\r\n  fd;\r\n  onStopRecordingEvent() {\r\n    try {\r\n       this.mediaRecorder.onstop = async (event: Event) => {\r\n         const videoBuffer = new Blob(this.recordedBlobs, {\r\n          type: 'video/webm'\r\n        });\r\n        console.log(\"==========================\")\r\n        console.log(videoBuffer.size)\r\n        console.log(this.recordedBlobs)\r\n        console.log(\"==========================\")\r\n\r\n        console.log(this.recordedBlobs.length)\r\n\r\n        this.Video=await videoBuffer.arrayBuffer();\r\n        console.log(\"==========================\")\r\n\r\n        var reader = new FileReader();\r\n        reader.readAsDataURL(videoBuffer); \r\n        reader.onloadend =async ()=> {\r\n        var base64data = reader.result;                \r\n        console.log(base64data); \r\n        \r\n        this.Video=base64data;\r\n      }\r\n        // const reader = new FileReader();\r\n        //  reader.addEventListener('loadend', () => {\r\n        //      //reader.result //contains the contents of blob as a typed array\r\n        //      console.log(\"ééééééééé\")\r\n        //      console.log(reader.result)\r\n        //      //this.Video1={\"buffer\":reader.result}\r\n        //  });\r\n        //  reader.readAsArrayBuffer(videoBuffer)\r\n\r\n        //console.log(this.Video)\r\n\r\n        console.log(\"lllll\")\r\n\r\n        \r\n        \r\n        //console.log(uri)\r\n       this.downloadUrl = window.URL.createObjectURL(videoBuffer); // you can download with <a> tag\r\n\r\n        console.log(\"this.downloadUrl \")\r\n        console.log(this.downloadUrl);\r\n        this.recordVideoElement.src =this.downloadUrl;\r\n\r\n      };\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  displayVideo() {\r\n    this.showVideo = true\r\n    navigator.mediaDevices\r\n      .getUserMedia({\r\n        video: {\r\n          width: 360\r\n        }\r\n      })\r\n      .then(stream => {\r\n        this.videoElement = this.videoElementRef.nativeElement;\r\n        this.recordVideoElement = this.recordVideoElementRef.nativeElement;\r\n\r\n        this.stream = stream;\r\n        this.videoElement.srcObject = this.stream;\r\n      });\r\n\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.initMap();\r\n\r\n  }\r\n\r\n  showcheck() {\r\n    this.Status = true\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  private initMap(): void {\r\n\r\n    this.Status = true\r\n    this.testTimer()\r\n\r\n    this.map = L.map('map2', {\r\n      center: [this.lat, this.lon],\r\n      zoom: 14,\r\n      zoomControl: true\r\n    });\r\n\r\n    const tiles = L.tileLayer('https://map.novatis.tech/hot/{z}/{x}/{y}.png', {\r\n      maxZoom: 30,\r\n      minZoom: 0\r\n    });\r\n\r\n    tiles.addTo(this.map);\r\n\r\n    var location_icon = L.icon({\r\n      iconUrl: \"assets/location.png\",\r\n      iconSize: [30, 30]\r\n    });\r\n    var marker = L.marker([this.lat, this.lon], { icon: location_icon })\r\n    this.inter = interval(1000).subscribe(x => {\r\n\r\n      if (navigator.geolocation) {\r\n        if (this.percentage == 100) {\r\n          this.inter.unsubscribe();\r\n          this.clientInfos.lat = this.latclt\r\n          this.clientInfos.lon = this.lonclt\r\n          //console.log(this.clientInfos)\r\n        }\r\n\r\n        var options = {\r\n          enableHighAccuracy: false,\r\n          timeout: 5000,\r\n          maximumAge: 2000\r\n        };\r\n        //console.log(this.percentage)\r\n        var geoId = navigator.geolocation.watchPosition((position: GeolocationPosition) => {\r\n\r\n          if (position) {\r\n            //console.log(\"Latitude: \" + position.coords.latitude +\r\n            // \" // Longitude: \" + position.coords.longitude);\r\n            var newlat = position.coords.latitude\r\n            var newLon = position.coords.longitude;\r\n\r\n            // if (position.coords.accuracy > 10) {\r\n            //   console.log(\"The GPS accuracy isn't good enough\");\r\n            // }\r\n            if (newlat != this.lat || newLon != this.lat) {\r\n              //console.log(\"nmi rah tbdl\")\r\n              // this.percentage=0\r\n              this.lat = newlat\r\n              this.lon = newLon\r\n              this.list.push(position)\r\n              //console.log(this.list)\r\n              //console.log(\"Accuracy:\"+position.coords.accuracy)\r\n\r\n              if (position.coords.accuracy < this.acc) {\r\n                //console.log(\"********** Accuracy:\"+position.coords.accuracy)\r\n                this.acc = position.coords.accuracy\r\n                this.lat = position.coords.latitude\r\n                this.lon = position.coords.longitude\r\n                this.latclt = position.coords.latitude\r\n                this.lonclt = position.coords.longitude\r\n              }\r\n              //console.log(this.lat)\r\n              //console.log(this.lon)\r\n              this.map.removeLayer(marker);\r\n              this.show = false\r\n              this.Status = true\r\n              marker = new (L.marker as any)([this.lat, this.lon], { icon: location_icon }).addTo(this.map);\r\n            }\r\n          }\r\n        },\r\n          (error: GeolocationPositionError) => console.log(error), options);\r\n        // console.log('Clear watch called');\r\n        // window.navigator.geolocation.clearWatch(geoId);\r\n      } else {\r\n        alert(\"Geolocation is not supported by this browser.\");\r\n      }\r\n    });\r\n  }\r\n\r\n  testTimer() {\r\n    this.percentage = 0\r\n    interval(300).subscribe(x => {\r\n      if (this.percentage < 100) {\r\n        this.percentage += 50\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  displayCam() {\r\n    this.showWebcam = !this.showWebcam;\r\n  }\r\n\r\n  get triggerObservable(): Observable<void> {\r\n    return this.trigger.asObservable();\r\n  }\r\n\r\n  handleImage(webcamImage): void {\r\n    console.info('received webcam image', webcamImage);\r\n    this.webcamImage = webcamImage;\r\n    this.PDVImage = webcamImage.imageAsDataUrl;\r\n  }\r\n\r\n  triggerSnapshot(): void {\r\n    this.trigger.next();\r\n  }\r\n\r\n  toggleWebcam() {\r\n    this.showWebcam = !this.showWebcam;\r\n  }\r\n\r\n  data =this.router.getCurrentNavigation().extras.state.dataClient\r\n  Video1;\r\n\r\n  Send(){\r\n\r\n    var photo;\r\n    \r\n    if(this.webcamImage==null) {photo=\"\"}else{photo=this.webcamImage}\r\n    this.checkInfos={\"data\": this.data,\"raison\":this.raison,status:\"Waiting\",\"video\":this.Video,\"user\":this.user._id,\"role\":this.user.role,\"Photo\":photo}\r\n\r\n    //var test=new Uint8Array(this.Video1  as ArrayBuffer)\r\n    if (!this.onlineOfflineService.isOnline) {\r\n      this.clientService.addTodoDelete(this.checkInfos)\r\n    } else {\r\n      this.clientService.DeleteRequest(this.checkInfos).subscribe(res => { console.log(res)\r\n      \r\n        this.router.navigate(['/map'])\r\n    })\r\n    }\r\n    console.log(\"uuuuuuuuuuuuuuu\")\r\n    //this.ReadV()\r\n  }\r\n\r\n    b64toBlob(dataURI) {\r\n      \r\n      var byteString = atob(dataURI.split(',')[1]);\r\n      var ab = new ArrayBuffer(byteString.length);\r\n      var ia = new Uint8Array(ab);\r\n      \r\n      for (var i = 0; i < byteString.length; i++) {\r\n          ia[i] = byteString.charCodeAt(i);\r\n      }\r\n      return new Blob([ab], { type: 'video/webm' });\r\n  }\r\n\r\n  content;\r\n    ReadVideo(){\r\n      console.log(this.data._id)\r\n      this.clientService.ReadVideo(this.data._id).subscribe(res=>{\r\n      var blob = this.b64toBlob(res)\r\n      this.downloadUrl = window.URL.createObjectURL(blob);\r\n      console.log(\"this.downloadUrl\")\r\n      console.log(this.downloadUrl);\r\n      this.recordVideoElement.src =this.downloadUrl;\r\n      // console.log(\"resVideo\")\r\n      // console.log(res)\r\n     })  \r\n      //console.log(\"-------------------------------------  Read the video from the Database  -------------\")\r\n \r\n    \r\n\r\n  }\r\n  \r\n  \r\n   recorderOnDataAvailable(event) {\r\n    if (event.data.size == 0) return;\r\n    this.recordedBlobs.push(event.data);\r\n  }\r\n\r\n\r\n  // data = this.router.getCurrentNavigation().extras.state.dataClient\r\n\r\n  // Send() {\r\n  //   // console.log(\"dataV:\"+ this.dataV )\r\n  //   // console.log(\"video:\"+ this.recordVideoElement.src)\r\n  //   // console.log(\"video 2:\"+Object.keys(this.mediaRecorder))\r\n  //   // console.log(\"raison :\"+this.raison)\r\n  //   // console.log(\"data :\"+this.data._id)\r\n  //   // console.log(\"videoBuffer:\"+this.Video)\r\n  //   //this.clientService.DeleteClientByID(this.data._id).subscribe(res=>{console.log(res)})\r\n  //   this.checkInfos = { \"data\": this.data, \"raison\": this.raison, \"video\": this.stream, \"Photo\": this.webcamImage }\r\n  //   if (!this.onlineOfflineService.isOnline) {\r\n  //     this.clientService.addTodoDelete(this.checkInfos)\r\n  //   } else {\r\n  //     this.clientService.DeleteRequest(this.checkInfos).subscribe(res => { console.log(res) })\r\n  //   }\r\n  // }\r\n  \r\n  // ReadV() {\r\n  //   console.log(this.clientService.ReadV().subscribe(res => this.recordVideoElement.src = res.toString()))\r\n  // }\r\n\r\n\r\n}","<div class=\"content-body\">\r\n    <ng-container *ngIf=\"percentage == 100; else elseTemplate\">\r\n        <p>Position Fixed</p>\r\n    </ng-container>\r\n    <ng-template #elseTemplate>\r\n        <p>Fixing Position...</p>\r\n    </ng-template>\r\n\r\n    <div>\r\n        <pre>pos collectés: {{list.length}}</pre>\r\n        <pre>Accuracy: {{acc}}</pre>\r\n    </div>\r\n\r\n    <div ng-app ng-controller=\"ApplicationController\" class=\"progress-cantainer\">\r\n        <mat-progress-bar mode=\"determinate\" [value]=\"percentage\"></mat-progress-bar>\r\n        <span style=\"position: absolute; top: 0em;\" [ngStyle]=\"{'left': percentage + '%'}\">{{percentage}}%</span>\r\n    </div>\r\n\r\n    <div class=\"map-container\">\r\n        <div id=\"map2\"></div>\r\n    </div>\r\n\r\n    <div class=\"action-btns\">\r\n        <button mat-button class=\"btn-yellow\">Recalculate my position</button>\r\n        <button mat-button class=\"btn-yellow\" (click)=\"showcheck()\"\r\n            [disabled]=\"(percentage!=100) ||  !Status\">Next</button>\r\n    </div>\r\n\r\n    <div class=\"container\" *ngIf=\"hide\">\r\n        <div class=\"checkcodes-fields\">\r\n\r\n            <div class=\"scan-field\">\r\n                <label class=\"input-label\">Delete Raison* </label>\r\n                <mat-form-field>\r\n                    <mat-select panelClass=\"selectPanel2\" [(ngModel)]=\"raison\" [(value)]=\"selected\">\r\n                        <mat-option value=\"Not exist\">Not exist</mat-option>\r\n                        <mat-option value=\"Out of category\">Out of category</mat-option>\r\n                        <mat-option value=\"End of activity\">End of activity</mat-option>\r\n                        <mat-option value=\"Duplicate\">Duplicate</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            \r\n\r\n            <div class=\"scan-field\" *ngIf=\"selected=='Not exist'\">\r\n                <label class=\"input-label\">PDV location video : </label>\r\n                <div>\r\n\r\n                    <button mat-button class=\"btn-green\" *ngIf=\"!isRecording\" (click)=\"displayVideo()\">Record Video</button>\r\n\r\n                </div>\r\n            </div>\r\n            \r\n\r\n            <div class=\"scan-field\" *ngIf=\"selected=='Out of category' || selected=='End of activity' \">\r\n                <label class=\"input-label\">PDV photo : </label>\r\n                <div>\r\n                    <button mat-button class=\"btn-green\" (click)=\"displayCam()\"><mat-icon>camera_alt</mat-icon></button>\r\n                </div>\r\n            </div> \r\n            <div  *ngIf=\"showWebcam\" class=\"Scan-container\">\r\n                <webcam [height]=\"200\"\r\n                        [width]=\"500\"\r\n                        [trigger]=\"triggerObservable\"\r\n                        (imageCapture)=\"handleImage($event)\">\r\n                </webcam>\r\n                <div class=\"reas-nfc\">\r\n                    <button mat-button class=\"btn-green\"  (click)=\"triggerSnapshot()\">Click Here</button>\r\n                    <button mat-button class=\"btn-green\"  (click)=\"toggleWebcam()\">Close Camera</button>\r\n                </div>\r\n            </div>\r\n            <div  *ngIf=\"webcamImage\" class=\"Scan-container\">\r\n        \r\n                <div class=\"snapshot\">\r\n                  <img [height]=\"200\"\r\n                       [width]=\"200\" [src]=\"webcamImage.imageAsDataUrl\"/>\r\n                </div>\r\n              </div>     \r\n        </div> \r\n        \r\n        <div class=\"scan-field\" *ngIf=\"showVideo\"> \r\n            <label class=\"input-label\">PDV location video : </label>\r\n            <div style=\"text-align:center\">\r\n                <video class=\"video\" #video autoplay controls></video>\r\n                <span class=\"m-1\"></span>\r\n                <video class=\"video\" style=\"width:360 !important;\" controls #recordedVideo></video>\r\n                <br>\r\n                <button class=\"btn btn-primary btn-lg\" *ngIf=\"!isRecording\" (click)=\"startRecording()\">Start Recording</button>\r\n                <button class=\"btn btn-warning btn-lg\" *ngIf=\"isRecording\" (click)=\"stopRecording()\">Stop Recording</button>\r\n            </div>\r\n        </div>\r\n        <button mat-button class=\"btn-yellow\" (click)=\"Send()\">Send</button>\r\n\r\n        <button mat-button class=\"btn-yellow\" (click)=\"ReadVideo()\">Read</button>\r\n\r\n        \r\n        \r\n    <!-- </div> \r\n    <label class=\"input-label\">PDV location video2 : </label>\r\n    <div style=\"text-align:center\">\r\n        <video class=\"video\" #video autoplay controls></video>\r\n        <span class=\"m-1\"></span>\r\n        <video class=\"video\" style=\"width:360 !important;\" controls #recordedVideo></video>\r\n        <br>\r\n        <button class=\"btn btn-primary btn-lg\" *ngIf=\"!isRecording2\" (click)=\"startRecording2()\">Start Recording</button>\r\n        <button class=\"btn btn-warning btn-lg\" *ngIf=\"isRecording2\" (click)=\"stopRecording2()\">Stop Recording</button>\r\n    </div>  -->\r\n    \r\n</div>  \r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-extract',\r\n  templateUrl: './extract.component.html',\r\n  styleUrls: ['./extract.component.css']\r\n})\r\nexport class ExtractComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>extract works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { Inject } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-full-image',\r\n  templateUrl: './full-image.component.html',\r\n  styleUrls: ['./full-image.component.css']\r\n})\r\nexport class FullImageComponent implements OnInit {\r\n\r\n  imageURL\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.imageURL = this.data;\r\n    console.log(\"~~~~~~~~~~~~~~~~~~~~~~~~~~ Image\" + this.imageURL)\r\n  }\r\n\r\n}\r\n","<img src=\"{{imageURL}}\" alt=\"\">\r\n","import { Injectable } from '@angular/core';\r\nimport { ClientsService } from './clients.service';\r\nimport * as geojson from 'geojson';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class IndexdbService {\r\n\r\n  db; transaction;\r\n  version = 6\r\n\r\n  /////************* CONSTRUCTOR ***********////////\r\n  constructor(private client: ClientsService) { }\r\n   //////////********* CREATE INDEXEDDB DATABASES  ********///////////\r\n  createDatabase() {\r\n    var request = window.indexedDB.open(\"off\", this.version)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onupgradeneeded = (event) => {\r\n      console.log(event.target)\r\n      this.db = request.result\r\n      console.log(\"upgrade\")\r\n      var objectStore = this.db.createObjectStore(\"data\", { keyPath: '_id' });\r\n      console.log(\"create Sector \")\r\n      var objectt = this.db.createObjectStore(\"sector\", { keyPath: '_id' });\r\n      console.log(objectt)\r\n    }\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      this.db = event.target.result;\r\n      console.log(this.db)\r\n    }\r\n  }\r\n\r\n  createDatabaseOffline() {\r\n    var request = window.indexedDB.open(\"MyTestDatabase\", 10)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onupgradeneeded = (event) => {\r\n      console.log(event.target)\r\n      this.db = request.result\r\n      console.log(\"upgrade\")\r\n      var objectStore = this.db.createObjectStore(\"client\", { keyPath: 'UUid' });\r\n      console.log(\"create client \")\r\n      var objectt = this.db.createObjectStore(\"update\", { keyPath: 'UUid' });\r\n      console.log(objectt)\r\n      console.log(\"create update \")\r\n      var objectt = this.db.createObjectStore(\"delete\", { keyPath: 'UUid' });\r\n      console.log(objectt)\r\n      console.log(\"create delete \")\r\n    }\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      this.db = event.target.result;\r\n      console.log(this.db)\r\n    }\r\n  }\r\n\r\n  ///////************** ADD ITEM INTO INDEXEDDB ****************////////////\r\n  AddItem() {\r\n    var costumer = { '_id': 123, Valeur: \"hafsa\" }\r\n    console.log(costumer)\r\n    var allclient = []\r\n    this.client.getAllClient().subscribe(res => {\r\n      res.forEach(element => {\r\n        var geo = { _id: element._id, Valeur: JSON.stringify(element.geometry) }\r\n        allclient.push(geo)\r\n        this.transaction = this.db.transaction(['data'], 'readwrite');\r\n        var objectStore = this.transaction.objectStore(\"data\");\r\n        var request = objectStore.add(geo)\r\n        request.onsuccess = function (event) {\r\n          console.log(\"done Synchronize\")\r\n        };\r\n      });\r\n    });\r\n  }\r\n\r\n  ///////************* DELETE CLIENTS DATA FROM INDEXEDDB ************////////\r\n  ClearData() {\r\n    var request = window.indexedDB.open(\"off\", this.version)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      this.db = event.target.result;\r\n      console.log(\"success inside Clear\")\r\n      console.log(this.db)\r\n      this.transaction = this.db.transaction(['data'], 'readwrite');\r\n      var objectStore = this.transaction.objectStore(\"data\");\r\n      var objectStoreRequest = objectStore.clear();\r\n      objectStoreRequest.onsuccess = function (event) {\r\n        console.log(\"Data Cleared\")\r\n      }\r\n    }\r\n  }\r\n\r\n  /////////*************** DELETE SECTOR'S DATA FROM INDEXEDDB ***********////////////\r\n  ClearDataSector() {\r\n    var request = window.indexedDB.open(\"off\", this.version)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      this.db = event.target.result;\r\n      console.log(\"success Sector inside Clear\")\r\n      console.log(this.db)\r\n      this.transaction = this.db.transaction(['sector'], 'readwrite');\r\n      var objectStore = this.transaction.objectStore(\"sector\");\r\n      var objectStoreRequest = objectStore.clear();\r\n      objectStoreRequest.onsuccess = function (event) {\r\n        console.log(\"Data Sector Cleared\")\r\n      }\r\n    }\r\n  }\r\n\r\n  /// ***** Not Used \r\n  public getDataClient(map, markercluster, icon) {\r\n    var request = window.indexedDB.open(\"off\", this.version)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      this.db = event.target.result;\r\n      console.log(\"success\")\r\n      console.log(this.db)\r\n      this.transaction = this.db.transaction(['data'], 'readwrite');\r\n      var objectStore = this.transaction.objectStore(\"data\");\r\n      var objectStoreRequest = objectStore.getAll();\r\n      objectStoreRequest.onsuccess = function (event) {\r\n        var all = event.target.result\r\n        all.forEach(element => {\r\n          console.log(\"---\")\r\n          var elm = JSON.parse(element.Valeur);\r\n          var Point = { _id: element._id, geometry: elm }\r\n          var geojsonPoint: geojson.Point = Point.geometry.geometry\r\n          var marker = L.geoJSON(geojsonPoint, {\r\n            pointToLayer: (point, latlon) => {\r\n              return L.marker(latlon, { icon: icon })\r\n            }\r\n          });\r\n          markercluster.addLayer(marker)\r\n          map.addLayer(markercluster);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ClientsService } from '../clients.service';\r\nimport { FileSelectDirective, FileUploader } from 'ng2-file-upload';\r\nimport { saveAs } from 'file-saver';\r\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-injection',\r\n  templateUrl: './injection.component.html',\r\n  styleUrls: ['./injection.component.css']\r\n})\r\nexport class InjectionComponent implements OnInit {\r\n\r\n  selectedFiles: FileList;\r\n  progressInfos = [];\r\n  message = '';\r\n\r\n  fileInfos: Observable<any>;\r\n\r\n\r\n  ngOnInit(): void {\r\n    // this.fileInfos = this.clientservice.getFiles();\r\n\r\n  }\r\n\r\n  constructor(private clientservice: ClientsService) {\r\n\r\n  }\r\n\r\n  selectFiles(event) {\r\n    this.progressInfos = [];\r\n    this.selectedFiles = event.target.files;\r\n  }\r\n\r\n  uploadFiles() {\r\n    this.message = '';\r\n    for (let i = 0; i < this.selectedFiles.length; i++) {\r\n      this.upload(i, this.selectedFiles[i]);\r\n    }\r\n    console.log(this.selectedFiles)\r\n  }\r\n\r\n  upload(idx, file) {\r\n    this.progressInfos[idx] = { value: 0, fileName: file.name };\r\n    this.clientservice.upload(file).subscribe(\r\n      event => {\r\n        if (event.type === HttpEventType.UploadProgress) {\r\n          this.progressInfos[idx].value = Math.round(100 * event.loaded / event.total);\r\n        }\r\n      },\r\n      err => {\r\n        this.progressInfos[idx].value = 0;\r\n        this.message = 'Could not upload the file:' + file.name;\r\n      });\r\n  }\r\n\r\n  runscript() {\r\n    this.fileInfos = this.clientservice.getFiles();\r\n  }\r\n\r\n  deletefile() {\r\n    this.fileInfos = this.clientservice.deleteFiles()\r\n    console.log(\"files deleted succussfully\")\r\n  }\r\n\r\n}\r\n","<!-- <link type=\"text/css\" rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" /> -->\r\n<div class=\"containe-ids\">\r\n    <label class=\"btn btn-default\">\r\n        <input type=\"file\" multiple (change)=\"selectFiles($event)\" />\r\n    </label>\r\n    <button class=\"btn-success\" [disabled]=\"!selectedFiles\" (click)=\"uploadFiles()\">\r\n        Upload\r\n    </button>\r\n    <button class=\"btn-red\" [disabled]=\"!selectedFiles\" (click)=\"runscript()\">\r\n        Run\r\n    </button>\r\n    <button class=\"btn-clear\" [disabled]=\"!selectedFiles\" (click)=\"deletefile()\">\r\n        Clear\r\n    </button>\r\n\r\n    <div *ngFor=\"let progressInfo of progressInfos\" class=\"mb-2\">\r\n        <span>{{ progressInfo.fileName }}</span>\r\n        <div class=\"progress\">\r\n            <mat-progress-bar mode=\"determinate\" [value]=\"progressInfo.value\"></mat-progress-bar>\r\n            <span attr.aria-valuenow=\"{{ progressInfo.value }}\"\r\n                [ngStyle]=\"{width: progressInfo.value + '%'}\">{{progressInfo.value}}%</span>\r\n            <!--\r\n            <div class=\"progress-bar\" role=\"progressbar\"\r\n                attr.aria-valuenow=\"{{ progressInfo.value }}\" aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                [ngStyle]=\"{ width: progressInfo.value + '%' }\">\r\n                {{ progressInfo.value }}%\r\n            </div> -->\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"alert alert-light\" role=\"alert\">{{ message }}</div>\r\n    \r\n</div>\r\n<div class=\"containe-ids\">\r\n    <div class=\"card\">\r\n        <div class=\"card-header\">List of Files</div>\r\n        <ul class=\"list-group list-group-flush\" *ngFor=\"let file of fileInfos | async\">\r\n            <li class=\"list-group-item\">\r\n                <a href=\"{{ file.url }}\">{{ file.name }}</a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'\r\nimport { AuthenticationService } from '../authentication.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SidebarMenuComponent } from '../sidebar-menu/sidebar-menu.component';\r\nimport { IndexdbService } from '../indexdb.service';\r\nimport { ClientsService } from '../clients.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n\r\n  hide: boolean = false;\r\n  version = 6\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private _auth: AuthenticationService,\r\n    private _router: Router,\r\n    private route: ActivatedRoute,\r\n    private client: ClientsService,\r\n    private index: IndexdbService) { }\r\n\r\n  ngOnInit() {\r\n    this.index.createDatabase()\r\n    this.index.createDatabaseOffline();\r\n  }\r\n\r\n  loginForm: FormGroup = this.fb.group({\r\n    email: ['', [Validators.required, Validators.email]],\r\n    password: ['', [Validators.required, Validators.minLength(6)]]\r\n  })\r\n\r\n  onLogin() {\r\n    if (!this.loginForm.valid) {\r\n      return;\r\n    } else {\r\n      var email = this.loginForm.value.email;\r\n      var password = this.loginForm.value.password;\r\n      console.log(email, password)\r\n      var user = {\r\n        'email': email,\r\n        'password': password\r\n      }\r\n      this._auth.getUserLogin(user,this.httpOptions).subscribe(\r\n        res => {\r\n          console.log(\"--------\")\r\n          console.log(res.status)\r\n          //console.log(res.status)\r\n          this.Response(res)\r\n        }\r\n       );\r\n    }\r\n  }\r\n  httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}), observe: 'response'}\r\n  ////******* Store Token and delegate to Home page *******////\r\n  Response(res) {\r\n    //console.log(res)\r\n    localStorage.setItem('token', res.Data.token)\r\n    localStorage.setItem(\"user\", JSON.stringify(res.Data.user))\r\n    console.log(this._auth.getToken())\r\n    localStorage.setItem(\"name\", res.Data.user.name)\r\n    ///******* GET DATA  ******/\r\n    this.PutDataClient()\r\n  }\r\n\r\n  PutDataClient() {\r\n    var db; var transaction\r\n    var request = window.indexedDB.open(\"off\", this.version)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log(\"success Login\")\r\n      var allclient = []\r\n      this.client.getAllClient().subscribe(res => {\r\n        res.forEach(element => {\r\n          var geo = { _id: element._id, Valeur: JSON.stringify(element.geometry) }\r\n          allclient.push(geo)\r\n          transaction = db.transaction(['data'], 'readwrite');\r\n          var objectStore = transaction.objectStore(\"data\");\r\n          var request = objectStore.add(geo)\r\n          request.onsuccess = function (event) {\r\n            console.log(\"done Adding login\")\r\n          };\r\n        });\r\n        this.PutDataSector()\r\n      });\r\n    }\r\n  }\r\n\r\n  PutDataSector() {\r\n    var db; var transaction\r\n    var request = window.indexedDB.open(\"off\", this.version)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log(\"success Sector Login\")\r\n      this.client.getAllSecteurs().subscribe(res => {\r\n        res.forEach(element => {\r\n          transaction = db.transaction(['sector'], 'readwrite');\r\n          var objectStore = transaction.objectStore(\"sector\");\r\n          var geo = { _id: element._id, Valeur: JSON.stringify(element.geometry) }\r\n          console.log(\"$sector login$\")\r\n          console.log(geo)\r\n          var request = objectStore.add(geo)\r\n          request.onsuccess = function (event) {\r\n            console.log(\"done Adding Sector login\")\r\n          };\r\n        });\r\n        this._router.navigate(['/map']).then(() => {\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n  <mat-card>\r\n    <mat-card-content>\r\n      <div class=\"header\">\r\n        <p>Sign in</p>\r\n      </div>\r\n      <form name=\"loginForm\" [formGroup]=\"loginForm\">\r\n        <div class=\"emailInput\">\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label>Email</mat-label>\r\n            <input formControlName=\"email\" matInput placeholder=\"Enter email address\" required />\r\n            <mat-error *ngIf=\"!loginForm.controls['email'].valid\">\r\n              Email is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <a class=\"text-link\" class=\"aLink\" routerLink=\"/auth/forgot-password\">Forgot Password?</a>\r\n          </span>\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label>Password</mat-label>\r\n            <input formControlName=\"password\" matInput [type]=\" hide ? 'password' : 'text'\" required />\r\n            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide Password'\"\r\n              [attr.aria-pressed]=\"hide\">\r\n              <mat-icon>\r\n                {{hide ? 'visibility_off' : 'visibility'}}\r\n              </mat-icon>\r\n            </button>\r\n            <mat-error *ngIf=\"!loginForm.controls['password'].valid\">\r\n              Password is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <button mat-flat-button color=\"primary\" (click)=\"onLogin()\">Sign in</button>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>","import { Component, AfterViewInit, HostListener } from '@angular/core';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\nimport * as geojson from 'geojson';\r\nimport { ClientsService } from '../clients.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ClientInfoComponent } from '../client-info/client-info.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { NgZone } from '@angular/core';\r\nimport * as turf from '@turf/turf';\r\nimport { IndexdbService } from '../indexdb.service';\r\nimport { AlertDialogComponent } from '../alert-dialog/alert-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.css']\r\n})\r\n\r\nexport class MapComponent implements AfterViewInit {\r\n  /// ****** constructor *****/\r\n  constructor(\r\n    private _serviceClient: ClientsService,\r\n    private _router: Router,\r\n    private zone: NgZone,\r\n    private aroute: ActivatedRoute,\r\n    private index: IndexdbService,\r\n    private dialog: MatDialog) {\r\n    //this.index.createDatabase();\r\n    this.user = JSON.parse(localStorage.getItem(\"user\"))\r\n  }\r\n\r\n  dialogRef: MatDialogRef<ClientInfoComponent>;\r\n  private map;\r\n  public content = null;\r\n  myCercle;\r\n  mySector = 'hello';\r\n  IDGeomerty;\r\n  icon = L.icon({\r\n    iconUrl: 'assets/green.png',\r\n    iconSize: [12, 12],\r\n  });\r\n  markersCluster = new L.MarkerClusterGroup();\r\n  markerClusterSector = new L.MarkerClusterGroup();\r\n  lat = 33.61041004;\r\n  lon = -7.527008504;\r\n  myMarker;\r\n  statusAddClient = false;\r\n  user;\r\n  AllSecteurs = [];\r\n  version = 6;\r\n  ///create map \r\n  private initMap(): void {\r\n    this.map = L.map('map', {\r\n      center: [this.lat, this.lon],\r\n      zoom: 10,\r\n      zoomControl: false\r\n    });\r\n    const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      maxZoom: 30,\r\n      minZoom: 0\r\n    });\r\n\r\n    tiles.addTo(this.map);\r\n    this.getDataClient();\r\n    this.getDataSector();\r\n    this.map.addLayer(this.markersCluster);\r\n    this.map.addControl(L.control.zoom({ position: 'bottomleft' }));\r\n\r\n  }\r\n\r\n  //////////////*** Init map ////////\r\n  ngAfterViewInit(): void {\r\n    this.initMap();\r\n    this.aroute.params.subscribe(params => {\r\n      if (params['lat']) {\r\n        console.log(\"laaaaaaaaaaaaaaaaaaaaaaat: \" + params['lat'])\r\n        console.log(\"loooooooooooooooong: \" + params['long'])\r\n        this.map.flyTo(new L.LatLng(params['lat'], params['long']), 18);\r\n      } else {\r\n        this.getLocation()\r\n      }\r\n    });\r\n  }\r\n ///*** get Location */\r\n radius=3\r\n  getLocation() {\r\n    // interval(1000).subscribe(x => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position: GeolocationPosition) => {\r\n        if (position) {\r\n          console.log('Latitude: ' + position.coords.latitude +\r\n            ' Longitude: ' + position.coords.longitude);\r\n          this.lat = position.coords.latitude;\r\n          this.lon = position.coords.longitude;\r\n          console.log(this.lat);\r\n          console.log(this.lon);\r\n          this.map.setView(new L.LatLng(this.lat, this.lon), 18, { animation: true });\r\n         if(this.myCercle!==undefined){\r\n          this.map.removeLayer( this.myCercle)\r\n         }\r\n         this.myCercle = L.circle([this.lat, this.lon], {color:\"blue\",fillColor:\"#cce6ff\",radius:this.radius});\r\n\r\n          this.myCercle.addTo(this.map);\r\n          \r\n          this._serviceClient.getPosition({\"Map\":new L.LatLng(this.lat, this.lon),\"Raduis\":this.radius});\r\n\r\n          if (this.myMarker != undefined) {\r\n            console.log(\"remove layer \")\r\n            this.map.removeLayer(this.myMarker)\r\n          }\r\n          this.myMarker = L.circleMarker([this.lat, this.lon], {\r\n            color: \"#163AE3 \",\r\n            fillOpacity: 1,\r\n            radius: 8.0\r\n          }).addTo(this.map);\r\n        }\r\n      },\r\n        (error: GeolocationPositionError) => console.log(error));\r\n    } else {\r\n      alert('Geolocation is not supported by this browser.');\r\n    }\r\n  }\r\n  ////***  Fly to location **/////\r\n  locate() {\r\n    this.getLocation()\r\n    this.map.flyTo(new L.LatLng(this.lat, this.lon), 18);\r\n    this.Insid();\r\n  }\r\n\r\n  // open dialog with client info\r\n  openDialog(content) {\r\n    this.dialogRef = this.dialog.open(ClientInfoComponent, { data: content });\r\n\r\n  }\r\n\r\n  //////////*********** put  Client Info from IndexDB *******//////////////\r\n\r\n  public getDataClient() {\r\n    let db; let transaction;\r\n    const request = window.indexedDB.open('off', this.version);\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log('Why didn\\'t you allow my web app to use IndexedDB?!');\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log('success');\r\n      console.log(db);\r\n      transaction = db.transaction(['data'], 'readwrite');\r\n      const objectStore = transaction.objectStore('data');\r\n      const objectStoreRequest = objectStore.getAll();\r\n      objectStoreRequest.onsuccess = event => {\r\n        const all = event.target.result;\r\n        all.forEach(element => {\r\n          var marker;\r\n          const elm = JSON.parse(element.Valeur);\r\n          const Point = { _id: element._id, geometry: elm };\r\n          var status=\"green\"\r\n          console.log(element._id)\r\n          if(Point.geometry.properties?.status!=undefined){\r\n            status=Point.geometry.properties.status\r\n          }\r\n      \r\n          console.log(\"status: \"+status)\r\n         \r\n          const geojsonPoint: geojson.Point = Point.geometry;\r\n          var iconClient = L.icon({ iconUrl: 'assets/'+status+'.png', iconSize: [10, 10] });\r\n           marker = L.geoJSON(geojsonPoint, {\r\n            pointToLayer: (point, latlon) => {\r\n              return L.marker(latlon, { icon:iconClient }); }\r\n          });\r\n         \r\n          if (Point.geometry.properties?.nfc != undefined) {\r\n            marker.on('click', () => {\r\n              this._serviceClient.getPosition({\"Client\":new L.LatLng(Point.geometry.geometry.coordinates[1],Point.geometry.geometry.coordinates[0])});\r\n              this.content = Point.geometry;\r\n              this.zone.run(() => this.openDialog(Point));\r\n            });\r\n         } else {\r\n          \r\n            //console.log(\"############# ici\"+Point.geometry.properties.Nom_Client)\r\n            marker.bindPopup('<h1> <b>Client Information</b></h1><p><b>Name:</b> ' + String(Point.geometry.properties.Nom_Client) + '</p><p><b>Sector Name: </b>' + String(Point.geometry.properties.Nom_du_Secteur) + '</p>');\r\n        }\r\n        if(status=='deleted' && (this.user.role ==\"Admin\" || this.user.role ==\"Back Office\") ){\r\n          console.log(\"deleted status \")\r\n          console.log(this.user.role)\r\n          this.markersCluster.addLayer(marker);\r\n        }else if(status!='deleted'){\r\n          this.markersCluster.addLayer(marker);\r\n        }\r\n        });\r\n\r\n      };\r\n    };\r\n  }\r\n  \r\n\r\n////////////******* Put Sector in Map  *****////////////////////////////////\r\n  public getDataSector() {\r\n    let db; let transaction;\r\n    const request = window.indexedDB.open('off', this.version);\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log('Why didn\\'t you allow my web app to use IndexedDB?!');\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log('success');\r\n      console.log(db);\r\n      transaction = db.transaction(['sector'], 'readwrite');\r\n      const objectStore = transaction.objectStore('sector');\r\n      const objectStoreRequest = objectStore.getAll();\r\n      objectStoreRequest.onsuccess = event => {\r\n        const all = event.target.result;\r\n        all.forEach(element => {\r\n          console.log('---');\r\n          const elm = JSON.parse(element.Valeur);\r\n          const Point = { _id: element._id, geometry: elm };\r\n          const marker = L.geoJSON(Point.geometry, { style: { color: '#CD9575', fillOpacity: 0.1 } });\r\n          marker.bindPopup(String(Point.geometry.properties.codeRegion));\r\n          marker.addTo(this.map);\r\n          this.markerClusterSector.addLayer(marker);\r\n          this.AllSecteurs.push({ coor: Point.geometry.geometry.coordinates, sector: Point.geometry.properties.idSecteur });\r\n        });\r\n      };\r\n    };\r\n  }\r\n\r\n  //////////////////********** Fill IndexDB after synchronize *******///////////////////////////\r\n  PutData() {\r\n    this.markersCluster.clearLayers();\r\n    this.index.ClearData();\r\n    let db; let transaction;\r\n    const request = window.indexedDB.open('off', this.version);\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log('Why didn\\'t you allow my web app to use IndexedDB?!');\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log('success Sync');\r\n      const allclient = [];\r\n      this._serviceClient.getAllClient().subscribe(res => {\r\n        res.forEach(element => {\r\n          const geo = { _id: element._id, Valeur: JSON.stringify(element.geometry) };\r\n          allclient.push(geo);\r\n          transaction = db.transaction(['data'], 'readwrite');\r\n          const objectStore = transaction.objectStore('data');\r\n          const request = objectStore.put(geo);\r\n          request.onsuccess = function (event) {\r\n            console.log('done Adding');\r\n          };\r\n        });\r\n        this.getDataClient();\r\n      });\r\n    };\r\n  }\r\n  /////////***** Fill in indexDB with Sector info ******///////\r\n  PutDataSector() {\r\n    let db; let transaction;\r\n    const request = window.indexedDB.open('off', this.version);\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log('Why didn\\'t you allow my web app to use IndexedDB?!');\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      console.log('success Login');\r\n      const allclient = [];\r\n      this._serviceClient.getAllSecteurs().subscribe(res => {\r\n        res.forEach(element => {\r\n          console.log('***sector***');\r\n          console.log(element);\r\n          const geo = { _id: element._id, Valeur: JSON.stringify(element.geometry) };\r\n          allclient.push(geo);\r\n          transaction = db.transaction(['sector'], 'readwrite');\r\n          const objectStore = transaction.objectStore('sector');\r\n          const request = objectStore.put(geo);\r\n          request.onsuccess = function (event) {\r\n            console.log('done Adding Sector login');\r\n          };\r\n        });\r\n        this.getDataSector();\r\n      });\r\n    };\r\n  }\r\n  /////////////////////////////////////////////////////////////////\r\n\r\n  /////////////// ********* Synchronize Action **********/////////////////////////\r\n  async sync() {\r\n    this.PutData();\r\n    this.openAlertDialog();\r\n    console.log('Synchronize (Get data from the Database)');\r\n  }\r\n  /////////////////////////////////////////////////////////////////\r\n\r\n//////////********  Check if location inside Sector ***********//////////\r\n  isMarkerInsidePolygon(marker, poly) {\r\n    const polyPoints = poly.getLatLngs();\r\n    const x = marker.getLatLng().lat, y = marker.getLatLng().lng;\r\n    let inside = false;\r\n    for (let i = 0, j = polyPoints.length - 1; i < polyPoints.length; j = i++) {\r\n      const xi = polyPoints[i].lat, yi = polyPoints[i].lng;\r\n      const xj = polyPoints[j].lat, yj = polyPoints[j].lng;\r\n\r\n      const intersect = ((yi > y) != (yj > y))\r\n        && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\r\n      if (intersect) { inside = !inside; }\r\n    }\r\n    return inside;\r\n  }\r\n\r\n  Insid() {\r\n    this.statusAddClient = false;\r\n    this.AllSecteurs.forEach(elem => {\r\n      console.log(elem)\r\n      const lat = this.myMarker._latlng.lat;\r\n      const lon = this.myMarker._latlng.lng;\r\n      const test = turf.point([lon, lat]);\r\n      const poly = turf.polygon(elem.coor[0]);\r\n      if (turf.booleanPointInPolygon(test, poly)) {\r\n        this.statusAddClient = true;\r\n        this.mySector = elem.sector;\r\n        console.log(this.mySector);\r\n        console.log(\"In sector \")\r\n      } \r\n    });\r\n  }\r\n  //////////////////////////////////////////////////////////////////\r\n\r\n  ///////********************* Open Dialog *********************////////\r\n\r\n  openAlertDialog() {\r\n    const dialogRef = this.dialog.open(AlertDialogComponent, {\r\n      data: {\r\n        message: 'Synchronization is Done',\r\n        buttonText: {\r\n          ok: 'Ok',\r\n        }\r\n      }\r\n    });\r\n  }\r\n  ////////////////////////////////////////////////////////////////////\r\n\r\n  ///////***** Filter Done/Not Done PDV **********///////////////////\r\n  option_done = \"\"\r\n\r\n  onChange() {\r\n    console.log(this.option_done)\r\n    if (this.option_done == \"Done\") {\r\n      console.log(\"Not green not validated should removed\")\r\n      this.markersCluster.eachLayer((layer: any) => {\r\n        if (layer.feature.properties.status != \"green\") {\r\n          this.markersCluster.removeLayer(layer);\r\n        }\r\n      })\r\n    } else if (this.option_done == \"Not_Done\") {\r\n      console.log(\"validated should be removed\")\r\n      this.markersCluster.eachLayer((layer: any) => {\r\n        if (layer.feature.properties.status == \"green\") {\r\n          this.markersCluster.removeLayer(layer);\r\n        }\r\n      })\r\n    } else {\r\n      console.log(\"All Data will be showed\")\r\n      this.markersCluster.clearLayers();\r\n      this.getDataClient();\r\n    }\r\n  }\r\n  ////////////////////////////////////////////////////////////////////////\r\n\r\n  //////////////****************Filtrage Retail/AuditRetail ***********/////////////////\r\n  option_retail = \"\"\r\n  onChange2() {\r\n    console.log(this.option_retail)\r\n    if (this.option_retail == \"Audit\") {\r\n      console.log(\"Gros will be showed\")\r\n      this.markersCluster.eachLayer((layer: any) => {\r\n        if (layer.feature.properties?.TypeDPV == \"Gros\") {\r\n          console.log(layer)\r\n          this.markersCluster.removeLayer(layer)\r\n        }\r\n      })\r\n    } else if (this.option_retail == \"Audit_Retail\") {\r\n      console.log(\"Detail will be showed\")\r\n      this.markersCluster.eachLayer((layer: any) => {\r\n        if (layer.feature.properties?.TypeDPV == \"Detail\") {\r\n          console.log(layer)\r\n          this.markersCluster.removeLayer(layer);\r\n        }\r\n      })\r\n    } else {\r\n      console.log(\"All Data will be showed\")\r\n      this.markersCluster.clearLayers();\r\n      this.getDataClient();\r\n    }\r\n  }\r\n  ///////////////////////////////////////////////////////////////\r\n\r\n  ///////******** Search for a client By id ***********///////////\r\n  Search(IDGeomerty) {\r\n    console.log(IDGeomerty);\r\n    //tslint:disable-next-line:no-shadowed-variable\r\n    this._serviceClient.getClientByID(IDGeomerty).subscribe(res => {\r\n      if (IDGeomerty != null) {\r\n        this.map.setView(new L.LatLng(res[\"geometry\"].geometry.coordinates[1], res[\"geometry\"].geometry.coordinates[0]), 30, { animation: true }).addTo(this.map);\r\n      }\r\n    });\r\n  }\r\n  /////////////////////////////////////////////////////////\r\n\r\n  ///////************** Search for the client from indexDB ***********////////////\r\n  SearchIndexDB(IDGeomerty){\r\n    console.log(\"Update in IndexedDB\")\r\n    var db, transaction;\r\n    var request = window.indexedDB.open(\"off\", this.version)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      transaction = db.transaction(['data'], 'readwrite');\r\n      var objectStore = transaction.objectStore(\"data\");\r\n      var objectStoreRequest = objectStore.get(IDGeomerty);\r\n      objectStoreRequest.onsuccess = (event) => {\r\n        var elm = JSON.parse(objectStoreRequest.result.Valeur);\r\n        console.log(elm.geometry.coordinates)\r\n        this.map.setView(new L.LatLng(elm.geometry.coordinates[1], elm.geometry.coordinates[0]), 18);\r\n      }\r\n    }\r\n  }\r\n  //////////////////////////////////////////////////////////////////////////////////\r\n\r\n  /////////////*********** EXTRACT DATA ******/////////////////\r\n  exportexcel() {\r\n    this._serviceClient.extract().subscribe(res => {\r\n      const ws: XLSX.WorkSheet = XLSX.utils.json_to_sheet(res)\r\n      //generate workbook and add the worksheet \r\n      const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n      //save to file \r\n      XLSX.writeFile(wb, \"Data_Extraction.xlsx\");\r\n    });\r\n  }\r\n  ////////////////////////////////////////////////////////////\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","<div class=\"map-frame\">\r\n      <div id=\"map\"></div>\r\n      <div class=\"buttons-wrapper\">\r\n            <div class=\"my-location-container\">\r\n\r\n                  <button mat-icon-button aria-label=\"small button\" (click)=\"locate()\">\r\n                        <mat-icon>my_location</mat-icon>\r\n                  </button>\r\n\r\n            </div>\r\n            <button mat-button class=\"btn-primary\" [disabled]=\"!statusAddClient\"\r\n                  [routerLink]=\"['/addclient', mySector]\">Add PDV</button>\r\n            <button mat-button class=\"btn-warning\" (click)=\"sync()\">Synchronize</button>\r\n            <button mat-button class=\"btn-warning\" style=\"background-color:rgb(56, 117, 231)\" (click)=\"exportexcel()\"\r\n                  *ngIf=\"user.role== 'Admin' || user.role== 'Back Office'\">Extract</button>\r\n      </div>\r\n      <div class=\"map-top-elements\">\r\n            <!-- <button mat-raised-button class=\"my-location\">\r\n                  <mat-icon>my_location</mat-icon>\r\n            </button>  -->\r\n            <!--====================  -->\r\n            <div class=\"element-container\">\r\n                  <div class=\"search-input\">\r\n                        <mat-icon>search</mat-icon>\r\n                        <input type=\"text\" name=\"search\" autocomplete=\"off\" [(ngModel)]=\"IDGeomerty\">\r\n                  </div>\r\n                  <button (click)=\"SearchIndexDB(IDGeomerty)\">Search</button>\r\n            </div>\r\n            <!-- =============== -->\r\n            <div class=\"element-container\">\r\n                  <div class=\"select-input\">\r\n                        <mat-select panelClass=\"selectPanel\" (selectionChange)=\"onChange2()\" [(ngModel)]=\"option_retail\"\r\n                              placeholder=\"PDV Type\">\r\n                              <mat-option value=\"Audit\">Gros</mat-option>\r\n                              <mat-option value=\"Audit_Retail\">Detail</mat-option>\r\n                              <mat-option value=\"Other\">All</mat-option>\r\n                        </mat-select>\r\n                  </div>\r\n            </div>\r\n            <div class=\"element-container\">\r\n                  <div class=\"select-input\">\r\n                        <mat-select panelClass=\"selectPanel\" (selectionChange)=\"onChange()\" [(ngModel)]=\"option_done\"\r\n                              placeholder=\"All\">\r\n                              <mat-option value=\"All\">All</mat-option>\r\n                              <mat-option value=\"Done\"> Done</mat-option>\r\n                              <mat-option value=\"Not_Done\">Not Done</mat-option>\r\n                        </mat-select>\r\n                  </div>\r\n            </div>\r\n      </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { OnlineOfflineServiceService } from '../online-offline-service.service';\r\nimport { ClientsService } from '../clients.service';\r\nimport { AlertDialogComponent } from '../alert-dialog/alert-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ThrowStmt } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-offline',\r\n  templateUrl: './offline.component.html',\r\n  styleUrls: ['./offline.component.css']\r\n})\r\nexport class OfflineComponent implements OnInit {\r\n  /////*********** VARIABLE'S DECLARATION ********/////////////\r\n  id = [];\r\n  idsupdates = [];\r\n  idsdeletes = []\r\n  ///////////////////////////////////////////////////////////\r\n\r\n  /////************* CONSTRUCTOR ************///////////\r\n\r\n  constructor(private readonly onlineOfflineService: OnlineOfflineServiceService,\r\n    private clientService: ClientsService,\r\n    private dialog: MatDialog) {\r\n    this.getid()\r\n    this.getidsup()\r\n    this.getidsDel()\r\n  }\r\n  /////////////////////////////////////////////////////\r\n\r\n  ////*********** GetID FOR ADD CLIENT *********////////\r\n  getid() {\r\n    this.id = this.clientService.getShow()\r\n    console.log(this.id)\r\n  }\r\n  /////////////////////////////////////////////////////\r\n\r\n  ////*********** GetID FOR UPDATE CLIENT *********////////\r\n  getidsup() {\r\n    this.idsupdates = this.clientService.getID()\r\n    console.log(this.idsupdates)\r\n  }\r\n  ////////////////////////////////////////////////////\r\n   ////*********** GetID FOR DELETE CLIENT *********////////\r\n  getidsDel() {\r\n    this.idsdeletes = this.clientService.getIDdelete()\r\n    console.log(this.idsdeletes)\r\n  }\r\n  ////////////////////////////////////////////////////\r\n\r\n  /////********** SYNCHRONISE ADD CLIENT*********/////////\r\n\r\n  send(id) {\r\n    console.log(id)\r\n    if (this.onlineOfflineService.isOnline) {\r\n      this.clientService.sendItemsFromIndexedDb(id)\r\n      var index = this.id.indexOf(id);\r\n      if (index > -1) {\r\n        this.id.splice(index, 1);\r\n      }\r\n      var message = \"data sent successfuly\";\r\n      var btn = \"Continue\"\r\n      this.openAlertDialog(message, btn)\r\n\r\n    } else {\r\n      var message = \"You are still offline !\";\r\n      var btn = \"Continue\"\r\n      this.openAlertDialog(message, btn)\r\n    }\r\n  }\r\n  //////////////////////////////////////////////////////////\r\n\r\n  /////********** SYNCHRONISE UPDATE CLIENT*********/////////\r\n  sendupdate(id) {\r\n    console.log(id)\r\n    if (this.onlineOfflineService.isOnline) {\r\n      this.clientService.sendItemsUpdated(id)\r\n      var index = this.idsupdates.indexOf(id);\r\n      if (index > -1) {\r\n        this.idsupdates.splice(index, 1);\r\n      }\r\n      var message = \"data sent successfuly\";\r\n      var btn = \"Continue\"\r\n      this.openAlertDialog(message, btn)\r\n    } else {\r\n      var message = \"You are still offline !\";\r\n      var btn = \"Continue\"\r\n      this.openAlertDialog(message, btn)\r\n    }\r\n  }\r\n  //////////////////////////////////////////////////////////\r\n  /////********** SYNCHRONISE DELETE CLIENT*********/////////\r\n  senddelete(id) {\r\n    console.log(id)\r\n    if (this.onlineOfflineService.isOnline) {\r\n      this.clientService.sendItemsDeleted(id)\r\n      var index = this.idsdeletes.indexOf(id);\r\n      if (index > -1) {\r\n        this.idsupdates.splice(index, 1);\r\n      }\r\n      var message = \"data sent successfuly\";\r\n      var btn = \"Continue\"\r\n      this.openAlertDialog(message, btn)\r\n    } else {\r\n      var message = \"You are still offline !\";\r\n      var btn = \"Continue\"\r\n      this.openAlertDialog(message, btn)\r\n    }\r\n  }\r\n  //////////////////////////////////////////////////////////\r\n\r\n  openAlertDialog(msg, btn) {\r\n    const dialogRef = this.dialog.open(AlertDialogComponent, {\r\n      data: {\r\n        message: msg,\r\n        buttonText: {\r\n          ok: btn,\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // private async sendItemsFromIndexedDb() {\r\n  //   console.log(\"sending items\");\r\n  //   // const allItems: any[] = await this.db[\"client\"].toArray();\r\n  //   var db; var transaction; var upgradeDb\r\n  //   var request = window.indexedDB.open(\"MyTestDatabase\", 10)\r\n  //   // upgradeDb.createObjectStore('client');\r\n  //   request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n  //   console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n  //   };\r\n  //   request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n  //     db = event.target.result;\r\n  //     console.log(\"success\")\r\n  //     console.log(db)\r\n  //     transaction = db.transaction(['client'], 'readwrite');\r\n  //     var objectStore = transaction.objectStore(\"client\");\r\n  //     var objectStoreRequest = objectStore.getAll();\r\n  //     objectStoreRequest.onsuccess = event => {\r\n  //       var all = event.target.result\r\n  //       // console.log(\"------------------------\")\r\n  //        console.log(all)\r\n  //       // console.log(\"------------------------\")\r\n  //       all.forEach(element => {\r\n  //         // console.log(\"---\")\r\n  //         console.log(element)\r\n  //         this.clientService.SendClient(element).subscribe(res => {\r\n  //           console.log(res);\r\n\r\n  //         })\r\n  //         console.log(\"data sent succusfuly\")\r\n  //       })\r\n\r\n  //     }\r\n  //     db.client.clear();\r\n  //     // objectStoreRequest.onerror=event=>{\r\n  //     //   console.log(event)\r\n  //     // }\r\n  //   }\r\n  // }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"containe-ids\">\r\n    <p>Clients added waiting for sync</p>\r\n    <div class=\"sync\">\r\n        <div *ngFor=\"let uuid of id\" class=\"clients-div\">\r\n            <label>{{uuid}}</label>\r\n            <button mat-button class=\"btn-green\" (click)=\"send(uuid)\">Send</button>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div class=\"containe-ids\">\r\n    <p>Clients updated waiting for sync</p>\r\n    <div class=\"sync\">\r\n        <div *ngFor=\"let uuidd of idsupdates\" class=\"clients-div\">\r\n            <label>{{uuidd}}</label>\r\n            <button mat-button class=\"btn-green\" (click)=\"sendupdate(uuidd)\">Send</button>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div class=\"containe-ids\">\r\n    <p>Clients deleted waiting for sync</p>\r\n    <div class=\"sync\">\r\n        <div *ngFor=\"let uuuidd of idsdeletes\" class=\"clients-div\">\r\n            <label>{{uuuidd}}</label>\r\n            <button mat-button class=\"btn-green\" (click)=\"senddelete(uuuidd)\">Send</button>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\ndeclare const window: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OnlineOfflineServiceService {\r\n\r\n  private internalConnectionChanged = new Subject<boolean>();\r\n\r\n  get connectionChanged() {\r\n    return this.internalConnectionChanged.asObservable();\r\n  }\r\n\r\n  get isOnline() {\r\n    return !!window.navigator.onLine;\r\n  }\r\n\r\n  constructor() {\r\n    window.addEventListener('online', () => this.updateOnlineStatus());\r\n    window.addEventListener('offline', () => this.updateOnlineStatus());\r\n  }\r\n\r\n  private updateOnlineStatus() {\r\n    console.log(window.navigator.onLine)\r\n    this.internalConnectionChanged.next(window.navigator.onLine);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-routes',\r\n  templateUrl: './routes.component.html',\r\n  styleUrls: ['./routes.component.css']\r\n})\r\nexport class RoutesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>routes works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SettingsService } from './settings.service';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  ////********* VARIABLE'S DECLARATION *****////////\r\n  time=2;\r\n  Message;\r\n\r\n\r\n  /////******** CONSTRUCTOR *********///////////\r\n  constructor(private _setting:SettingsService,\r\n              private _router:Router) { }\r\n\r\n  ////********** INIT FUNCTION ********/////////\r\n\r\n  ngOnInit(): void {\r\n    this.getSMS()\r\n  }\r\n\r\n  ////////****** SEND SMS TIMER *******//////////\r\n  \r\n  send(){\r\n    this._setting.setTimeSMS(this.time).subscribe(res=>{\r\n      console.log(res)\r\n      this.Message=res\r\n      this._router.navigate([''])\r\n    })\r\n  }\r\n  //////********* GET SMS TIMER *******//////////\r\n\r\n  getSMS(){\r\n    this._setting.getSettings('sms').subscribe(res=>{\r\n      if(res!=null){\r\n        this.time=res.details.time\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<br>\r\ntime of validity of SMS : <input name=\"time\" type=\"number\" min=\"1\" max=\"10\" [(ngModel)]=\"time\" />\r\n<button (click)=\"send()\">set time</button>\r\n{{Message}}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SettingsService {\r\n  \r\n  uri = \"http://localhost:3000\";\r\n  private _setting =this.uri + \"/api1/settings\";\r\n  private _user=this.uri+\"/api1/register\"\r\n  private _user_email=this.uri+\"/api1/GeEmail\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n  setTimeSMS(time) {\r\n    return this.http.post<any>(this._setting, { 'time': time })\r\n  }\r\n  getSettings(params) {\r\n    console.log(params)\r\n    return this.http.get<any>(this._setting+\"?\"+params);\r\n  }\r\n  CreateUser(user){\r\n    return this.http.post<any>(this._user,user)\r\n  }\r\n  CheckEmail(){\r\n      return this.http.get<any>(this._user_email)\r\n  }\r\n  UpdateUser(data){\r\n    return this.http.put(this.uri+\"/api1/UpdateUser\",data);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '../authentication.service';\r\n@Component({\r\n  selector: 'app-sidebar-menu',\r\n  templateUrl: './sidebar-menu.component.html',\r\n  styleUrls: ['./sidebar-menu.component.css']\r\n})\r\nexport class SidebarMenuComponent implements OnInit {\r\n   \r\n  /////********** VARIABLE'S DECLARATION **********///////\r\n  sidenavWidth = 15;\r\n  user\r\n  myname;\r\n\r\n  constructor(public _authService: AuthenticationService) {  }\r\n\r\n  ngOnInit(): void {\r\n   this.user= JSON.parse(localStorage.getItem(\"user\"))\r\n   console.log(this.user)\r\n    this.myname=this.user.name;\r\n  }\r\n\r\n  getLogged(){\r\n    return this._authService.loggedIn()\r\n  }\r\n \r\n}\r\n","<mat-sidenav-container fullscreen>\r\n\r\n    <mat-sidenav #sidenav mode=\"side\" class=\"example-sidenav\" (click)=\"sidenav.toggle()\" opened=\"false\">\r\n        <mat-nav-list>\r\n            <mat-list-item routerLink=\"map\">\r\n                <mat-icon mat-list-icon>home</mat-icon>\r\n                <div fxFlex=\"10\"></div>\r\n                <div *ngIf=\"sidenavWidth > 6\" class=\"sidenav-item\">\r\n                    <span><img src=\"/assets/images/stalker.png\" alt=\"\" class=\"logo\"></span>\r\n                </div>\r\n\r\n            </mat-list-item>\r\n            <mat-list-item routerLink=\"map\" routerLinkActive=\"active\">\r\n                <mat-icon mat-list-icon>location_on</mat-icon>\r\n                <div fxFlex=\"10\"></div>\r\n                <div *ngIf=\"sidenavWidth > 6\" class=\"sidenav-item\">\r\n                    <span>Map</span>\r\n                </div>\r\n            </mat-list-item>\r\n\r\n            <mat-list-item routerLink=\"clients\" routerLinkActive=\"active\">\r\n                <mat-icon mat-list-icon>store</mat-icon>\r\n                <div fxFlex=\"10\"></div>\r\n                <div *ngIf=\"sidenavWidth > 6\" class=\"sidenav-item\">\r\n                    <span>Clients</span>\r\n                </div>\r\n            </mat-list-item>\r\n\r\n            <mat-list-item routerLink=\"users\" routerLinkActive=\"active\" *ngIf=\"user.role == 'Admin'\">\r\n                <mat-icon mat-list-icon>groups</mat-icon>\r\n                <div fxFlex=\"10\"></div>\r\n                <div *ngIf=\"sidenavWidth > 6\" class=\"sidenav-item\">\r\n                    <span>Users Management</span>\r\n                </div>\r\n            </mat-list-item>\r\n\r\n            <mat-list-item routerLink=\"routes\" routerLinkActive=\"active\" *ngIf=\"user.role != 'Admin'\">\r\n                <mat-icon mat-list-icon>route</mat-icon>\r\n                <div fxFlex=\"10\"></div>\r\n                <div *ngIf=\"sidenavWidth > 6\" class=\"sidenav-item\">\r\n                    <span>Routes</span>\r\n                </div>\r\n            </mat-list-item>\r\n\r\n            <mat-list-item routerLink=\"planning\" routerLinkActive=\"active\" *ngIf=\"user.role != 'Admin'\">\r\n                <mat-icon mat-list-icon>edit_calendar</mat-icon>\r\n                <div fxFlex=\"10\"></div>\r\n                <div *ngIf=\"sidenavWidth> 6\" class=\"sidenav-item\">\r\n                    <span>Planning</span>\r\n                </div>\r\n            </mat-list-item>\r\n\r\n\r\n            <mat-list-item routerLink=\"offline\" routerLinkActive=\"active\"  *ngIf=\"user.role == 'Seller' || user.role == 'Auditor'\">\r\n                <mat-icon mat-list-icon>refresh</mat-icon>\r\n                <div fxFlex=\"10\"></div>\r\n                <div *ngIf=\"sidenavWidth> 6\" class=\"sidenav-item\">\r\n                    <span>Synchronisation</span>\r\n                </div>\r\n            </mat-list-item>\r\n\r\n            <mat-list-item routerLink=\"deleteRequests\" routerLinkActive=\"active\" *ngIf=\"user.role== 'Admin'\">\r\n                <mat-icon mat-list-icon>auto_delete</mat-icon>\r\n                <div fxFlex=\"10\"></div>\r\n                <div *ngIf=\"sidenavWidth> 6\" class=\"sidenav-item\">\r\n                    <span>Delete Requests</span>\r\n                </div>\r\n            </mat-list-item>\r\n            \r\n            <mat-list-item routerLink=\"settings\" routerLinkActive=\"active\" *ngIf=\"user.role== 'Admin'\">\r\n                <mat-icon mat-list-icon>settings</mat-icon>\r\n                <div fxFlex=\"10\"></div>\r\n                <div *ngIf=\"sidenavWidth> 6\" class=\"sidenav-item\">\r\n                    <span>Settings</span>\r\n                </div>\r\n            </mat-list-item>\r\n\r\n            <mat-list-item routerLink=\"injection\" routerLinkActive=\"active\" *ngIf=\"user.role== 'Admin'\">\r\n                <mat-icon mat-list-icon>file_download</mat-icon>\r\n                <div fxFlex=\"10\"></div>\r\n                <div *ngIf=\"sidenavWidth> 6\" class=\"sidenav-item\">\r\n                    <span>Injection</span>\r\n                </div>\r\n            </mat-list-item>\r\n        </mat-nav-list>\r\n    </mat-sidenav>\r\n\r\n    <div class=\"example-sidenav-content\">\r\n        <mat-toolbar class=\"tool\" fxLayout fxLayoutGap=\"16px\">\r\n            <button mat-icon-button>\r\n                <mat-icon (click)=\"sidenav.toggle()\" class=\"sidebar-toggle\">menu</mat-icon>\r\n            </button>\r\n\r\n            <div fxFlex=\"100%\" class=\"flexExpand\"></div>\r\n            <span style=\"font-size: 12px; color: #444242;\">{{myname}}</span>\r\n            <button mat-icon-button [matMenuTriggerFor]=\"logout\" #menuTrigger=\"matMenuTrigger\"\r\n                (click)=\"menuTrigger.openMenu()\">\r\n\r\n                <mat-icon style=\"color: #323030;\">keyboard_arrow_down</mat-icon>\r\n\r\n            </button>\r\n            <!-- Drop down menu for logging out -->\r\n            <mat-menu #logout=\"matMenu\" [overlapTrigger]=\"false\">\r\n                <span (mouseleave)=\"menuTrigger.closeMenu()\"></span>\r\n                <button mat-menu-item (click)=\"_authService.logoutUser()\">\r\n                    <mat-icon>logout</mat-icon>\r\n                    <span>Logout</span>\r\n                </button>\r\n            </mat-menu>\r\n\r\n        </mat-toolbar>\r\n\r\n        <div class=\"body\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n\r\n    </div>\r\n</mat-sidenav-container>","import { Injectable, Injector} from '@angular/core';\r\nimport { HttpInterceptor } from '@angular/common/http'\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private injector: Injector){}\r\n  intercept(req, next) {\r\n    let authService = this.injector.get(AuthenticationService)\r\n    let tokenizedReq = req.clone(\r\n      {\r\n        headers: req.headers.set('Authorization', 'bearer ' + authService.getToken())\r\n      }\r\n    )\r\n    return next.handle(tokenizedReq)\r\n  }\r\n}\r\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\nimport { ClientsService } from '../clients.service';\r\nimport { Observable, Subject } from \"rxjs\";\r\nimport { interval } from 'rxjs';\r\nimport * as geojson from 'geojson';\r\nimport { Router } from '@angular/router';\r\nimport { GeoJsonTypes } from 'geojson';\r\nimport { ThrowStmt } from '@angular/compiler';\r\nimport { IndexdbService } from '../indexdb.service';\r\nimport { OnlineOfflineServiceService } from '../online-offline-service.service';\r\nimport { AdminService } from '../admin/admin.service';\r\n\r\nconst incr = 1;\r\n\r\n@Component({\r\n  selector: 'app-update-client',\r\n  templateUrl: './update-client.component.html',\r\n  styleUrls: ['./update-client.component.css']\r\n})\r\nexport class UpdateClientComponent implements AfterViewInit {\r\n\r\n  ////******************** VARIABLE'S DECLARATION ****************/////\r\n  progress = 0;\r\n  selected = null;\r\n  user = JSON.parse(localStorage.getItem(\"user\"));\r\n  ListCodes = [];\r\n  code = { nbr: null, value: null }\r\n  qrResultString: string;\r\n  isShown: boolean = false;\r\n  nfcShown: boolean = false;\r\n  hide: boolean = false;\r\n  test: boolean = false;\r\n  map;\r\n\r\n  lat = 33.2607691\r\n  lon = -7.6222771\r\n\r\n  icone = L.icon({\r\n    iconUrl: \"assets/green.png\",\r\n    iconSize: [12, 12],\r\n  });\r\n\r\n  circle: any;\r\n\r\n  percentage = 0\r\n  Status = true\r\n  show = false\r\n  list = []\r\n\r\n  geojsonFeature = {\r\n    type: 'Feature' as GeoJsonTypes, // or type: <GeoJsonTypes> 'Feature',\r\n    properties: {\r\n      name: 'Mohamed',\r\n      amenity: 'Baseball Stadium'\r\n    },\r\n    geometry: {\r\n      type: 'Point' as GeoJsonTypes, // or type: <GeoJsonTypes> 'Point',\r\n      coordinates: [-7.6222771, 33.2608691]\r\n    }\r\n  };\r\n\r\n  showVerifCodeInput = false\r\n  showNFCWebcam: boolean = false;\r\n  showPDVWebcam: boolean = false;\r\n  public webcamNFCImage = null;\r\n  public webcamPDVImage = null;\r\n  private trigger: Subject<void> = new Subject<void>();\r\n\r\n  clientInfo;\r\n  codeNFC: null;\r\n  TypeDPV: null;\r\n  detailType: null;\r\n  NomPrenom: null;\r\n  PhoneNumber: null;\r\n  scan: boolean = false;\r\n  nfcObject = { Numero_Serie: null, Technologies: null, Type_card: null, UUID: null, NFCPhoto: null }\r\n  clientInfos = {\r\n    codes: [], codeNFC: null, NFCPhoto: null, TypeDPV: null, nfc: this.nfcObject,\r\n    NomPrenom: null, detailType: null, userId: null, userRole: null, PhoneNumber: null, PVPhoto: null, Status: \"red\"\r\n  }\r\n  latclt\r\n  lonclt\r\n\r\n  icon = L.icon({\r\n    iconUrl: \"assets/green.png\",\r\n    iconSize: [12, 12],\r\n  });\r\n\r\n  location_icon = L.icon({\r\n    iconUrl: \"assets/location.png\",\r\n    iconSize: [30, 30]\r\n  });\r\n  markersCluster = new L.MarkerClusterGroup();\r\n  inter;\r\n  acc = 1222000;\r\n  verification_code = null; status; codeSMS;\r\n  //////////////////////////////////////////////////////////////\r\n\r\n  ////********* CONSTUCTOR **********/////////\r\n  constructor(private readonly onlineOfflineService: OnlineOfflineServiceService,\r\n    private clientService: ClientsService,private adminService: AdminService,\r\n    private _router: Router) {\r\n\r\n    this.clientInfo = clientService.getClientInfo();\r\n    console.log('@@@@@@@@@@@@@@@@' + this.clientInfo.NomPrenom)\r\n  }\r\n  //////////////////////////////////////////////////\r\n\r\n  /////////************** INTERFACE FUNCTIONS **************/////////////\r\n  manageProgress() {\r\n    if (this.progress === 100) {\r\n      this.progress = 0;\r\n    } else {\r\n      this.progress = this.progress + incr;\r\n    }\r\n  }\r\n\r\n  showcheck() {\r\n    this.Status = true\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  clearResult(): void {\r\n    this.qrResultString = null;\r\n  }\r\n\r\n  toggleShow(nbr: number, resultString: string) {\r\n    console.log(nbr);\r\n    console.log(resultString);\r\n    console.log(this.ListCodes);\r\n\r\n    this.isShown = !this.isShown;\r\n\r\n    if (nbr === 1) {\r\n      this.code = { nbr: nbr, value: resultString }\r\n      this.upsert(this.ListCodes, this.code)\r\n      this.qrResultString = null;\r\n\r\n    }\r\n    if (nbr === 2) {\r\n      this.code = { nbr: nbr, value: resultString }\r\n      this.upsert(this.ListCodes, this.code)\r\n      this.qrResultString = null;\r\n\r\n    }\r\n    if (nbr === 3) {\r\n      this.code = { nbr: nbr, value: resultString }\r\n      this.upsert(this.ListCodes, this.code)\r\n      this.qrResultString = null;\r\n\r\n    }\r\n    if (nbr === 4) {\r\n      this.code = { nbr: nbr, value: resultString }\r\n      this.upsert(this.ListCodes, this.code)\r\n      this.qrResultString = null;\r\n    }\r\n  }\r\n\r\n  upsert(array, item) { // (1)\r\n    const i = array.findIndex(_item => _item.nbr === item.nbr);\r\n    if (i > -1) array[i] = item; // (2)\r\n    else array.push(item);\r\n  }\r\n\r\n  onCodeResult(resultString: string) {\r\n    this.qrResultString = resultString;\r\n  }\r\n\r\n  addNewComponent() {\r\n    this.show = true\r\n    this.Status = false\r\n  }\r\n\r\n  CheckCodes() {\r\n    this.nfcShown = !this.nfcShown;\r\n    this.test = true;\r\n    console.log(this.ListCodes)\r\n    this.clientInfos.codes = this.ListCodes\r\n  }\r\n  toggleNFCWebcam() {\r\n    this.showNFCWebcam = !this.showNFCWebcam;\r\n  }\r\n\r\n  displayNFCam() {\r\n    this.showNFCWebcam = !this.showNFCWebcam;\r\n  }\r\n\r\n  triggerSnapshot(): void {\r\n    this.trigger.next();\r\n  }\r\n\r\n  get triggerObservable(): Observable<void> {\r\n    return this.trigger.asObservable();\r\n  }\r\n\r\n  handleNFCImage(webcamNFCImage): void {\r\n    console.info('received webcam image', webcamNFCImage);\r\n    this.webcamNFCImage = webcamNFCImage;\r\n    this.clientInfos.NFCPhoto = webcamNFCImage.imageAsDataUrl;\r\n\r\n  }\r\n\r\n  togglePDVWebcam() {\r\n    this.showPDVWebcam = !this.showPDVWebcam;\r\n  }\r\n\r\n\r\n  displayPDVcam() {\r\n    this.showPDVWebcam = !this.showPDVWebcam;\r\n  }\r\n\r\n  handlePDVImage(webcamPDVImage) {\r\n    console.info('received webcam image', webcamPDVImage);\r\n    this.webcamPDVImage = webcamPDVImage;\r\n    this.clientInfos.PVPhoto = webcamPDVImage.imageAsDataUrl;\r\n  }\r\n  ///////////////////////////////////////////////////////////\r\n\r\n  ////*************** INIT FUNCTON *************/////\r\n  ngAfterViewInit(): void {\r\n    this.initMap();\r\n    this.clientInfo = this.clientService.getClientInfo();\r\n    console.log(this.clientInfo)\r\n  }\r\n\r\n  ///////////*********** MAP FUNCTION **************///////\r\n  private initMap(): void {\r\n    this.Status = true\r\n    this.testTimer()\r\n    this.map = L.map('map2', {\r\n      center: [this.lat, this.lon],\r\n      zoom: 14,\r\n      zoomControl: true\r\n    });\r\n    const tiles = L.tileLayer('https://map.novatis.tech/hot/{z}/{x}/{y}.png', {\r\n      maxZoom: 30,\r\n      minZoom: 0\r\n    });\r\n    tiles.addTo(this.map);\r\n    var location_icon = L.icon({\r\n      iconUrl: \"assets/location.png\",\r\n      iconSize: [30, 30]\r\n    });\r\n    var marker = L.marker([this.lat, this.lon], { icon: location_icon })\r\n    this.inter = interval(1000).subscribe(x => {\r\n      if (navigator.geolocation) {\r\n        if (this.percentage == 100) {\r\n          this.inter.unsubscribe();\r\n          this.clientInfos[\"lat\"] = this.latclt\r\n          this.clientInfos[\"lon\"] = this.lonclt\r\n        }\r\n        var options = {\r\n          enableHighAccuracy: false,\r\n          timeout: 5000,\r\n          maximumAge: 2000\r\n        };\r\n        var geoId = navigator.geolocation.watchPosition((position: GeolocationPosition) => {\r\n          if (position) {\r\n            //console.log(\"Latitude: \" + position.coords.latitude +\r\n            // \" // Longitude: \" + position.coords.longitude);\r\n            var newlat = position.coords.latitude\r\n            var newLon = position.coords.longitude;\r\n            if (newlat != this.lat || newLon != this.lat) {\r\n              this.lat = newlat\r\n              this.lon = newLon\r\n              this.list.push(position)\r\n              if (position.coords.accuracy < this.acc) {\r\n                this.acc = position.coords.accuracy\r\n                this.lat = position.coords.latitude\r\n                this.lon = position.coords.longitude\r\n                this.latclt = position.coords.latitude\r\n                this.lonclt = position.coords.longitude\r\n              }\r\n\r\n              this.map.removeLayer(marker);\r\n              this.show = false\r\n              this.Status = true\r\n              marker = new (L.marker as any)([this.lat, this.lon], { icon: location_icon }).addTo(this.map);\r\n            }\r\n          }\r\n        },\r\n          (error: GeolocationPositionError) => console.log(error), options);\r\n      } else {\r\n        alert(\"Geolocation is not supported by this browser.\");\r\n      }\r\n    });\r\n  }\r\n\r\n  // distance;\r\n  getDistance(){\r\n    //console.log(\"Distance2 :\"+this.Distance );\r\n    return this.clientService.getDistance();\r\n  }\r\n  getLocation(){\r\n\r\n    interval(1000).subscribe(x => {\r\n    console.log(\"yesssss\")\r\n    if (navigator.geolocation) {\r\n      let raduis =3;\r\n      this.map.setView(new L.LatLng(this.latclt, this.lonclt), 11, { animation: true });\r\n      L.circle([this.latclt, this.lonclt], {color:\"blue\",fillColor:\"#cce6ff\",radius:raduis}).addTo(this.map);\r\n  \r\n        console.log('LatitudeOfUpadate: ' + this.latclt +\r\n          ' LongitudeOfUpadate: ' + this.lonclt);\r\n      this.clientService.getPosition({\"MapUp\":[this.latclt, this.lonclt],\"Raduis\":raduis});\r\n\r\n      }\r\n    })\r\n\r\n  }\r\n  \r\n  SessionTerminate=false;\r\n  ValidatePosition(){\r\n\r\n    return this.clientService.ActiveTheButton();\r\n  }\r\n  \r\n  ////////////////////////////////////////////////////////////////////\r\n\r\n  /////*********** TIMER FUNCTION *******/////////\r\n  testTimer() {\r\n    this.percentage = 0\r\n    interval(300).subscribe(x => {\r\n      if (this.percentage < 100) {\r\n        this.percentage += 4\r\n      }\r\n    });\r\n  }\r\n\r\n  ///////////***** Read NFC and Verfiy SMS from NanoHTTPD **********///////////////\r\n\r\n  //**** READ NFC ****//\r\n  Read() {\r\n    console.log(\"read\")\r\n\r\n    this.clientService.getNFC().subscribe(\r\n      res => {\r\n        console.log(res)\r\n        this.clientInfo.geometry.properties.nfc = res;\r\n        console.log(this.clientInfo)\r\n      }\r\n    )\r\n  }\r\n\r\n  //**** SEND SMS ****//\r\n  SendSMS(phone) {\r\n    this.clientService.getSMS(phone).subscribe(\r\n      res => {\r\n        console.log(res)\r\n        this.verification_code = res.code\r\n      });\r\n  }\r\n\r\n  //**** VERIFY SMS ****//\r\n  Verify(code: string) {\r\n    this.clientInfos.PhoneNumber = this.PhoneNumber\r\n    this.SendSMS(this.PhoneNumber);\r\n  }\r\n  VerifySMS() {\r\n    if (this.verification_code === this.codeSMS) {\r\n      this.status = \"the code is correct\"\r\n    } else {\r\n      this.status = \"the code is incorrect\"\r\n    }\r\n  }\r\n\r\n  /////////////////////****** UPDATE CLIENT INFOS *******/////////////////\r\n  async Update() {\r\n    // ***************** scanned codes ************* //\r\n    if (this.ListCodes.length != 0) {\r\n      this.ListCodes.forEach(element => {\r\n        if (element.nbr == 1) {\r\n          this.clientInfo.geometry.properties.codeDANON = element.value;\r\n        } else if (element.nbr == 2) {\r\n          this.clientInfo.geometry.properties.codeCOLA = element.value\r\n        } else if (element.nbr == 3) {\r\n          this.clientInfo.geometry.properties.codeFGD = element.value\r\n        } else if (element.nbr == 4) {\r\n          this.clientInfo.geometry.properties.codeQR = element.value\r\n        }\r\n      });\r\n    }\r\n    if (this.clientInfos.NFCPhoto) {\r\n      this.clientInfo.geometry.properties.nfc.NFCPhoto = this.clientInfos.NFCPhoto\r\n      this.clientInfo.geometry.properties.NFCP = null\r\n    }\r\n\r\n    if (this.clientInfos.PVPhoto) {\r\n      this.clientInfo.geometry.properties.PVPhoto = this.clientInfos.PVPhoto\r\n      this.clientInfo.geometry.properties.PVP = null\r\n    }\r\n    // add user ids\r\n    this.clientInfo.geometry.properties.updatedBy = this.user._id;\r\n    this.clientInfo.geometry.properties.userRole = this.user.role;\r\n    this.clientInfo.geometry.properties.updated_at = new Date();\r\n    this.clientInfo.geometry.properties.created_at = this.clientInfo.geometry.properties.created_at;\r\n    console.log('########## Updated Client ##########')\r\n    console.log(this.clientInfo)\r\n    if (this.clientInfo.geometry.properties.codeQR === null) {\r\n      this.clientInfo.geometry.properties.status = \"pink\"\r\n    }\r\n    else {\r\n      this.clientInfo.geometry.properties.status = \"purple\"\r\n    }\r\n    if (!this.onlineOfflineService.isOnline) {\r\n      this.clientService.addTodoUpdate(this.clientInfo)\r\n      this.UpdateIndexDB()\r\n    } else {\r\n      this.clientService.updateClient(this.clientInfo).subscribe(res => {\r\n        this.UpdateIndexDB()\r\n      })\r\n    }\r\n  }\r\n\r\n  //////////************ UPDATE CLIENT IN INDEXEDB ************/////////////\r\n  version = 6;\r\n  UpdateIndexDB() {\r\n    // this.index.ClearData();\r\n    console.log(\"Update in IndexedDB\")\r\n    var db, transaction;\r\n    var request = window.indexedDB.open(\"off\", this.version)\r\n    request.onerror = function (event: Event & { target: { result: IDBDatabase } }) {\r\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\r\n    };\r\n    request.onsuccess = (event: Event & { target: { result: IDBDatabase } }) => {\r\n      db = event.target.result;\r\n      transaction = db.transaction(['data'], 'readwrite');\r\n      var objectStore = transaction.objectStore(\"data\");\r\n      var objectStoreRequest = objectStore.get(this.clientInfo._id);\r\n      console.log(this.clientInfo)\r\n      objectStoreRequest.onsuccess = (event) => {\r\n        var elm = JSON.parse(objectStoreRequest.result.Valeur);\r\n        console.log(\"********************element*****************\")\r\n        console.log(objectStoreRequest.result._id)\r\n        var client = { _id: String(objectStoreRequest.result._id), Valeur: JSON.stringify(this.clientInfo.geometry) }\r\n        console.log(client)\r\n        var objectStoreRequest1 = objectStore.put(client);\r\n        objectStoreRequest1.onsuccess = (event) => {\r\n          console.log('Done Update');\r\n          this._router.navigate(['/map'])\r\n        };\r\n      }\r\n    };\r\n  }\r\n \r\n\r\n \r\n\r\n}\r\n","<div class=\"content-body\">\r\n\r\n    <h2>Update Client</h2>\r\n\r\n    <ng-container *ngIf=\"percentage == 100; else elseTemplate\">\r\n        <p>Position Fixed</p>\r\n    </ng-container>\r\n    <ng-template #elseTemplate>\r\n        <p>Fixing Position...</p>\r\n    </ng-template>\r\n\r\n    <div>\r\n        <pre>pos collectés: {{list.length}}</pre>\r\n        <pre>Accuracy: {{acc}}</pre>\r\n    </div>\r\n\r\n    <div ng-app ng-controller=\"ApplicationController\" class=\"progress-cantainer\">\r\n        <mat-progress-bar mode=\"determinate\" [value]=\"percentage\"></mat-progress-bar>\r\n        <span style=\"position: absolute; top: 0em;\" [ngStyle]=\"{'left': percentage + '%'}\">{{percentage}}%</span>\r\n    </div>\r\n\r\n    <div class=\"map-container\">\r\n        <div id=\"map2\"></div>\r\n    </div>\r\n\r\n    <div>\r\n        <button mat-button class=\"btn-yellow\" (click)=\"showcheck()\"\r\n            [disabled]=\"(percentage!=100) ||  !Status\">Next</button>\r\n    </div>\r\n    <ng-template  #showBtn> \r\n        <button mat-button class=\"btn-yellow\">Recalculate my position</button>\r\n    </ng-template>\r\n    <ng-template  [ngIf]=\"getLocation()\" [ngIfElse]=\"showBtn\"> \r\n    <div class=\"container\" id=\"checkcodes\" *ngIf=\"hide\">\r\n        <div class=\"checkcodes-fields\">\r\n            <div class=\"scan-field\">\r\n                <label class=\"input-label\">Code Centrale Danoune : </label>\r\n                <div>\r\n                    <button mat-button class=\"btn-green\" [disabled]=\"test\"\r\n                        (click)=\"toggleShow(1,qrResultString);\">Scan</button>\r\n                    <div *ngFor=\"let code of ListCodes\" class=\"qr-container\">\r\n                        <span *ngIf=\"code.nbr == 1\">{{ code.value}}</span>\r\n                    </div>\r\n                    <span *ngIf=\"clientInfo.geometry.properties.codeDANON==null, else scanned\" style=\"color: red;\">Not\r\n                        scanned</span>\r\n                    <ng-template #scanned>{{clientInfo.geometry.properties.codeDANON}}</ng-template>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"scan-field\">\r\n                <label class=\"input-label\">Code Coca Cola : </label>\r\n                <div>\r\n                    <button mat-button class=\"btn-green\" [disabled]=\"test\"\r\n                        (click)=\"toggleShow(2,qrResultString)\">Scan</button>\r\n                    <div *ngFor=\"let code of ListCodes\" class=\"qr-container\">\r\n                        <span *ngIf=\"code.nbr == 2\">{{ clientInfo.geometry.properties.codeCOLA}}</span>\r\n                    </div>\r\n                    <span *ngIf=\"clientInfo.geometry.properties.codeCOLA==null, else scanned\" style=\"color: red;\">Not\r\n                        scanned</span>\r\n                    <ng-template #scanned>{{clientInfo.geometry.properties.codeCOLA}}</ng-template>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"scan-field\">\r\n                <label class=\"input-label\">Code FGD : </label>\r\n                <div>\r\n                    <button mat-button class=\"btn-green\" [disabled]=\"test\"\r\n                        (click)=\"toggleShow(3,qrResultString)\">Scan</button>\r\n                    <div *ngFor=\"let code of ListCodes\" class=\"qr-container\">\r\n                        <span *ngIf=\"code.nbr == 3\">{{ clientInfo.geometry.properties.codeFGD}}</span>\r\n                    </div>\r\n                    <span *ngIf=\"clientInfo.geometry.properties.codeFGD==null, else scanned\" style=\"color: red;\">Not\r\n                        scanned</span>\r\n                    <ng-template #scanned>{{clientInfo.geometry.properties.codeFGD}}</ng-template>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <div id=\"divshow\" *ngIf=\"isShown && !scan\" class=\"Scan-container\">\r\n            <p>Scanning...</p>\r\n            <zxing-scanner Class=\"small-video\" (scanSuccess)=\"onCodeResult($event)\"></zxing-scanner>\r\n            <section class=\"results\" *ngIf=\"qrResultString\">\r\n                <div>\r\n                    <small>Result {{code.nbr}} : </small>\r\n                    <strong>{{ qrResultString }}</strong>\r\n                </div>\r\n                <button mat-button class=\"btn-green\" (click)=\"toggleShow(code.nbr,qrResultString)\">Done</button>\r\n            </section>\r\n        </div>\r\n        <button mat-button class=\"btn-yellow\" [disabled]=\"test\" (click)=\"CheckCodes()\">Check codes</button>\r\n\r\n    </div>\r\n\r\n    <div class=\"container\" id=\"nfc\" *ngIf=\"nfcShown\">\r\n\r\n        <div class=\"inputs-container\">\r\n            <div class=\"nfc\">\r\n                <div class=\"scan-field\">\r\n                    <label class=\"input-label\">NFC card puce : </label>\r\n                    <button mat-button class=\"btn-green\" (click)=\"Read()\">Read</button>\r\n                </div>\r\n                <div *ngIf=\"clientInfo.geometry.properties.nfc.UUID!= null\" class=\"nfc-div\">\r\n                    <span>UUID:</span>\r\n                    <p>{{clientInfo.geometry.properties.nfc.UUID}}</p>\r\n                    <span>Numero_Serie:</span>\r\n                    <p>{{clientInfo.geometry.properties.nfc.Numero_Serie}}</p>\r\n                    <span>Type_card:</span>\r\n                    <p>{{clientInfo.geometry.properties.nfc.Type_card}}</p>\r\n                    <span>Technologies:</span>\r\n                    <p>{{clientInfo.geometry.properties.nfc.Technologies}}</p>\r\n                </div>\r\n                <div class=\"scan-field\">\r\n                    <label class=\"input-label\">Qr Code : </label>\r\n                    <div>\r\n                        <button mat-button class=\"btn-green\"\r\n                            (click)=\"toggleShow(4,qrResultString);scan=!scan\">Scan</button>\r\n                        <div *ngFor=\"let code of ListCodes\" class=\"qr-container\">\r\n                            <span *ngIf=\"code.nbr == 4\">{{code.value}}</span>\r\n                        </div>\r\n                        <span *ngIf=\"clientInfo.geometry.properties.codeQR==null, else scanned\" style=\"color: red;\">Not\r\n                            scanned</span>\r\n                        <ng-template #scanned>{{clientInfo.geometry.properties.codeQR}}</ng-template>\r\n                    </div>\r\n\r\n                </div>\r\n                <div *ngIf=\"isShown && scan \" class=\"Scan-container\">\r\n                    <zxing-scanner Class=\"small-video\" (scanSuccess)=\"onCodeResult($event)\"></zxing-scanner>\r\n\r\n                    <section class=\"results\" *ngIf=\"qrResultString\">\r\n                        <div>\r\n                            <small>Result: </small>\r\n                            <strong>{{ qrResultString }}</strong>\r\n                        </div>\r\n                        <button mat-button class=\"btn-green\" (click)=\"toggleShow(code.nbr,qrResultString)\">Done</button>\r\n                    </section>\r\n                </div>\r\n                <div class=\"scan-field\">\r\n                    <label class=\"input-label\">NFC photo : </label>\r\n                    <button mat-button class=\"btn-green\" (click)=\"displayNFCam();\">\r\n                        <mat-icon>camera_alt</mat-icon>\r\n                    </button>\r\n                </div>\r\n                <div *ngIf=\"showNFCWebcam\" class=\"Scan-container\">\r\n                    <webcam [height]=\"200\" [width]=\"500\" [trigger]=\"triggerObservable\"\r\n                        (imageCapture)=\"handleNFCImage($event)\">\r\n                    </webcam>\r\n                    <div class=\"reas-nfc\">\r\n                        <button mat-button class=\"btn-green\" (click)=\"triggerSnapshot();\">Click Here</button>\r\n                        <button mat-button class=\"btn-green\" (click)=\"toggleNFCWebcam();\">Close Camera</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"Scan-container\">\r\n                    <div class=\"snapshot\">\r\n\r\n                        <img *ngIf=\"webcamNFCImage; else nfcphoto\" [height]=\"200\" [width]=\"200\"\r\n                            [src]=\"webcamNFCImage.imageAsDataUrl\" style=\"border-radius: 8px;\" />\r\n\r\n\r\n                        <ng-template #nfcphoto>\r\n                            <img [height]=\"200\" [width]=\"200\" src=\"{{clientInfo.geometry.properties.NFCP}}\"\r\n                                style=\"border-radius: 8px;\" />\r\n                        </ng-template>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"pdv\">\r\n\r\n                <div class=\"field\">\r\n                    <mat-form-field>\r\n                        <mat-select placeholder=\"PDV Type*\" panelClass=\"selectPanel2\"\r\n                            [(ngModel)]=\"clientInfo.geometry.properties.TypeDPV\">\r\n                            <mat-option value=\"Detail\">Detail</mat-option>\r\n                            <mat-option value=\"Gros\">Gros</mat-option>\r\n                            <mat-option value=\"Demi Gros\">Demi Gros</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"field\" *ngIf=\"clientInfo.TypeDPV=='Detail'\">\r\n                    <mat-form-field>\r\n                        <mat-select placeholder=\"PDV Detail Type*\" panelClass=\"selectPanel2\"\r\n                            [(ngModel)]=\"clientInfo.geometry.properties.detailType\">\r\n                            <mat-option value=\"Alimentation\">Alimentation</mat-option>\r\n                            <mat-option value=\"Superette\">Superette</mat-option>\r\n                            <mat-option value=\"Aattar\">Aattar</mat-option>\r\n                            <mat-option value=\"Fruits sec\">Fruits sec</mat-option>\r\n                            <mat-option value=\"Boundif\">Boundif</mat-option>\r\n                            <mat-option value=\"Parfumerie\">Parfumerie</mat-option>\r\n                            <mat-option value=\"Kioske\">Kioske</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                    <mat-form-field>\r\n                        <mat-label>First & Last Name*</mat-label>\r\n                        <input matInput placeholder=\"Typing...\"\r\n                            [(ngModel)]=\"clientInfo.geometry.properties.NomPrenom\" />\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n\r\n                <div class=\"field\">\r\n\r\n                    <mat-form-field>\r\n                        <mat-label>Phone number*</mat-label>\r\n                        <input matInput placeholder=\"+212\" [(ngModel)]=\"clientInfo.geometry.properties.PhoneNumber\" />\r\n                    </mat-form-field>\r\n\r\n                    <button mat-button class=\"btn-green\"\r\n                        (click)=\"Verify('code'); showVerifCodeInput= true\">Verify</button>\r\n                </div>\r\n\r\n                <div class=\"field\" *ngIf=\"showVerifCodeInput\">\r\n                    <mat-form-field>\r\n                        <input matInput placeholder=\"code SMS\" name=\"codeSMS\" [(ngModel)]=\"codeSMS\" />\r\n                    </mat-form-field>\r\n                    <button (click)=\"VerifySMS()\">OK</button>\r\n                    {{status}}\r\n                </div>\r\n                <div class=\"field\">\r\n                    <mat-label class=\"input-label\">PV photo : </mat-label>\r\n                    <button mat-button class=\"btn-green\" (click)=\"displayPDVcam()\">\r\n                        <mat-icon>camera_alt</mat-icon>\r\n                    </button>\r\n                </div>\r\n\r\n                <div *ngIf=\"showPDVWebcam\" class=\"Scan-container\">\r\n                    <webcam [height]=\"200\" [width]=\"500\" [trigger]=\"triggerObservable\"\r\n                        (imageCapture)=\"handlePDVImage($event)\">\r\n                    </webcam>\r\n                    <div class=\"reas-nfc\">\r\n                        <button mat-button class=\"btn-green\" (click)=\"triggerSnapshot()\">Click Here</button>\r\n                        <button mat-button class=\"btn-green\" (click)=\"togglePDVWebcam()\">Close Camera</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <!--          <button class=\"actionBtn\" (click)=\"triggerSnapshot();\">-->\r\n                <!--            Click Here and take the Shot</button>-->\r\n                <div class=\"Scan-container\">\r\n\r\n                    <div class=\"snapshot\">\r\n                        <img *ngIf=\"webcamPDVImage; else pdvphoto\" [height]=\"200\" [width]=\"200\"\r\n                            [src]=\"webcamPDVImage.imageAsDataUrl\" style=\"border-radius: 8px;\" />\r\n\r\n\r\n                        <ng-template #pdvphoto>\r\n                            <img [height]=\"200\" [width]=\"200\" src=\"{{clientInfo.geometry.properties.PVP}}\"\r\n                                style=\"border-radius: 8px;\" />\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <button mat-button class=\"btn-yellow\" (click)=\"Update()\">Update</button>\r\n    </div>\r\n    </ng-template>\r\n\r\n\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":[],"sourceRoot":"webpack:///"}